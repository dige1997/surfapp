{
  "version": 3,
  "sources": ["../../../app/routes/dashboard._index.jsx", "../../../app/components/DashboardData.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard._index.jsx\");\n  import.meta.hot.lastModified = \"1729764420050.683\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport PostCard from \"../components/PostCard\";\nimport { authenticator } from \"../services/auth.server\";\nimport DashboardData from \"../components/DashboardData\";\nexport const meta = () => {\n  return [{\n    title: \"Remix Post App\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\"\n  });\n  const posts = await mongoose.models.Post.find().sort({\n    createdAt: -1\n  }).populate(\"user\");\n  return json({\n    posts\n  });\n}\nexport default function Index() {\n  _s();\n  const {\n    posts\n  } = useLoaderData();\n  return <div className=\"page\">\n      <h1>Posts</h1>\n      <DashboardData />\n    </div>;\n}\n_s(Index, \"TAfyE0i9dyPQ7/d8lmPxXUSIugM=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/DashboardData.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/DashboardData.jsx\");\n  import.meta.hot.lastModified = \"1729764420049.612\";\n}\n// REMIX HMR END\n\nimport React, { useEffect, useState } from \"react\";\nconst DashboardData = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Loading...\"); // Default state until location is determined\n  const [inputCity, setInputCity] = useState(\"\"); // State for input field\n  const apiKey = \"84c59fa875b07f0e54b6dd1ce011f187\"; // Replace with your OpenWeatherMap API key\n\n  // Function to fetch weather data based on city name\n  const fetchWeatherData = async city => {\n    const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Network response was not ok: ${errorText}`);\n      }\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    }\n  };\n\n  // Function to fetch the user's location and get the city name\n  const fetchCityByCoordinates = async (lat, lon) => {\n    const reverseGeoUrl = `http://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=1&appid=${apiKey}`;\n    try {\n      const response = await fetch(reverseGeoUrl);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setCity(data[0].name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching city by coordinates:\", error);\n    }\n  };\n\n  // Function to get the user's coordinates using the browser's Geolocation API\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetchCityByCoordinates(latitude, longitude);\n      }, error => {\n        console.error(\"Error getting user location:\", error);\n        setCity(\"London\"); // Fallback city in case of error\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setCity(\"London\"); // Fallback city if geolocation is unavailable\n    }\n  };\n  useEffect(() => {\n    getUserLocation(); // Get user's location on component mount\n  }, []);\n  useEffect(() => {\n    if (city !== \"Loading...\") {\n      fetchWeatherData(city); // Fetch weather data when the city changes\n    }\n  }, [city]);\n  const handleSearch = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    if (inputCity) {\n      setCity(inputCity); // Update the city state to the user's input\n      setInputCity(\"\"); // Clear the input field\n    }\n  };\n  return <div>\n      <h1>Weather in {city}</h1>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" placeholder=\"Enter city name\" value={inputCity} onChange={e => setInputCity(e.target.value)} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {weatherData ? <div>\n          {weatherData.list && weatherData.list.length > 0 ? <>\n              <p>Temperature: {weatherData.list[0].main.temp} \u00B0C</p>\n              <p>Feels Like: {weatherData.list[0].main.feels_like} \u00B0C</p>\n              <p>Weather: {weatherData.list[0].weather[0].description}</p>\n              <p>Humidity: {weatherData.list[0].main.humidity}%</p>\n              <p>Wind Speed: {weatherData.list[0].wind.speed} m/s</p>\n            </> : <p>No weather data available.</p>}\n        </div> : <p>Loading...</p>}\n    </div>;\n};\n_s(DashboardData, \"NwkBMFwa/Q7UVHuORWOgdYZiI+o=\");\n_c = DashboardData;\nexport default DashboardData;\nvar _c;\n$RefreshReg$(_c, \"DashboardData\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["city", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
