{
  "version": 3,
  "sources": ["../../../app/routes/add-post.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/add-post.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/add-post.jsx\");\n  import.meta.hot.lastModified = \"1729764420050.5789\";\n}\n// REMIX HMR END\n\nimport { redirect } from \"@remix-run/node\";\nimport { Form, useNavigate } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { useState } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\nexport const meta = () => {\n  return [{\n    title: \"Remix Post App - Add New Post\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\"\n  });\n}\nexport default function AddPost() {\n  _s();\n  const [image, setImage] = useState(\"https://placehold.co/600x400?text=Add+your+amazing+image\");\n  const navigate = useNavigate();\n  function handleCancel() {\n    navigate(-1);\n  }\n  return <div className=\"page\">\n      <h1>Add a Post</h1>\n      <Form id=\"post-form\" method=\"post\">\n        <label htmlFor=\"caption\">Caption</label>\n        <input id=\"caption\" name=\"caption\" type=\"text\" aria-label=\"caption\" placeholder=\"Write a caption...\" />\n\n        <label htmlFor=\"image\">Image URL</label>\n        <input name=\"image\" type=\"url\" onChange={e => setImage(e.target.value)} placeholder=\"Paste an image URL...\" />\n\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <img id=\"image-preview\" className=\"image-preview\" src={image ? image : \"https://placehold.co/600x400?text=Paste+an+image+URL\"} alt=\"Choose\" onError={e => e.target.src = \"https://placehold.co/600x400?text=Error+loading+image\"} />\n\n        <div className=\"btns\">\n          <button>Save</button>\n          <button type=\"button\" className=\"btn-cancel\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </Form>\n    </div>;\n}\n_s(AddPost, \"QpCxe6nt8u8U+ySuIgQvx54vUkc=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPost;\nexport async function action({\n  request\n}) {\n  // Get the authenticated user\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\"\n  });\n  console.log(user);\n  const formData = await request.formData();\n  const post = Object.fromEntries(formData);\n\n  // Add the authenticated user's id to the post.user field\n  post.user = user._id;\n  // Save the post to the database\n  await mongoose.models.Post.create(post);\n  return redirect(\"/posts\");\n}\nvar _c;\n$RefreshReg$(_c, \"AddPost\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAyB;AAEzB,sBAAqB;AACrB,IAAAA,gBAAyB;AACzB,kBAA8B;AAqBxB;AA7CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAQO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AAQe,SAAR,UAA2B;AAChC,KAAG;AACH,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,0DAA0D;AAC7F,QAAM,WAAW,YAAY;AAC7B,WAAS,eAAe;AACtB,aAAS,EAAE;AAAA,EACb;AACA,SAAO,mDAAC,SAAI,WAAU,QAClB;AAAA,uDAAC,QAAG,0BAAJ;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,IACd,mDAAC,QAAK,IAAG,aAAY,QAAO,QAC1B;AAAA,yDAAC,WAAM,SAAQ,WAAU,uBAAzB;AAAA;AAAA;AAAA;AAAA,aAAgC;AAAA,MAChC,mDAAC,WAAM,IAAG,WAAU,MAAK,WAAU,MAAK,QAAO,cAAW,WAAU,aAAY,wBAAhF;AAAA;AAAA;AAAA;AAAA,aAAqG;AAAA,MAErG,mDAAC,WAAM,SAAQ,SAAQ,yBAAvB;AAAA;AAAA;AAAA;AAAA,aAAgC;AAAA,MAChC,mDAAC,WAAM,MAAK,SAAQ,MAAK,OAAM,UAAU,OAAK,SAAS,EAAE,OAAO,KAAK,GAAG,aAAY,2BAApF;AAAA;AAAA;AAAA;AAAA,aAA4G;AAAA,MAE5G,mDAAC,WAAM,SAAQ,iBAAgB,6BAA/B;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA,MAC5C,mDAAC,SAAI,IAAG,iBAAgB,WAAU,iBAAgB,KAAK,QAAQ,QAAQ,wDAAwD,KAAI,UAAS,SAAS,OAAK,EAAE,OAAO,MAAM,2DAAzK;AAAA;AAAA;AAAA;AAAA,aAAkO;AAAA,MAElO,mDAAC,SAAI,WAAU,QACb;AAAA,2DAAC,YAAO,oBAAR;AAAA;AAAA;AAAA;AAAA,eAAY;AAAA,QACZ,mDAAC,YAAO,MAAK,UAAS,WAAU,cAAa,SAAS,cAAc,sBAApE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,OAlBG;AAAA;AAAA;AAAA;AAAA,SAmBL;AACJ;AACA,GAAG,SAAS,gCAAgC,OAAO,WAAY;AAC7D,SAAO,CAAC,WAAW;AACrB,CAAC;AACD,KAAK;AAkBL,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
