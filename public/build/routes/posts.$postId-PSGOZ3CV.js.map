{
  "version": 3,
  "sources": ["../../../app/routes/posts.$postId.jsx", "../../../app/components/UserAvatar.jsx", "../../../app/components/PostCard.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/posts.$postId.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/posts.$postId.jsx\");\n  import.meta.hot.lastModified = \"1729764420050.844\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport PostCard from \"../components/PostCard\";\nimport { authenticator } from \"../services/auth.server\";\nexport function meta({\n  data\n}) {\n  return [{\n    title: `Remix Post App - ${data.post.caption || \"Post\"}`\n  }];\n}\nexport async function loader({\n  request,\n  params\n}) {\n  // Ensure the user is authenticated\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\"\n  });\n  // Load the post and the user who created it\n  const post = await mongoose.models.Post.findById(params.postId).populate(\"user\");\n  return json({\n    post,\n    authUser\n  });\n}\nexport default function Post() {\n  _s();\n  const {\n    post,\n    authUser\n  } = useLoaderData();\n  function confirmDelete(event) {\n    const response = confirm(\"Please confirm you want to delete this post.\");\n    if (!response) {\n      event.preventDefault();\n    }\n  }\n  return <div id=\"post-page\" className=\"page\">\n      <h1>{post.caption}</h1>\n      <PostCard post={post} />\n      {authUser._id === post.user._id && <div className=\"btns\">\n          <Form action=\"update\">\n            <button>Update</button>\n          </Form>\n          <Form action=\"destroy\" method=\"post\" onSubmit={confirmDelete}>\n            <button>Delete</button>\n          </Form>\n        </div>}\n    </div>;\n}\n_s(Post, \"1dVDoPRk8+sj6r+hHb/21FE4zZw=\", false, function () {\n  return [useLoaderData];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UserAvatar.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UserAvatar.jsx\");\n  import.meta.hot.lastModified = \"1729764420049.8423\";\n}\n// REMIX HMR END\n\nexport default function UserAvatar({\n  user\n}) {\n  return <div className=\"avatar\">\n      <img src={user.image} alt={user.name} />\n      <span>\n        <h3>{user.name}</h3>\n        <p>{user.title}</p>\n      </span>\n    </div>;\n}\n_c = UserAvatar;\nvar _c;\n$RefreshReg$(_c, \"UserAvatar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/PostCard.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/PostCard.jsx\");\n  import.meta.hot.lastModified = \"1729764420049.7654\";\n}\n// REMIX HMR END\n\nimport UserAvatar from \"./UserAvatar\";\nexport default function PostCard({\n  post\n}) {\n  return <article className=\"post-card\">\n      <UserAvatar user={post.user} />\n      <img src={post.image} alt={post.caption} />\n      <h3>{post.caption}</h3>\n    </article>;\n}\n_c = PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
