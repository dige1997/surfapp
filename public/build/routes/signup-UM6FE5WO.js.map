{
  "version": 3,
  "sources": ["../../../app/routes/signup.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/signup.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/signup.jsx\");\n  import.meta.hot.lastModified = \"1729764420051.176\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, NavLink, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { authenticator } from \"../services/auth.server\";\nimport { sessionStorage } from \"../services/session.server\";\nexport async function loader({\n  request\n}) {\n  // If the user is already authenticated redirect to /posts directly\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/posts\"\n  });\n  // Retrieve error message from session if present\n  const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"));\n  // Get the error message from the session\n  const error = session.get(\"sessionErrorKey\");\n  // Remove the error message from the session after it's been retrieved\n  session.unset(\"sessionErrorKey\");\n  // Commit the updated session that no longer contains the error message\n  const headers = new Headers({\n    \"Set-Cookie\": await sessionStorage.commitSession(session)\n  });\n  return json({\n    error\n  }, {\n    headers\n  }); // return the error message\n}\nexport default function SignUp() {\n  _s();\n  // if i got an error it will come back with the loader data\n  const loaderData = useLoaderData();\n  console.log(\"error:\", loaderData?.error);\n  return <div id=\"sign-up-page\" className=\"bg-slate-200 flex flex-col justify-center items-center rounded-lg h-80 w-72 ml-auto mr-auto mt-52 p-4 gap-3\">\n      <h1 className=\"text-2xl w-auto\">Sign Up</h1>\n      <Form id=\"sign-up-form\" method=\"post\" className=\"flex items-center flex-col gap-1 w-full\">\n        <label htmlFor=\"mail\">Mail</label>\n        <input id=\"mail\" type=\"email\" name=\"mail\" aria-label=\"mail\" placeholder=\"Type your mail...\" required autoComplete=\"off\" className=\"p-2 rounded-xl w-full\" />\n\n        <label htmlFor=\"password\">Password</label>\n\n        <input id=\"password\" type=\"password\" name=\"password\" aria-label=\"password\" placeholder=\"Type your password...\" autoComplete=\"current-password\" className=\"p-2 rounded-xl w-full\" />\n        <div className=\"bg-sky-500 text-white hover:bg-sky-600 transition-colors p-2 rounded-xl mt-2 w-32 flex justify-center\">\n          <button>Sign Up</button>\n        </div>\n\n        {loaderData?.error ? <div className=\"error-message\">\n            <p>{loaderData?.error?.message}</p>\n          </div> : null}\n      </Form>\n      <p>\n        Already have an account?{\" \"}\n        <NavLink to=\"/signin\" className={\"text-sky-500\"}>\n          Sign in here.\n        </NavLink>\n      </p>\n    </div>;\n}\n_s(SignUp, \"ceKF1Gd7W4lGV+M78eBsU+KQIkw=\", false, function () {\n  return [useLoaderData];\n});\n_c = SignUp;\nexport async function action({\n  request\n}) {\n  try {\n    const formData = await request.formData(); // get the form data\n    const newUser = Object.fromEntries(formData); // convert the form data to an object\n    await mongoose.models.User.create(newUser); // create the user\n\n    return redirect(\"/signin\"); // redirect to the sign-in page\n  } catch (error) {\n    console.log(error);\n    return redirect(\"/signup\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"SignUp\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAE/B,sBAAqB;AACrB,kBAA8B;AAC9B,qBAA+B;AA8BzB;AAtDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AA+Be,SAAR,SAA0B;AAC/B,KAAG;AAEH,QAAM,aAAa,cAAc;AACjC,UAAQ,IAAI,UAAU,YAAY,KAAK;AACvC,SAAO,mDAAC,SAAI,IAAG,gBAAe,WAAU,+GACpC;AAAA,uDAAC,QAAG,WAAU,mBAAkB,uBAAhC;AAAA;AAAA;AAAA;AAAA,WAAuC;AAAA,IACvC,mDAAC,QAAK,IAAG,gBAAe,QAAO,QAAO,WAAU,2CAC9C;AAAA,yDAAC,WAAM,SAAQ,QAAO,oBAAtB;AAAA;AAAA;AAAA;AAAA,aAA0B;AAAA,MAC1B,mDAAC,WAAM,IAAG,QAAO,MAAK,SAAQ,MAAK,QAAO,cAAW,QAAO,aAAY,qBAAoB,UAAQ,MAAC,cAAa,OAAM,WAAU,2BAAlI;AAAA;AAAA;AAAA;AAAA,aAA0J;AAAA,MAE1J,mDAAC,WAAM,SAAQ,YAAW,wBAA1B;AAAA;AAAA;AAAA;AAAA,aAAkC;AAAA,MAElC,mDAAC,WAAM,IAAG,YAAW,MAAK,YAAW,MAAK,YAAW,cAAW,YAAW,aAAY,yBAAwB,cAAa,oBAAmB,WAAU,2BAAzJ;AAAA;AAAA;AAAA;AAAA,aAAiL;AAAA,MACjL,mDAAC,SAAI,WAAU,yGACb,6DAAC,YAAO,uBAAR;AAAA;AAAA;AAAA;AAAA,aAAe,KADjB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEC,YAAY,QAAQ,mDAAC,SAAI,WAAU,iBAChC,6DAAC,OAAG,sBAAY,OAAO,WAAvB;AAAA;AAAA;AAAA;AAAA,aAA+B,KADd;AAAA;AAAA;AAAA;AAAA,aAEnB,IAAS;AAAA,SAbb;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,IACA,mDAAC,OAAE;AAAA;AAAA,MACwB;AAAA,MACzB,mDAAC,WAAQ,IAAG,WAAU,WAAW,gBAAgB,6BAAjD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAtBG;AAAA;AAAA;AAAA;AAAA,SAuBL;AACJ;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AAeL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
