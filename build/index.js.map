{
  "version": 3,
  "sources": ["../app/entry.server.jsx", "../app/db/db-connect.server.js", "../app/db/models.js", "../app/services/auth.server.jsx", "../app/services/session.server.jsx", "../app/root.jsx", "../app/components/Nav.jsx", "../app/components/NavAll.jsx", "../app/components/footer.jsx", "../app/routes/profile.$userId_.update.jsx", "../app/routes/event.$eventId.destroy.jsx", "../app/routes/event.$eventId_.update.jsx", "../app/routes/posts.$postId.destroy.jsx", "../app/routes/posts.$postId_.update.jsx", "../app/routes/dashboard._index.jsx", "../app/components/DashboardData.jsx", "../app/components/EventListCards.jsx", "../app/components/EventCard.jsx", "../app/routes/profile.$userId.jsx", "../app/routes/event.$eventId.jsx", "../app/routes/main-dashboard.jsx", "../app/routes/posts.$postId.jsx", "../app/components/UserAvatar.jsx", "../app/components/PostCard.jsx", "../app/routes/event._index.jsx", "../app/routes/users._index.jsx", "../app/routes/add-event.jsx", "../app/routes/add-post.jsx", "../app/routes/profile1.jsx", "../app/routes/_index.jsx", "../app/routes/signin.jsx", "../app/routes/signup.jsx", "../app/routes/error.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport connectDb from \"./db/db-connect.server\";\nimport { initData } from \"./db/models\";\n\nconnectDb();\nawait initData();\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import mongoose from \"mongoose\";\nimport { models } from \"./models.js\";\n\nconst { MONGODB_URL, NODE_ENV } = process.env;\n\nif (!MONGODB_URL) {\n  const errorMessage =\n    NODE_ENV === \"production\"\n      ? \"Please define the MONGODB_URL environment variable \u2014 pointing to your full connection string, including database name.\"\n      : \"Please define the MONGODB_URL environment variable inside an .env file \u2014 pointing to your full connection string, including database name.\";\n  throw new Error(errorMessage);\n}\n\n// Call this function from entry.server.jsx. We reuse an existing Mongoose db\n// connection to avoid creating multiple connections in dev mode when Remix\n// \"purges the require cache\" when reloading on file changes.\nexport default function connectDb() {\n  // Just for logging purposes:\n  let modelCreationType = \"Creating\";\n\n  if (NODE_ENV === \"development\") {\n    // In development mode, we want to overwrite any existing models to ensure\n    // we pick up any changes made in schemas.\n    mongoose.set(\"overwriteModels\", true);\n    // If we have any models already, log out that we're overwriting them:\n    if (Object.keys(mongoose.models).length > 0) {\n      modelCreationType = \"Overwriting\";\n    }\n  }\n\n  console.log(\n    // E.g. \"Mongoose: Creating 2 models (Book, Author)\"\n    \"Mongoose: %s %d %s (%s)\",\n    modelCreationType,\n    models.length,\n    models.length === 1 ? \"model\" : \"models\",\n    models.map((model) => model.name).join(\", \")\n  );\n\n  // Create or overwrite the models exported from ./models.js:\n  for (const model of models) {\n    mongoose.model(model.name, model.schema, model.collection);\n  }\n\n  // Reuse the existing Mongoose connection if we have one...\n  // https://mongoosejs.com/docs/api/connection.html#connection_Connection-readyState\n  const readyState = mongoose.connection.readyState;\n  if (readyState > 0) {\n    console.log(\n      \"Mongoose: Re-using existing connection (readyState: %d)\",\n      readyState\n    );\n    return;\n  }\n\n  // If no connection exists yet, set up event logging...\n  // https://mongoosejs.com/docs/connections.html#connection-events\n  mongoose.connection.on(\"error\", (error) => {\n    console.error(\"Mongoose: error %s\", error);\n  });\n\n  for (const event of [\"connected\", \"reconnected\", \"disconnected\", \"close\"]) {\n    mongoose.connection.on(event, () => console.log(\"Mongoose: %s\", event));\n  }\n\n  // ...and create a new connection:\n  mongoose.connect(MONGODB_URL).catch((error) => {\n    console.error(error);\n  });\n}\n", "import mongoose from \"mongoose\";\nimport bcrypt from \"bcrypt\";\nimport { hashPassword } from \"../services/auth.server\";\n\n// ========== models ========== //\n\n// Create a user schema\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n    },\n    mail: {\n      type: String,\n      required: true,\n      unique: true,\n    },\n    password: {\n      type: String,\n      required: true,\n      select: false,\n    },\n    eventsCreated: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Events\",\n      },\n    ],\n    eventsAttending: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Events\",\n      },\n    ],\n  },\n  { timestamps: true }\n);\n\nconst User = mongoose.model(\"User\", userSchema);\n\nmongoose.model(\"User\", userSchema);\n\nconst eventSchema = new mongoose.Schema(\n  {\n    date: {\n      type: Date,\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    location: {\n      type: String,\n      required: true,\n    },\n    creator: {\n      required: true,\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    image: {\n      type: String,\n      required: true,\n    },\n    attendees: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n  },\n  { timestamps: true }\n);\n\neventSchema.index({ title: \"text\", description: \"text\" });\n\nmongoose.model(\"Event\", eventSchema);\n\n// pre save password hook\nuserSchema.pre(\"save\", async function (next) {\n  const user = this; // this refers to the user document\n\n  // only hash the password if it has been modified (or is new)\n  if (!user.isModified(\"password\")) {\n    return next(); // continue\n  }\n\n  const salt = await bcrypt.genSalt(10); // generate a salt\n  user.password = await bcrypt.hash(user.password, salt); // hash the password\n\n  user.name = user.name\n    .split(\" \")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n\n  next(); // continue\n});\n\neventSchema.pre(\"save\", async function (next) {\n  const event = this; // this refers to the user document\n\n  event.title = event.title\n    .split(\" \")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n  const creator = await User.findById(event.creator);\n  //make sure the user which created the event has the event in their eventsCreated array\n  if (!creator.eventsCreated.includes(event._id)) {\n    creator.eventsCreated.push(event._id);\n    await creator.save();\n  }\n  next(); // continue\n});\n\nexport const models = [\n  { name: \"User\", schema: userSchema, collection: \"users\" },\n  { name: \"Event\", schema: eventSchema, collection: \"event\" },\n];\n\n// ========== initData ========== //\n\nexport async function initData() {\n  // check if data exists\n  const userCount = await mongoose.models.User.countDocuments();\n  const eventCount = await mongoose.models.Event.countDocuments();\n\n  if (userCount === 0 || eventCount === 0) {\n    await insertData();\n  }\n}\n\n// ========== insertData ========== //\n\nasync function insertData() {\n  const User = mongoose.models.User;\n  const Event = mongoose.models.Event;\n\n  console.log(\"Dropping collections...\");\n\n  console.log(\"Inserting data...\");\n  // Insert users\n\n  const test = await User.create({\n    mail: \"test@test.dk\",\n    name: \"Tester test\",\n    eventsCreated: [],\n    eventsAttending: [],\n    password: await hashPassword(\"1234\"),\n  });\n\n  console.log(test);\n\n  const test2 = await User.create({\n    mail: \"test2@test2.dk\",\n    name: \"Tester test\",\n    eventsCreated: [],\n    eventsAttending: [],\n    password: await hashPassword(\"1234\"),\n  });\n\n  const event4 = await Event.create({\n    date: new Date(2021, 4, 1),\n    image:\n      \"https://images.unsplash.com/photo-1566241832378-917a0f30db2c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80\",\n    title: 101,\n    creator: test._id,\n    location: \"aa\",\n    description: \"A beautiful sunset at the beach in Aarhus\",\n    attendees: [test2._id],\n  });\n\n  const event5 = await Event.create({\n    date: new Date(2021, 4, 1),\n    image:\n      \"https://images.unsplash.com/photo-1566241832378-917a0f30db2c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80\",\n    title: \"Bike ride\",\n    creator: test._id,\n    location: \"aa\",\n    description: \"A beautiful bike ride in Silkeborg\",\n    attendees: [test2._id],\n  });\n}\n", "import { Authenticator, AuthorizationError } from \"remix-auth\";\nimport { sessionStorage } from \"./session.server\";\nimport { FormStrategy } from \"remix-auth-form\";\nimport bcrypt from \"bcrypt\";\nimport mongoose from \"mongoose\";\n\n// Create an instance of the authenticator, pass a generic with what\n// strategies will return and will store in the session\nexport let authenticator = new Authenticator(sessionStorage, {\n  sessionErrorKey: \"sessionErrorKey\", // keep in sync\n});\n\n// Tell the Authenticator to use the form strategy\nauthenticator.use(\n  new FormStrategy(async ({ form }) => {\n    let mail = form.get(\"mail\");\n    let password = form.get(\"password\");\n\n    // do some validation, errors are saved in the sessionErrorKey\n    if (!mail || typeof mail !== \"string\" || !mail.trim()) {\n      throw new AuthorizationError(\"Email is required and must be a string\");\n    }\n\n    if (!password || typeof password !== \"string\" || !password.trim()) {\n      throw new AuthorizationError(\"Password is required and must be a string\");\n    }\n\n    // verify the user\n    const user = await verifyUser({ mail, password });\n    if (!user) {\n      // if problem with user throw error AuthorizationError\n      throw new AuthorizationError(\"User not found\");\n    }\n    console.log(user);\n    return user;\n  }),\n  \"user-pass\"\n);\n\nasync function verifyUser({ mail, password }) {\n  const user = await mongoose.models.User.findOne({ mail }).select(\"+password\");\n  if (!user) {\n    throw new AuthorizationError(\"No user found with this email.\");\n  }\n\n  const passwordMatch = await bcrypt.compare(password, user.password);\n  if (!passwordMatch) {\n    throw new AuthorizationError(\"Invalid password.\");\n  }\n  // Remove the password from the user object before returning it\n  user.password = undefined;\n  return user;\n}\n\nexport async function hashPassword(password) {\n  const salt = await bcrypt.genSalt(10);\n  const hash = await bcrypt.hash(password, salt);\n  return hash;\n}\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\n\n// export the whole sessionStorage object\nexport let sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"_session\", // use any name you want here\n    sameSite: \"lax\", // this helps with CSRF\n    path: \"/\", // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: [\"s3cr3t\"], // replace this with an actual secret\n    secure: process.env.NODE_ENV === \"production\", // enable this in prod only\n  },\n});\n\n// you can also export the methods individually for your own usage\nexport let { getSession, commitSession, destroySession } = sessionStorage;\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\nimport stylesheet from \"./tailwind.css\";\nimport Nav from \"./components/Nav\";\nimport { authenticator } from \"./services/auth.server\";\nimport NavAll from \"./components/NavAll\";\nimport Footer from \"./components/footer\";\n\nexport function links() {\n  return [\n  { rel: \"stylesheet\", href: stylesheet },\n  { rel: \"stylesheet\", href: \"/fonts/inter/inter.css\" }];\n\n}\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request);\n}\n\nexport default function App() {\n  const user = useLoaderData();\n  return (\n    <html\n      lang=\"en\"\n      className=\"bg-gradient-to-t from-blue-50 to-cyan-200 bg-cover bg-no-repeat min-h-screen\">\n\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"\">\n        {user ? <Nav user={user} /> : <NavAll />}\n\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n        <Footer />\n      </body>\n    </html>);\n\n}", "import { useState, useEffect, useRef } from \"react\";\nimport { NavLink } from \"@remix-run/react\";\n\nexport default function Nav({ user }) {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const mobileMenuRef = useRef(null);\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  // Close mobile menu if clicked outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        mobileMenuRef.current &&\n        !mobileMenuRef.current.contains(event.target)\n      ) {\n        setIsMobileMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  // Close menu when a link is clicked\n  const handleLinkClick = () => {\n    setIsMobileMenuOpen(false);\n  };\n\n  // Close menu when the close button (\u2716) is clicked\n  const closeMobileMenu = (event) => {\n    // Prevent the button's onClick from triggering when the close icon is clicked\n    event.stopPropagation();\n    setIsMobileMenuOpen(false);\n  };\n\n  return (\n    <div className=\"min-h-full\">\n      <nav className=\"bg-gray-800\">\n        <div className=\"mx-auto w-full max-w-7xl px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex w-full h-16 items-center \">\n            <div className=\"flex w-full items-center\">\n              <div className=\"flex w-full justify-between\">\n                <div className=\"hidden md:block\">\n                  <div className=\"ml-10 flex items-baseline space-x-4\">\n                    <div className=\"shrink-0\">{/* Logo */}</div>\n                    <NavLink\n                      to=\"/dashboard\"\n                      className={({ isActive }) =>\n                        `text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium ${\n                          isActive ? \"bg-gray-900 text-white\" : \"\"\n                        }`\n                      }\n                      onClick={handleLinkClick} // Close the menu on link click\n                    >\n                      Dashboard\n                    </NavLink>\n                    <NavLink\n                      to=\"/add-event\"\n                      className={({ isActive }) =>\n                        `text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium ${\n                          isActive ? \"bg-gray-900 text-white\" : \"\"\n                        }`\n                      }\n                      onClick={handleLinkClick} // Close the menu on link click\n                    >\n                      Add Post\n                    </NavLink>\n                  </div>\n                </div>\n                <div className=\" items-center hidden md:flex\">\n                  <NavLink\n                    to={`/profile/${user?._id}`}\n                    className={({ isActive }) =>\n                      `text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium ${\n                        isActive ? \"bg-gray-900 text-white\" : \"\"\n                      }`\n                    }\n                    onClick={handleLinkClick} // Close the menu on link click\n                  >\n                    Profile\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n\n            {/* Mobile Menu Button */}\n            <div className=\"-mr-2 flex md:hidden\">\n              <button\n                onClick={toggleMobileMenu} // Toggle menu visibility\n                className=\"inline-flex items-center justify-center rounded-md bg-gray-800 p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\"\n              >\n                <span className=\"sr-only\">Open main menu</span>\n                {!isMobileMenuOpen ? (\n                  <span className=\"block\">\u2630</span> // Open icon when menu is closed\n                ) : (\n                  <span\n                    className=\"block\"\n                    onClick={closeMobileMenu} // Close the menu when close button (\u2716) is clicked\n                  >\n                    \u2716\n                  </span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Menu Dropdown */}\n      {isMobileMenuOpen && (\n        <div\n          ref={mobileMenuRef} // Reference for detecting clicks outside the menu\n          className=\"md:hidden bg-gray-800 px-2 pt-2 pb-3 space-y-1 sm:px-3\"\n        >\n          <NavLink\n            to=\"/dashboard\"\n            className={({ isActive }) =>\n              `text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium ${\n                isActive ? \"bg-gray-900 text-white\" : \"\"\n              }`\n            }\n            onClick={handleLinkClick} // Close the menu on link click\n          >\n            Dashboard\n          </NavLink>\n          <NavLink\n            to=\"/add-post\"\n            className={({ isActive }) =>\n              `text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium ${\n                isActive ? \"bg-gray-900 text-white\" : \"\"\n              }`\n            }\n            onClick={handleLinkClick} // Close the menu on link click\n          >\n            Add Post\n          </NavLink>\n          <NavLink\n            to={`/profile/${user?._id}`}\n            className={({ isActive }) =>\n              `text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium ${\n                isActive ? \"bg-gray-900 text-white\" : \"\"\n              }`\n            }\n            onClick={handleLinkClick} // Close the menu on link click\n          >\n            Profile\n          </NavLink>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import { NavLink } from \"@remix-run/react\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n}\n\nexport default function Nav() {\n  return (\n    <nav className=\"flex shadow-md justify-between md:justify-items-end items-center\">\n      <NavLink to={authenticator ? \"/dashboard\" : \"/main-dashboard\"}>\n        <h1 className=\"font-mono text-2xl font-bold m-auto p-2 mx-2\">\n          Elevation\n        </h1>\n      </NavLink>\n      <div className=\"flex ml-auto p-2 font-semibold mr-4\">\n        <NavLink\n          to=\"/signup\"\n          className=\"mx-2 bg-secondary hover:bg-primary rounded-xl p-2 \"\n        >\n          Sign Up\n        </NavLink>\n        <NavLink\n          to=\"/signin\"\n          className=\"mx-2  bg-gray-100 hover:bg-gray-200 rounded-xl p-2\"\n        >\n          Login\n        </NavLink>\n      </div>\n    </nav>\n  );\n}\n", "export default function Footer() {\n  return (\n    <footer className=\"bg-gray-100 text-white p-4 mt-6 flex flex-col justify-center items-center\">\n      <p>\u00A9 2024 Evelation - Nicolai Dige</p>\n      <p>Your Gateway to Outdoor Thrills </p>\n    </footer>\n  );\n}\n", "import mongoose from \"mongoose\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { authenticator } from \"../services/auth.server\";\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { hashPassword } from \"../services/auth.server\";\n\nexport function meta() {\n  return [\n    {\n      title: \"Trailblaze - Update event\",\n    },\n  ];\n}\n\nexport async function loader({ request, params }) {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const user = await mongoose.models.User.findById(params.userId);\n  const userUpdated = await mongoose.models.User.findOneAndUpdate(user._id).select(\"+password\");\n  return json({ user, userUpdated });\n}\n\nexport default function UpdateProfile() {\n  const { user } = useLoaderData();\n  const navigate = useNavigate();\n  function handleCancel() {\n    navigate(-1);\n  }\n  return (\n    <div className=\"w-full flex-col gap-y-4 justify-center mt-4 mb-4 p-8\">\n      <h1 className=\"m-auto flex justify-center font-semibold text-2xl mb-6\">Update Profile</h1>\n      \n        <Form method=\"post\" className=\"rounded-lg font-semibold max-w-lg justify-center m-auto flex flex-col gap-y-4 p-4\">\n          <label htmlFor=\"name\"> Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Name\"\n            defaultValue={user.name}\n            className=\"rounded-xl p-2  border-gray-400 border\"\n          />\n          <label htmlFor=\"mail\">Mail</label>\n          <input\n            type=\"text\"\n            id=\"mail\"\n            name=\"mail\"\n            placeholder=\"Mail\"\n            defaultValue={user.mail}\n            className=\"rounded-xl p-2  border-gray-400 border\"\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            className=\"rounded-xl p-2  border-gray-400 border\"\n          />\n          <button className=\"bg-accent hover:bg-primary hover:text-background p-2 rounded-lg mt-4\">\n            Update\n          </button>\n          <button type=\"button\" className=\"btn-cancel text-cancel\" onClick={handleCancel}>\n            cancel\n          </button>\n        </Form>\n    \n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const formData = new URLSearchParams(await request.text());\n  const name = formData.get(\"name\");\n  const mail = formData.get(\"mail\");\n  const password = formData.get(\"password\");\n\n  try {\n    let userToUpdate = await mongoose.models.User.findOne({ _id: authUser._id });\n\n    if (!userToUpdate) {\n      // Handle case where user is not found\n      console.error(\"User not found\");\n      return redirect(\"/error-page\"); // Redirect to an error page or handle as appropriate\n    }\n\n    if (mail !== userToUpdate.mail) {\n      // Check if the new email is different from the current one\n      const existingUser = await mongoose.models.User.findOne({ mail });\n\n      if (existingUser) {\n        // Email is already in use\n        console.error(\"Email already in use\");\n        return redirect(\"/error-page\"); // Redirect to an error page or handle as appropriate\n      }\n    }\n\n    userToUpdate.name = name;\n    userToUpdate.mail = mail;\n    if (password) {\n      userToUpdate.password = await hashPassword(password);\n    }\n\n    const updatedUser = await userToUpdate.save();\n    if (updatedUser) {\n      return redirect(`/profile/${updatedUser._id}`);\n    }\n  } catch (error) {\n    console.error(\"Error updating user:\", error);\n    return redirect(\"/error-page\"); // Redirect to an error page or handle as appropriate\n  }\n}\n", "\nimport mongoose from \"mongoose\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n}\n\nexport async function action({ request, params }) {\n  // Protect the route\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n  // Delete the post\n await mongoose.models.Event.findByIdAndDelete(params.eventId);\n\n  return new Response(null, {\n      status: 302,\n      headers: {\n          location: \"/event\",\n      },\n  })\n}\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { useState } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport function meta() {\n  return [\n    {\n      title: \"Trailblaze - Update event\",\n    },\n  ];\n}\n\nexport async function loader({ request, params }) {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const event = await mongoose.models.Event.findById(params.eventId).populate(\"creator\");\n  return json({ event });\n}\n\nexport default function UpdateEvent() {\n  const { event } = useLoaderData();\n  const [image, setImage] = useState(event.image);\n  const navigate = useNavigate();\n\n  function handleCancel() {\n    navigate(-1);\n  }\n\n  return (\n    <div className=\"page w-full flex-col gap-y-4 justify-center mt-4 mb-4 p-8 \">\n      <h1 className=\"m-auto flex justify-center font-semibold text-2xl mb-6\">Update Event</h1>\n      <Form id=\"event-form\" method=\"post\" className=\"rounded-lg font-semibold max-w-lg justify-center m-auto flex flex-col gap-y-4 p-4\">\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          defaultValue={event.title}\n          name=\"title\"\n          type=\"text\"\n          aria-label=\"title\"\n          placeholder=\"Write a title...\"\n          className=\"rounded-xl p-2  border-gray-400 border\"\n        />\n       \n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          type=\"text\"\n          aria-label=\"description\"\n          placeholder=\"Write a description...\"\n          defaultValue={event.description}\n          className=\"rounded-xl p-2  border-gray-400 border\" \n        />\n        <label htmlFor=\"location\">Location</label>\n        <input \n        id=\"location\"\n        name=\"location\"\n        type=\"text\"\n        aria-label=\"location\"\n        placeholder=\"Write a location...\"\n        defaultValue={event.location}\n        className=\"rounded-xl p-2  border-gray-400 border\" />\n\n\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          name=\"date\"\n          type=\"date\"\n          aria-label=\"date\"\n          defaultValue={new Date(event.date).toISOString().split(\"T\")[0]}\n          className=\"rounded-xl p-2  border-gray-400 border\"\n        />\n\n<label htmlFor=\"image\">Image URL</label>\n        <input\n          name=\"image\"\n          defaultValue={event.image}\n          type=\"url\"\n          onChange={(e) => setImage(e.target.value)}\n          placeholder=\"Paste an image URL...\"\n          className=\"rounded-xl p-2  border-gray-400 border\" \n        />\n\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <img\n          id=\"image-preview\"\n          className=\"m-auto rounded-xl\"\n          src={image ? image : \"https://placehold.co/600x400?text=Paste+an+image+URL\"}\n          alt=\"Choose\"\n          onError={(e) => (e.target.src = \"https://placehold.co/600x400?text=Error+loading+image\")}\n        />\n\n        <input name=\"uid\" type=\"text\" defaultValue={event.uid} hidden />\n        <div className=\"btns \">\n          <button className=\"bg-accent hover:bg-primary hover:text-background p-2 rounded-lg mr-6\">Save</button>\n          <button type=\"button\" className=\"btn-cancel text-cancel\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport async function action({ request, params }) {\n  // Protect the route\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  // Fetch the post to check if the current user is the creator\n  const eventToUpdate = await mongoose.models.Event.findById(params.eventId);\n\n  if (eventToUpdate.creator.toString() !== authUser._id.toString()) {\n    // User is not the creator of the post, redirect\n    return redirect(`/event/${params.eventId}`);\n  }\n\n  // User is authenticated and is the creator, proceed to update the post\n  const formData = await request.formData();\n  const event = Object.fromEntries(formData);\n\n  // Since postToUpdate is already the document you want to update,\n  // you can directly modify and save it, which can be more efficient than findByIdAndUpdate\n  eventToUpdate.title = event.title;\n  eventToUpdate.image = event.image;\n  eventToUpdate.description = event.description;\n  eventToUpdate.date = event.date;\n  eventToUpdate.location = event.location;\n  \n  await eventToUpdate.save();\n\n  return redirect(`/event/${params.eventId}`);\n}\n", "import { redirect } from \"@remix-run/node\";\nimport mongoose from \"mongoose\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n}\n\nexport async function action({ request, params }) {\n  // Protect the route\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n  // Delete the post\n  await mongoose.models.Post.findByIdAndDelete(params.postId);\n  return redirect(\"/posts\");\n}\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { useState } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport function meta() {\n  return [\n    {\n      title: \"Remix Post App - Update\",\n    },\n  ];\n}\n\nexport async function loader({ request, params }) {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const post = await mongoose.models.Post.findById(params.postId).populate(\"user\");\n  return json({ post });\n}\n\nexport default function UpdatePost() {\n  const { post } = useLoaderData();\n  const [image, setImage] = useState(post.image);\n  const navigate = useNavigate();\n\n  function handleCancel() {\n    navigate(-1);\n  }\n\n  return (\n    <div className=\"page\">\n      <h1>Update Post</h1>\n      <Form id=\"post-form\" method=\"post\">\n        <label htmlFor=\"caption\">Caption</label>\n        <input\n          id=\"caption\"\n          defaultValue={post.caption}\n          name=\"caption\"\n          type=\"text\"\n          aria-label=\"caption\"\n          placeholder=\"Write a caption...\"\n        />\n        <label htmlFor=\"image\">Image URL</label>\n        <input\n          name=\"image\"\n          defaultValue={post.image}\n          type=\"url\"\n          onChange={(e) => setImage(e.target.value)}\n          placeholder=\"Paste an image URL...\"\n        />\n\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <img\n          id=\"image-preview\"\n          className=\"image-preview\"\n          src={image ? image : \"https://placehold.co/600x400?text=Paste+an+image+URL\"}\n          alt=\"Choose\"\n          onError={(e) => (e.target.src = \"https://placehold.co/600x400?text=Error+loading+image\")}\n        />\n\n        <input name=\"uid\" type=\"text\" defaultValue={post.uid} hidden />\n        <div className=\"btns\">\n          <button>Save</button>\n          <button type=\"button\" className=\"btn-cancel\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport async function action({ request, params }) {\n  // Protect the route\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  // Fetch the post to check if the current user is the creator\n  const postToUpdate = await mongoose.models.Post.findById(params.postId);\n\n  if (postToUpdate.user.toString() !== authUser._id.toString()) {\n    // User is not the creator of the post, redirect\n    return redirect(`/posts/${params.postId}`);\n  }\n\n  // User is authenticated and is the creator, proceed to update the post\n  const formData = await request.formData();\n  const post = Object.fromEntries(formData);\n\n  // Since postToUpdate is already the document you want to update,\n  // you can directly modify and save it, which can be more efficient than findByIdAndUpdate\n  postToUpdate.caption = post.caption;\n  postToUpdate.image = post.image;\n  await postToUpdate.save();\n\n  return redirect(`/posts/${params.postId}`);\n}\n", "import { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { authenticator } from \"../services/auth.server\";\nimport DashboardData from \"../components/DashboardData\";\nimport EventListCards from \"../components/EventListCards\";\nimport EventCard from \"../components/EventCard\";\n\nexport const meta = () => {\n  return [{ title: \"Remix Post App\" }];\n};\n\nexport async function loader({ request }) {\n  const user = await authenticator.isAuthenticated(request);\n  if (!user) {\n    return json({ mostLikedEvent: null });\n  }\n\n  const mostLikedEvent = await mongoose.models.Event.findOne()\n    .sort({ attendees: -1 }) // Sort by attendees array length in descending order\n    .populate(\"creator\") // Populate creator field\n    .populate(\"attendees\"); // Populate attendees field\n\n  return json({ mostLikedEvent }); // Return the most liked event\n}\n\nexport default function Index() {\n  const { mostLikedEvent } = useLoaderData(); // Get the most liked event from the loader\n\n  // Handle the case where there are no events\n  if (!mostLikedEvent) {\n    return (\n      <div className=\"page\">\n        <DashboardData />\n        <p>No events available at the moment.</p>\n      </div>\n    );\n  }\n\n  // Render the most liked event\n  return (\n    <div className=\"page\">\n      <DashboardData />\n      <div className=\" p-4\">\n        <Link\n          key={mostLikedEvent._id}\n          className=\"event-link\"\n          to={`/event/${mostLikedEvent._id}`}\n        >\n          <div className=\"md:hidden w-full flex justify-center\">\n            <EventListCards event={mostLikedEvent} />\n          </div>\n          <div className=\"hidden md:flex  w-full  justify-center\">\n            <EventCard event={mostLikedEvent} />\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n", "import React, { useEffect, useState } from \"react\";\n\nconst DashboardData = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Loading...\");\n  const [country, setCountry] = useState(\"\"); // State for country\n  const [inputCity, setInputCity] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"wind\"); // Track which tab is active\n  const apiKey = \"84c59fa875b07f0e54b6dd1ce011f187\";\n\n  // Fetch weather data based on city name\n  const fetchWeatherData = async (city) => {\n    const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Error: ${errorText}`);\n      }\n      const data = await response.json();\n      setWeatherData(data);\n      setError(\"\");\n      setCountry(data.city.country); // Set the country from API response\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      setError(\"Could not fetch weather data. Please try another city.\");\n    }\n  };\n\n  // Fetch city by coordinates\n  const fetchCityByCoordinates = async (lat, lon) => {\n    const reverseGeoUrl = `http://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=1&appid=${apiKey}`;\n    try {\n      const response = await fetch(reverseGeoUrl);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setCity(data[0].name);\n        setCountry(data[0].country); // Set country from reverse geocoding\n      }\n    } catch (error) {\n      console.error(\"Error fetching city by coordinates:\", error);\n      setCity(\"Copenhagen\");\n      setCountry(\"DK\"); // Default country fallback\n    }\n  };\n\n  // Geolocation API - Get user location\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          fetchCityByCoordinates(latitude, longitude);\n        },\n        () => {\n          setCity(\"Copenhagen\"); // Fallback city if location fails\n          setCountry(\"DK\"); // Fallback country\n        }\n      );\n    } else {\n      setCity(\"Copenhagen\"); // Fallback city if geolocation is unavailable\n      setCountry(\"DK\");\n    }\n  };\n\n  useEffect(() => {\n    getUserLocation(); // Get user's location on component mount\n  }, []);\n\n  useEffect(() => {\n    if (city !== \"Loading...\") {\n      fetchWeatherData(city); // Fetch weather data when the city changes\n    }\n  }, [city]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (inputCity) {\n      setCity(inputCity); // Update the city state to the user's input\n      setInputCity(\"\"); // Clear the input field\n    }\n  };\n\n  const getWindDirection = (degrees) => {\n    if (degrees >= 337.5 || degrees < 22.5) {\n      return \"N\";\n    } else if (degrees >= 22.5 && degrees < 67.5) {\n      return \"NE\";\n    } else if (degrees >= 67.5 && degrees < 112.5) {\n      return \"E\";\n    } else if (degrees >= 112.5 && degrees < 157.5) {\n      return \"SE\";\n    } else if (degrees >= 157.5 && degrees < 202.5) {\n      return \"S\";\n    } else if (degrees >= 202.5 && degrees < 247.5) {\n      return \"SW\";\n    } else if (degrees >= 247.5 && degrees < 292.5) {\n      return \"W\";\n    } else if (degrees >= 292.5 && degrees < 337.5) {\n      return \"NW\";\n    }\n  };\n\n  const getWeatherEmoji = (description) => {\n    const lowerCaseDescription = description.toLowerCase();\n    if (lowerCaseDescription.includes(\"clear\")) return \"\u2600\uFE0F\"; // Clear sky\n    if (lowerCaseDescription.includes(\"clouds\")) return \"\u2601\uFE0F\"; // Cloudy\n    if (lowerCaseDescription.includes(\"rain\")) return \"\uD83C\uDF27\uFE0F\"; // Rain\n    if (lowerCaseDescription.includes(\"thunderstorm\")) return \"\u26C8\uFE0F\"; // Thunderstorm\n    if (lowerCaseDescription.includes(\"snow\")) return \"\u2744\uFE0F\"; // Snow\n    if (\n      lowerCaseDescription.includes(\"mist\") ||\n      lowerCaseDescription.includes(\"fog\")\n    )\n      return \"\uD83C\uDF2B\uFE0F\"; // Mist/Fog\n    return \"\uD83C\uDF24\uFE0F\"; // Default emoji for other types\n  };\n\n  return (\n    <div className=\"flex flex-col p-4\">\n      <form className=\"flex justify-center mt-20\" onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter city name\"\n          value={inputCity}\n          onChange={(e) => setInputCity(e.target.value)}\n          className=\"bg-slate-50 p-2 w-72 rounded-l-2xl focus:outline-none\"\n        />\n        <button className=\"bg-slate-50 rounded-r-2xl p-2\" type=\"submit\">\n          \uD83D\uDD0D\n        </button>\n      </form>\n      <div className=\"flex flex-col md:flex-row\">\n        <div className=\"md:w-3/6 md:justify-center md:mx-auto\">\n          <div className=\"mt-4 flex justify-center flex-col\">\n            <div>\n              <h1 className=\"text-7xl font-bold text-center mt-2 capitalize\">\n                {city}\n              </h1>\n              <p className=\"text-4xl font-semibold text-center\"> {country}</p>\n            </div>\n          </div>\n\n          {error && <p className=\"text-red-500 text-center\">{error}</p>}\n\n          {weatherData ? (\n            <div className=\"bg-s-100 rounded-xl w-full p-6 mt-4 mx-auto\">\n              <p className=\"text-3xl flex items-center gap-3\">\n                \uD83C\uDF21 {weatherData.list[0].main.temp} \u00B0C\n              </p>\n              <p>Feels Like: {weatherData.list[0].main.feels_like} \u00B0C</p>\n              <p>Min Temp: {weatherData.list[0].main.temp_min} \u00B0C</p>\n              <p>Max Temp: {weatherData.list[0].main.temp_max} \u00B0C</p>\n              <p className=\"text-3xl flex items-center gap-3\">\n                {getWeatherEmoji(weatherData.list[0].weather[0].description)}{\" \"}\n                {weatherData.list[0].weather[0].description}\n              </p>\n              <p>\n                Rain:{\" \"}\n                {weatherData.list[0].rain ? weatherData.list[0].rain[\"3h\"] : 0}{\" \"}\n                mm\n              </p>\n              <p className=\"text-3xl flex items-center gap-3\">\n                \uD83D\uDCA8 {weatherData.list[0].wind.speed} m/s\n              </p>\n              <p>\n                Wind Direction: {getWindDirection(weatherData.list[0].wind.deg)}{\" \"}\n                ({weatherData.list[0].wind.deg}\u00B0)\n              </p>\n            </div>\n          ) : (\n            <p className=\"text-center mt-4\">Loading weather data...</p>\n          )}\n        </div>\n\n        <div className=\"w-full h-96 pl-4\">\n          <div className=\"flex mt-4\">\n            <button\n              className={`p-2 rounded-t-md shadow-md ${\n                activeTab === \"wind\"\n                  ? \"bg-blue-500 text-white\"\n                  : \"bg-slate-100 hover:bg-slate-400\"\n              }`}\n              onClick={() => setActiveTab(\"wind\")}\n            >\n              Wind Map\n            </button>\n            <button\n              className={`p-2 rounded-t-md shadow-md ${\n                activeTab === \"swell\"\n                  ? \"bg-blue-500 text-white\"\n                  : \"bg-slate-100 hover:bg-slate-400\"\n              }`}\n              onClick={() => setActiveTab(\"swell\")}\n            >\n              Swell Map\n            </button>\n            <button\n              className={`p-2 rounded-t-md shadow-md ${\n                activeTab === \"temp\"\n                  ? \"bg-slate-500 text-white\"\n                  : \"bg-slate-100 hover:bg-slate-400\"\n              }`}\n              onClick={() => setActiveTab(\"temp\")}\n            >\n              Sea Temp\n            </button>\n          </div>\n\n          {activeTab === \"wind\" && weatherData && (\n            <iframe\n              title=\"Windy Map\"\n              src={`https://embed.windy.com/embed.html?lat=${weatherData.city.coord.lat}&lon=${weatherData.city.coord.lon}&zoom=5&overlay=wind&metricTemp=\u00B0C&metricWind=m/s`}\n              className=\"w-full h-full rounded-md\"\n              frameBorder=\"0\"\n            ></iframe>\n          )}\n          {activeTab === \"swell\" && weatherData && (\n            <iframe\n              title=\"Swell Map\"\n              src={`https://embed.windy.com/embed.html?lat=${weatherData.city.coord.lat}&lon=${weatherData.city.coord.lon}&zoom=5&overlay=swell1&product=ecmwfWaves&level=surface`}\n              className=\"w-full h-full rounded-md\"\n              frameBorder=\"0\"\n            ></iframe>\n          )}\n          {activeTab === \"temp\" && weatherData && (\n            <iframe\n              title=\"Sea Temperature\"\n              src={`https://embed.windy.com/embed.html?lat=${weatherData.city.coord.lat}&lon=${weatherData.city.coord.lon}&zoom=5&overlay=sst&product=ecmwfAnalysis&level=surface`}\n              className=\"w-full h-full rounded-md\"\n              frameBorder=\"0\"\n            ></iframe>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardData;\n", "export default function EventCard({ event }) {\n  if (!event) {\n    return <p>No event found.</p>;\n  }\n\n  return (\n    <article className=\"flex m-4  p-4 rounded-xl shadow-lg w-full overflow-hidden flex-col bg-slate-50\">\n      <img className=\"rounded-xl\" src={event?.image} alt=\"\" />\n      <div className=\"grid grid-cols-3 p-2 \">\n        <p>{event?.creator?.name}</p>\n        <h2>{event.title}</h2>\n        <p>Date: {new Date(event.date).toLocaleDateString(\"en-GB\")}</p>\n        <p>Location: {event.location}</p>\n        <p className=\"truncate\">Description: {event.description}</p>\n        <p className=\"mt-4 flex items-center font-semibold\">\n          Likes: {event.attendees?.length || 0}\n        </p>\n      </div>\n    </article>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function EventCard({ event }) {\n  const [city, setCity] = useState(null);\n\n  const fetchCityFromCoordinates = async (lat, lng) => {\n    const apiKey = \"AIzaSyC8mGRx4SS4NLfyl7AIOhktrM_F9EOHWYQ\"; // Replace with your Google API key\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;\n\n    try {\n      const response = await axios.get(url);\n      console.log(\"Google Maps API Response:\", response.data); // Log the full response for inspection\n\n      const results = response.data.results;\n      if (results.length > 0) {\n        const addressComponents = results[0].address_components;\n        console.log(\"Address Components:\", addressComponents); // Log the address components for debugging\n\n        // Try finding 'locality', 'administrative_area_level_1', or other components\n        const nearestCity =\n          addressComponents.find(\n            (component) =>\n              component.types.includes(\"locality\") ||\n              component.types.includes(\"administrative_area_level_1\")\n          )?.long_name ||\n          addressComponents.find((component) =>\n            component.types.includes(\"administrative_area_level_2\")\n          )?.long_name ||\n          \"Unknown location\";\n\n        console.log(\"Nearest City:\", nearestCity); // Log the found city name\n        setCity(nearestCity); // Set city state\n      } else {\n        console.log(\"No results found for coordinates.\");\n        setCity(\"Unknown location\"); // Fallback if no city is found\n      }\n    } catch (error) {\n      console.error(\"Error fetching city:\", error);\n      setCity(\"Error fetching location\"); // Handle error\n    }\n  };\n\n  useEffect(() => {\n    if (event.location) {\n      // Split the coordinates string into an array of [lat, lng]\n      const [lat, lng] = event.location\n        .split(\",\")\n        .map((coord) => parseFloat(coord.trim()));\n\n      // Check if lat and lng are valid numbers\n      if (!isNaN(lat) && !isNaN(lng)) {\n        console.log(\"Event Coordinates:\", lat, lng); // Log coordinates to check\n        fetchCityFromCoordinates(lat, lng);\n      } else {\n        console.log(\"Invalid event coordinates:\", event.location); // Log if coordinates are invalid\n        setCity(\"No location available\");\n      }\n    } else {\n      console.log(\"No location data found for event.\");\n      setCity(\"No location available\");\n    }\n  }, [event.location]);\n\n  useEffect(() => {\n    console.log(\"City state updated:\", city); // Log the updated city\n  }, [city]);\n\n  return (\n    <article className=\"flex p-4 rounded-xl shadow-lg w-full bg-slate-50\">\n      <div\n        className=\"w-full rounded-xl\"\n        style={{\n          backgroundImage: `url(${event?.image})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      ></div>\n      <div className=\"flex flex-col w-full\">\n        <div className=\"p-2 ml-4\">\n          <h2 className=\"text-xl font-bold mb-2\">{event.title}</h2>\n          <p className=\"text-gray-500\">{event?.creator?.name}</p>\n        </div>\n        <div className=\"flex flex-col flex-grow ml-4\">\n          <div className=\"flex p-2\">\n            <div className=\"col-span-2\">\n              <div className=\"flex items-center\">\n                <h3 className=\"font-semibold mr-1\">Date: </h3>\n                <p>{new Date(event.date).toLocaleDateString(\"en-GB\")}</p>\n              </div>\n              <div className=\"flex items-center\">\n                <h3 className=\"mr-1 font-semibold\">Location: </h3>\n                <p>{city || \"Fetching city...\"}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 mt-4 ml-2\">\n            <h3 className=\"mb-2 font-semibold\">Description:</h3>\n            <p className=\"truncate\">{event.description}</p>\n            <p className=\"mt-4 flex items-center font-semibold\">\n              Likes: {event.attendees?.length || 0}\n            </p>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n", "import { Form, useLoaderData } from \"@remix-run/react\";\nimport { authenticator } from \"../services/auth.server\";\nimport EventCard from \"../components/EventCard\";\nimport mongoose from \"mongoose\";\nimport EventListCards from \"../components/EventListCards\";\nimport { Link } from \"react-router-dom\";\n\nexport async function loader({ request }) {\n  // Fetch user\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  // Fetch events created by the user\n  const events = await mongoose.models.Event.find({ creator: user._id })\n    .populate(\"creator\")\n    .populate(\"attendees\");\n\n  // Fetch events the user is attending\n  const eventsAttending = await mongoose.models.Event.find({\n    attendees: user._id,\n  })\n    .populate(\"creator\")\n    .populate(\"attendees\");\n\n  // Fetch the updated user\n  const userUpdated = await mongoose.models.User.findOne({ _id: user._id });\n\n  // Return user, events created by the user, and events the user is attending\n  return { user: userUpdated, events, eventsAttending };\n}\n\nexport default function Profile() {\n  const { user, events, eventsAttending } = useLoaderData();\n\n  return (\n    <div className=\"page flex flex-col justify-center m-auto w-4/6\">\n      <div className=\"w-full flex flex-col justify-center m-auto my-8\">\n        <div className=\"flex justify-between\">\n          <h1 className=\"font-semibold text-xl\">Profile</h1>\n          <Form>\n            <Link to={`/profile/${user._id}/update`}>\n              <button>\n                <svg\n                  width=\"30px\"\n                  height=\"30px\"\n                  className=\"hover:stroke-gray-400 stroke-black\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g id=\"Complete\">\n                    <g id=\"edit\">\n                      <g>\n                        <path\n                          d=\"M20,16v4a2,2,0,0,1-2,2H4a2,2,0,0,1-2-2V6A2,2,0,0,1,4,4H8\"\n                          fill=\"none\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                        />\n                        <polygon\n                          fill=\"none\"\n                          points=\"12.5 15.8 22 6.2 17.8 2 8.3 11.5 8 16 12.5 15.8\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                        />\n                      </g>\n                    </g>\n                  </g>\n                </svg>\n              </button>\n            </Link>\n          </Form>\n        </div>\n        <div className=\"flex flex-col\">\n          <div className=\"py-2\">\n            <p className=\"font-semibold\">Name: </p>\n            <p>{user?.name}</p>\n          </div>\n          <div className=\"py-2\">\n            <p className=\"font-semibold\">Mail: </p>\n            <p>{user?.mail}</p>\n          </div>\n        </div>\n\n        <Form\n          method=\"post\"\n          className=\"items-center w-1/2 bg-gray-100 hover:bg-gray-200 rounded-xl p-2 m-auto\"\n        >\n          <div className=\"\">\n            <button className=\"text-cancel flex flex-row font-semibold w-full justify-center\">\n              Logout\n            </button>\n          </div>\n        </Form>\n      </div>\n      <div className=\"py-6\">\n        <h2 className=\"text-2xl font-semibold\">Liked posts</h2>\n      </div>\n      <div>\n        {eventsAttending.map((event) => (\n          <div key={event._id}>\n            <Link className=\"event-link\" to={`/event/${event._id}`}>\n              <div className=\" md:hidden \">\n                <EventListCards event={event} />\n              </div>\n              <div className=\"hidden md:block\">\n                <EventCard event={event} />\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n      <div className=\"mb-16\">\n        <h2 className=\"text-lg font-medium pt-6\">Posts by me</h2>\n        {events.map((event) => (\n          <div key={event._id}>\n            <Link className=\"event-link\" to={`/event/${event._id}`}>\n              <div className=\" md:hidden \">\n                <EventListCards event={event} />\n              </div>\n              <div className=\"hidden md:block\">\n                <EventCard event={event} />\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  await authenticator.logout(request, { redirectTo: \"/main-dashboard\" });\n}\n", "import { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\nimport mongoose from \"mongoose\";\nimport { useEffect, useState } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\n\nconst GOOGLE_MAPS_API_KEY = \"AIzaSyC8mGRx4SS4NLfyl7AIOhktrM_F9EOHWYQ\";\nconst MAP_ID = \"71f267d426ae7773\"; // Replace with your actual Map ID\n\nexport function meta({ data }) {\n  return [\n    {\n      title: `TrailBlaze - ${data.event.title || \"Event\"}`,\n    },\n  ];\n}\n\nexport async function loader({ request, params }) {\n  const authUser = await authenticator.isAuthenticated(request);\n  const event = await mongoose.models.Event.findById(params.eventId)\n    .populate(\"attendees\")\n    .populate(\"creator\");\n  return json({ event, authUser });\n}\n\nexport default function Event() {\n  const { event, authUser } = useLoaderData();\n  const [city, setCity] = useState(null);\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n  });\n\n  const location = event?.location\n    ? {\n        lat: parseFloat(event.location.split(\",\")[0]),\n        lng: parseFloat(event.location.split(\",\")[1]),\n      }\n    : null;\n  useEffect(() => {\n    if (location) {\n      const fetchCityName = async () => {\n        const geocodeUrl = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${location.lat},${location.lng}&key=${GOOGLE_MAPS_API_KEY}`;\n        try {\n          const response = await fetch(geocodeUrl);\n          const data = await response.json();\n\n          if (data.results.length > 0) {\n            // Filter results to exclude Plus Codes\n            const filteredResults = data.results.filter(\n              (result) => !result.types.includes(\"plus_code\")\n            );\n\n            // Find the best match for city or locality\n            const cityResult = filteredResults.find((result) =>\n              result.types.includes(\"locality\")\n            );\n\n            if (cityResult) {\n              const cityComponent = cityResult.address_components.find(\n                (component) => component.types.includes(\"locality\")\n              );\n              if (cityComponent) {\n                setCity(cityComponent.long_name);\n                return;\n              }\n              console.log(\"Parsed Location:\", location);\n            }\n\n            // Fallback to administrative area or formatted address\n            const fallbackResult = filteredResults[0];\n            setCity(fallbackResult?.formatted_address || \"Unknown Location\");\n          } else {\n            setCity(\"Unknown Location\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching city name:\", error);\n          setCity(\"Error fetching location\");\n        }\n      };\n      console.log(\"Parsed Location:\", location);\n      fetchCityName();\n    }\n  }, [location]);\n\n  if (loadError) return <div>Error loading Google Maps</div>;\n  if (!isLoaded) return <div>Loading Google Maps...</div>;\n\n  const attending = event?.attendees?.some(\n    (attendee) => attendee._id === authUser?._id\n  );\n\n  return (\n    <div\n      id=\"event-page\"\n      className=\"page max-w-5xl flex flex-col justify-center m-auto p-6\"\n    >\n      <div\n        className=\"h-96 w-full flex rounded-xl\"\n        style={{\n          backgroundImage: `url(${event?.image})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      ></div>\n      <div className=\"my-4\">\n        <h1 className=\"text-3xl\">{event.title}</h1>\n        <p className=\"text-gray-500\">Post by: {event?.creator?.name}</p>\n      </div>\n      <h3>{event.description}</h3>\n      <div className=\"flex my-2\">\n        <img src=\"/date.png\" alt=\"\" className=\"h-6\" />\n        <p className=\"pl-2\">\n          {new Date(event.date).toLocaleDateString(\"en-GB\")}\n        </p>\n      </div>\n      <div className=\"flex my-2\">\n        <img src=\"/location.png\" alt=\"Location Icon\" className=\"h-6\" />\n        <p className=\"pl-2\">{city || \"Fetching location...\"}</p>\n      </div>\n      {isLoaded && location ? (\n        <GoogleMap\n          mapContainerStyle={{ width: \"100%\", height: \"400px\" }}\n          center={location}\n          zoom={12}\n          options={{\n            mapId: MAP_ID,\n          }}\n        >\n          <Marker position={location} />\n        </GoogleMap>\n      ) : (\n        <div>Loading Google Maps...</div>\n      )}\n\n      <p>{event.attendees.length} Like</p>\n      {!attending && authUser ? (\n        <Form method=\"post\">\n          <button name=\"_action\" value=\"attend\">\n            Like\n          </button>\n        </Form>\n      ) : authUser ? (\n        <Form method=\"post\">\n          <button name=\"_action\" value=\"unattend\">\n            Unlike\n          </button>\n        </Form>\n      ) : null}\n      {authUser?._id === event?.creator?._id && (\n        <div className=\"flex py-4\">\n          <Form action=\"update\">\n            <button>Update</button>\n          </Form>\n          <Form action=\"destroy\" method=\"post\">\n            <button className=\"ml-4 text-cancel\">Delete this event</button>\n          </Form>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import React from \"react\";\nimport DashboardData from \"../components/DashboardData\";\n\nexport const meta = () => {\n  return [{ title: \"Elevation\" }];\n};\n\nexport default function MainDashboard() {\n  return (\n    <div className=\"page\">\n      <div className=\"page\">\n        <DashboardData />\n      </div>\n    </div>\n  );\n}\n", "import { json } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport PostCard from \"../components/PostCard\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport function meta({ data }) {\n  return [\n    {\n      title: `Remix Post App - ${data.post.caption || \"Post\"}`,\n    },\n  ];\n}\n\nexport async function loader({ request, params }) {\n  // Ensure the user is authenticated\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n  // Load the post and the user who created it\n  const post = await mongoose.models.Post.findById(params.postId).populate(\"user\");\n  return json({ post, authUser });\n}\n\nexport default function Post() {\n  const { post, authUser } = useLoaderData();\n\n  function confirmDelete(event) {\n    const response = confirm(\"Please confirm you want to delete this post.\");\n    if (!response) {\n      event.preventDefault();\n    }\n  }\n\n  return (\n    <div id=\"post-page\" className=\"page\">\n      <h1>{post.caption}</h1>\n      <PostCard post={post} />\n      {authUser._id === post.user._id && (\n        <div className=\"btns\">\n          <Form action=\"update\">\n            <button>Update</button>\n          </Form>\n          <Form action=\"destroy\" method=\"post\" onSubmit={confirmDelete}>\n            <button>Delete</button>\n          </Form>\n        </div>\n      )}\n    </div>\n  );\n}\n", "export default function UserAvatar({ user }) {\n  return (\n    <div className=\"avatar\">\n      <img src={user.image} alt={user.name} />\n      <span>\n        <h3>{user.name}</h3>\n        <p>{user.title}</p>\n      </span>\n    </div>\n  );\n}\n", "import UserAvatar from \"./UserAvatar\";\n\nexport default function PostCard({ post }) {\n  return (\n    <article className=\"post-card\">\n      <UserAvatar user={post.user} />\n      <img src={post.image} alt={post.caption} />\n      <h3>{post.caption}</h3>\n    </article>\n  );\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport mongoose from \"mongoose\";\nimport EventListCards from \"../components/EventListCards\";\nimport EventCard from \"../components/EventCard\";\n\nconst GOOGLE_MAPS_API_KEY = \"AIzaSyC8mGRx4SS4NLfyl7AIOhktrM_F9EOHWY\";\nconst MAP_ID = \"71f267d426ae7773\"; // Replace with your actual Map ID\n\nexport const meta = () => {\n  return [{ title: \"Evelation - Post\" }];\n};\n\nexport async function loader({ request }) {\n  const event = await mongoose.models.Event.find()\n    .populate(\"creator\")\n    .populate(\"attendees\");\n\n  return json({ event });\n}\n\nexport default function Index() {\n  const { event } = useLoaderData();\n  const [center] = useState({ lat: 41.0082, lng: 28.9784 }); // Default center (Istanbul)\n  const mapRef = useRef();\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n    libraries: [\"places\"],\n  });\n\n  if (loadError) {\n    return <div>Error loading Google Maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"map-container\">\n        <GoogleMap\n          mapContainerStyle={{ width: \"100%\", height: \"400px\" }}\n          center={center}\n          zoom={6}\n          onLoad={(map) => {\n            mapRef.current = map;\n            map.setOptions({\n              mapId: MAP_ID,\n            });\n          }}\n        >\n          {event.map(\n            (evt) =>\n              evt.location && ( // Ensure the event has location data\n                <Marker\n                  key={evt._id}\n                  position={{\n                    lat: evt.location.lat,\n                    lng: evt.location.lng,\n                  }}\n                  title={evt.title}\n                />\n              )\n          )}\n        </GoogleMap>\n      </div>\n      <section className=\"events-list\">\n        {event.map((evt) => (\n          <div key={evt._id} className=\"event-item\">\n            <EventCard event={evt} />\n          </div>\n        ))}\n      </section>\n    </div>\n  );\n}\n", "", "import { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { Form } from \"@remix-run/react\";\nimport { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\nimport { authenticator } from \"../services/auth.server\";\nimport mongoose from \"mongoose\";\nimport { redirect } from \"@remix-run/node\";\n\nconst GOOGLE_MAPS_API_KEY = \"AIzaSyC8mGRx4SS4NLfyl7AIOhktrM_F9EOHWYQ\";\n\nconst mapLibraries = [\"marker\"];\nconst MAP_ID = \"71f267d426ae7773\"; // Replace with your actual Map ID\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n}\n\nexport default function AddEvent() {\n  const [image, setImage] = useState(\n    \"https://placehold.co/600x400?text=Add+your+amazing+image\"\n  );\n  const [location, setLocation] = useState(null);\n  const [center] = useState({ lat: 41.0082, lng: 28.9784 }); // Istanbul coordinates\n  const mapRef = useRef();\n  const navigate = useNavigate();\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n    libraries: mapLibraries,\n  });\n\n  const handleMapClick = (event) => {\n    setLocation({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n    });\n  };\n\n  const handleCancel = () => navigate(\"/dashboard\");\n\n  useEffect(() => {\n    if (location && mapRef.current && window.google) {\n      const map = mapRef.current;\n\n      // Check if AdvancedMarkerElement is available\n      if (google.maps.marker.AdvancedMarkerElement) {\n        const markerContent = document.createElement(\"div\");\n        markerContent.style.fontSize = \"24px\";\n\n        new google.maps.marker.AdvancedMarkerElement({\n          position: location,\n          map: map,\n          content: markerContent,\n        });\n      } else {\n        console.warn(\"AdvancedMarkerElement is not available.\");\n      }\n    }\n  }, [location]);\n\n  if (loadError) {\n    return <div>Error loading Google Maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"page w-full flex-col gap-y-4 justify-center mt-4 mb-4 p-8\">\n      <h1 className=\"m-auto flex justify-center font-semibold text-2xl mb-6\">\n        Create New Event\n      </h1>\n      <Form\n        id=\"event-form\"\n        method=\"post\"\n        className=\"rounded-lg font-semibold max-w-lg justify-center m-auto flex flex-col gap-y-4 p-4\"\n      >\n        <label htmlFor=\"title\">Event Title</label>\n        <input\n          required\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Write a title...\"\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          required\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Write a description...\"\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"date\">Date</label>\n        <input\n          required\n          id=\"date\"\n          name=\"date\"\n          type=\"date\"\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"location\">Location</label>\n        <input\n          id=\"location\"\n          name=\"location\"\n          type=\"text\"\n          readOnly\n          placeholder=\"Click on the map to select a location\"\n          value={location ? `${location.lat}, ${location.lng}` : \"\"}\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <GoogleMap\n          mapContainerStyle={{ width: \"100%\", height: \"400px\" }}\n          center={center}\n          zoom={12}\n          onClick={handleMapClick}\n          onLoad={(map) => {\n            mapRef.current = map;\n            map.setOptions({\n              mapId: MAP_ID,\n            });\n          }}\n        >\n          {location && <Marker position={location} title=\"Selected Location\" />}\n        </GoogleMap>\n\n        <label htmlFor=\"image\">Image URL</label>\n        <input\n          required\n          id=\"image\"\n          name=\"image\"\n          type=\"url\"\n          placeholder=\"Paste an image URL...\"\n          onChange={(e) => setImage(e.target.value)}\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <img\n          id=\"image-preview\"\n          src={image}\n          alt=\"Preview\"\n          className=\"image-preview m-auto rounded-xl\"\n        />\n\n        <div className=\"flex justify-between\">\n          <button\n            type=\"submit\"\n            className=\"bg-accent hover:bg-primary hover:text-background p-2 rounded-lg\"\n          >\n            Save\n          </button>\n          <button\n            type=\"button\"\n            className=\"text-cancel p-2 rounded-lg\"\n            onClick={handleCancel}\n          >\n            Cancel\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const formData = await request.formData();\n  const event = Object.fromEntries(formData);\n\n  event.creator = user._id;\n\n  await mongoose.models.Event.create(event);\n\n  return redirect(\"/dashboard\");\n}\n", "import { redirect } from \"@remix-run/node\";\nimport { Form, useNavigate } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { useState } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport const meta = () => {\n  return [{ title: \"Remix Post App - Add New Post\" }];\n};\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n}\n\nexport default function AddPost() {\n  const [image, setImage] = useState(\"https://placehold.co/600x400?text=Add+your+amazing+image\");\n  const navigate = useNavigate();\n\n  function handleCancel() {\n    navigate(-1);\n  }\n\n  return (\n    <div className=\"page\">\n      <h1>Add a Post</h1>\n      <Form id=\"post-form\" method=\"post\">\n        <label htmlFor=\"caption\">Caption</label>\n        <input id=\"caption\" name=\"caption\" type=\"text\" aria-label=\"caption\" placeholder=\"Write a caption...\" />\n\n        <label htmlFor=\"image\">Image URL</label>\n        <input name=\"image\" type=\"url\" onChange={(e) => setImage(e.target.value)} placeholder=\"Paste an image URL...\" />\n\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <img\n          id=\"image-preview\"\n          className=\"image-preview\"\n          src={image ? image : \"https://placehold.co/600x400?text=Paste+an+image+URL\"}\n          alt=\"Choose\"\n          onError={(e) => (e.target.src = \"https://placehold.co/600x400?text=Error+loading+image\")}\n        />\n\n        <div className=\"btns\">\n          <button>Save</button>\n          <button type=\"button\" className=\"btn-cancel\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  // Get the authenticated user\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n  console.log(user);\n  const formData = await request.formData();\n  const post = Object.fromEntries(formData);\n\n  // Add the authenticated user's id to the post.user field\n  post.user = user._id;\n  // Save the post to the database\n  await mongoose.models.Post.create(post);\n\n  return redirect(\"/posts\");\n}\n", "import { Form, useLoaderData } from \"@remix-run/react\";\nimport { Link } from \"@remix-run/react\"; // Correct import\nimport { authenticator } from \"../services/auth.server\";\n\n// Loader function to fetch authenticated user\nexport async function loader({ request }) {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n  return user; // Return user data to be used in the Profile component\n}\n\nexport default function Profile() {\n  const user = useLoaderData(); // Get the user data from loader\n\n  return (\n    <div className=\"page\">\n      <div className=\"bg-slate-800 p-8\">\n        <div className=\"flex justify-center items-center space-x-4\">\n          <img\n            src={user.avatar}\n            alt=\"Profile\"\n            className=\"rounded-full h-24 w-24 border-4 border-white\"\n          />\n          <div>\n            <p className=\"text-white font-bold text-3xl\">\n              {user.name} {user.lastname}\n            </p>\n            <p className=\"text-white text-lg\">{user.mail}</p>\n            <p className=\"text-white\">Your sports: {user.hobbies.join(\", \")}</p>\n          </div>\n        </div>\n      </div>\n\n      <Form method=\"post\" className=\"flex justify-center mt-4\">\n        <button className=\"bg-red-600 text-white py-2 px-4 rounded hover:bg-red-700\">\n          Logout\n        </button>\n      </Form>\n    </div>\n  );\n}\n\n// Action function to handle logout\nexport async function action({ request }) {\n  await authenticator.logout(request, { redirectTo: \"/signin\" });\n}\n", "import { authenticator } from \"../services/auth.server\";\n\nexport const meta = () => {\n  return [{ title: \"Elevation\" }];\n};\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    successRedirect: \"/dashboard\",\n    failureRedirect: \"/main-dashboard\",\n  });\n}\n", "import { json } from \"@remix-run/node\";\nimport { Form, NavLink, useLoaderData } from \"@remix-run/react\";\nimport { authenticator } from \"../services/auth.server\";\nimport { sessionStorage } from \"../services/session.server\";\n\nexport async function loader({ request }) {\n  // If the user is already authenticated redirect to /posts directly\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/dashboard\",\n  });\n  // Retrieve error message from session if present\n  const session = await sessionStorage.getSession(\n    request.headers.get(\"Cookie\")\n  );\n  // Get the error message from the session\n  const error = session.get(\"sessionErrorKey\");\n  // Remove the error message from the session after it's been retrieved\n  session.unset(\"sessionErrorKey\");\n  // Commit the updated session that no longer contains the error message\n  const headers = new Headers({\n    \"Set-Cookie\": await sessionStorage.commitSession(session),\n  });\n\n  return json({ error }, { headers }); // return the error message\n}\n\nexport default function SignIn() {\n  // if i got an error it will come back with the loader dxata\n  const loaderData = useLoaderData();\n  return (\n    <div\n      id=\"sign-in-page\"\n      className=\" flex flex-col justify-center items-center rounded-lg h-auto w-2/6 ml-auto mr-auto mt-24 p-4 gap-3\"\n    >\n      <h1 className=\"text-2xl w-auto\">Sign In</h1>\n      <Form\n        id=\"sign-in-form\"\n        method=\"post\"\n        className=\"flex items-center flex-col gap-1 w-full\"\n      >\n        <label htmlFor=\"mail\">Email</label>\n        <input\n          id=\"mail\"\n          type=\"email\"\n          name=\"mail\"\n          aria-label=\"mail\"\n          placeholder=\"Type your email...\"\n          required\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"password\" className=\"\">\n          Password\n        </label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          aria-label=\"password\"\n          placeholder=\"Type your password...\"\n          autoComplete=\"current-password\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n        <div className=\"bg-sky-500 text-white hover:bg-sky-600 transition-colors p-2 rounded-xl mt-2 w-32 flex justify-center\">\n          <button>Sign In</button>\n        </div>\n\n        {loaderData?.error ? (\n          <div className=\"error-message\">\n            <p>{loaderData?.error?.message}</p>\n          </div>\n        ) : null}\n      </Form>\n      <p className=\"flex\">\n        No account?{\" \"}\n        <NavLink to=\"/signup\" className=\"text-sky-500\">\n          Sign up here.\n        </NavLink>\n      </p>\n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  // we call the method with the name of the strategy we want to use and the\n  // request object, optionally we pass an object with the URLs we want the user\n  // to be redirected to after a success or a failure\n  return await authenticator.authenticate(\"user-pass\", request, {\n    successRedirect: \"/dashboard\",\n    failureRedirect: \"/signin\",\n  });\n}\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, NavLink, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { authenticator } from \"../services/auth.server\";\nimport { sessionStorage } from \"../services/session.server\";\nimport { useState, useRef, useEffect } from \"react\";\n\n// Loader function to check if user is authenticated\nexport async function loader({ request }) {\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/dashboard\",\n  });\n\n  const session = await sessionStorage.getSession(\n    request.headers.get(\"Cookie\")\n  );\n  const error = session.get(\"sessionErrorKey\");\n  session.unset(\"sessionErrorKey\");\n  const headers = new Headers({\n    \"Set-Cookie\": await sessionStorage.commitSession(session),\n  });\n\n  return json({ error }, { headers });\n}\n\n// SignUp Component\nexport default function SignUp() {\n  const loaderData = useLoaderData();\n  const [selectedHobbies, setSelectedHobbies] = useState([]);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null); // Declare ref here\n\n  const sportsOptions = [\"Surf\", \"Ski\", \"Kite\"];\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    setSelectedHobbies((prev) =>\n      checked ? [...prev, value] : prev.filter((hobby) => hobby !== value)\n    );\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [dropdownRef]);\n\n  return (\n    <div\n      id=\"sign-up-page\"\n      className=\"flex flex-col justify-center items-center rounded-lg h-auto w-2/6 ml-auto mr-auto mt-24 mb-32 p-4 gap-3\"\n    >\n      <h1 className=\"text-2xl w-auto\">Sign Up</h1>\n      <Form\n        id=\"sign-up-form\"\n        method=\"post\"\n        className=\"flex items-center flex-col gap-1 w-full\"\n      >\n        <label htmlFor=\"mail\">Email</label>\n        <input\n          id=\"mail\"\n          type=\"email\"\n          name=\"mail\"\n          aria-label=\"mail\"\n          placeholder=\"Type your email...\"\n          required\n          autoComplete=\"off\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          aria-label=\"password\"\n          placeholder=\"Type your password...\"\n          autoComplete=\"current-password\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"firstName\">First name</label>\n        <input\n          id=\"firstName\"\n          type=\"text\"\n          name=\"name\"\n          aria-label=\"first name\"\n          placeholder=\"Type your first name..\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"lastName\">Last name</label>\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          name=\"lastName\"\n          aria-label=\"last name\"\n          placeholder=\"Type your last name...\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label>Select your hobbies:</label>\n        <div className=\"relative\" ref={dropdownRef}>\n          <button\n            type=\"button\"\n            onClick={toggleDropdown}\n            className=\"bg-white p-2 w-full rounded-xl border\"\n          >\n            Choose your hobbies\n          </button>\n          {dropdownOpen && (\n            <div className=\"absolute top-full mt-1 w-full bg-white border rounded-lg shadow-lg z-10\">\n              {sportsOptions.map((sport) => (\n                <label key={sport} className=\"block p-2\">\n                  <input\n                    type=\"checkbox\"\n                    value={sport}\n                    checked={selectedHobbies.includes(sport)}\n                    onChange={handleCheckboxChange}\n                  />\n                  {sport}\n                </label>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Display selected hobbies in a separate div */}\n        <div className=\"mt-2\">\n          {selectedHobbies.length > 0 && (\n            <div className=\"p-2 bg-gray-100 border rounded-lg\">\n              <strong>Selected Hobbies:</strong>\n              <p>{selectedHobbies.join(\", \")}</p>\n            </div>\n          )}\n        </div>\n\n        <input\n          type=\"hidden\"\n          name=\"selectedHobbies\"\n          value={JSON.stringify(selectedHobbies)}\n        />\n\n        <div className=\"bg-sky-500 text-white hover:bg-sky-600 transition-colors p-2 rounded-xl mt-2 w-32 flex justify-center\">\n          <button>Sign Up</button>\n        </div>\n\n        {loaderData?.error ? (\n          <div className=\"error-message\">\n            <p>{loaderData?.error?.message}</p>\n          </div>\n        ) : null}\n      </Form>\n      <p>\n        Already have an account?{\" \"}\n        <NavLink to=\"/signin\" className={\"text-sky-500\"}>\n          Sign in here.\n        </NavLink>\n      </p>\n    </div>\n  );\n}\n\n// Action function to handle form submission\nexport async function action({ request }) {\n  try {\n    const formData = await request.formData();\n    const newUser = Object.fromEntries(formData);\n\n    // Parse selectedHobbies from JSON string to array\n    newUser.selectedHobbies = JSON.parse(newUser.selectedHobbies || \"[]\");\n\n    // Create the user in MongoDB with all fields\n    await mongoose.models.User.create({\n      mail: newUser.mail,\n      password: newUser.password,\n      name: newUser.name,\n      lastname: newUser.lastName, // Capturing lastname here\n      hobbies: newUser.selectedHobbies, // Optional, based on schema\n    });\n\n    return redirect(\"/signin\");\n  } catch (error) {\n    console.log(error);\n    return redirect(\"/signup\");\n  }\n}\n", "import { Link } from \"react-router-dom\";\nexport default function Example() {\n  return (\n    <>\n      <main className=\"relative isolate min-h-full\">\n        <img\n          src=\"https://cdn.pixabay.com/photo/2017/08/10/01/11/field-2616740_1280.jpg\"\n          alt=\"\"\n          className=\"absolute inset-0 -z-10 h-full w-full object-cover \"\n          style={{\n            filter: \"grayscale(100%) contrast(1.5) brightness(0.7)\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <div className=\"mx-auto max-w-7xl px-6 py-32 text-center sm:py-40 lg:px-8 text-gray-50\">\n          <p className=\"text-base font-semibold leading-8 text-white\">404</p>\n          <h1 className=\"mt-4 text-3xl font-bold tracking-tight  sm:text-5xl\">\n            Page not found\n          </h1>\n          <p className=\"mt-4 text-base  sm:mt-6\">\n            Sorry, we couldn\u2019t find the page you\u2019re looking for.\n          </p>\n          <div className=\"mt-10 flex justify-center\">\n            <Link to=\"/event\" className=\"text-sm font-semibold leading-7 \">\n              <span aria-hidden=\"true\">&larr;</span> Back to home\n            </Link>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-7HXZCFKR.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-KKDHQITS.js','/build/_shared/chunk-LMGUNZ3X.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-HKPYBBGK.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-EHWSPLNU.js','imports':['/build/_shared/chunk-SARLQUTN.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-YBNG2UBP.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/add-event':{'id':'routes/add-event','parentId':'root','path':'add-event','index':undefined,'caseSensitive':undefined,'module':'/build/routes/add-event-2NMNLWPF.js','imports':['/build/_shared/chunk-SDEB5LWC.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/add-post':{'id':'routes/add-post','parentId':'root','path':'add-post','index':undefined,'caseSensitive':undefined,'module':'/build/routes/add-post-4L7ESQ5R.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/dashboard._index':{'id':'routes/dashboard._index','parentId':'root','path':'dashboard','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard._index-BA4PIDIS.js','imports':['/build/_shared/chunk-V6KE3PNR.js','/build/_shared/chunk-P6JZWUJZ.js','/build/_shared/chunk-UJ252UTL.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/error':{'id':'routes/error','parentId':'root','path':'error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/error-HSYC2SWZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/event.$eventId':{'id':'routes/event.$eventId','parentId':'root','path':'event/:eventId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/event.$eventId-OVVHWV6T.js','imports':['/build/_shared/chunk-SDEB5LWC.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/event.$eventId.destroy':{'id':'routes/event.$eventId.destroy','parentId':'routes/event.$eventId','path':'destroy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/event.$eventId.destroy-IHPZH4G4.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/event.$eventId_.update':{'id':'routes/event.$eventId_.update','parentId':'root','path':'event/:eventId/update','index':undefined,'caseSensitive':undefined,'module':'/build/routes/event.$eventId_.update-BZH6KNVR.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/event._index':{'id':'routes/event._index','parentId':'root','path':'event','index':true,'caseSensitive':undefined,'module':'/build/routes/event._index-VUK66PBI.js','imports':['/build/_shared/chunk-SDEB5LWC.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-UJ252UTL.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/main-dashboard':{'id':'routes/main-dashboard','parentId':'root','path':'main-dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/main-dashboard-SSFNCLYP.js','imports':['/build/_shared/chunk-P6JZWUJZ.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/posts.$postId':{'id':'routes/posts.$postId','parentId':'root','path':'posts/:postId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts.$postId-KLV5VW7H.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/posts.$postId.destroy':{'id':'routes/posts.$postId.destroy','parentId':'routes/posts.$postId','path':'destroy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts.$postId.destroy-QJD7CVP4.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/posts.$postId_.update':{'id':'routes/posts.$postId_.update','parentId':'root','path':'posts/:postId/update','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts.$postId_.update-32ZHGPIC.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/profile.$userId':{'id':'routes/profile.$userId','parentId':'root','path':'profile/:userId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.$userId-CHP4HAEV.js','imports':['/build/_shared/chunk-V6KE3PNR.js','/build/_shared/chunk-UJ252UTL.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/profile.$userId_.update':{'id':'routes/profile.$userId_.update','parentId':'root','path':'profile/:userId/update','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.$userId_.update-BQVAG5LU.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/profile1':{'id':'routes/profile1','parentId':'root','path':'profile1','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile1-CL2CFHKQ.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/signin':{'id':'routes/signin','parentId':'root','path':'signin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signin-E5UMBJ46.js','imports':['/build/_shared/chunk-QUYRSHBJ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-SDPVZWSB.js','imports':['/build/_shared/chunk-QUYRSHBJ.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-GMSPC5K3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/users._index':{'id':'routes/users._index','parentId':'root','path':'users','index':true,'caseSensitive':undefined,'module':'/build/routes/users._index-6AIM527Q.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'1d3c4e1f','hmr':{'runtime':'/build/_shared/chunk-HKPYBBGK.js','timestamp':1732895610053},'url':'/build/manifest-1D3C4E1F.js'};", "\nimport * as entryServer from \"/Users/nicolaidigenielsen/Documents/GitHub/surfapp/app/entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/profile.$userId_.update.jsx\";\nimport * as route2 from \"./routes/event.$eventId.destroy.jsx\";\nimport * as route3 from \"./routes/event.$eventId_.update.jsx\";\nimport * as route4 from \"./routes/posts.$postId.destroy.jsx\";\nimport * as route5 from \"./routes/posts.$postId_.update.jsx\";\nimport * as route6 from \"./routes/dashboard._index.jsx\";\nimport * as route7 from \"./routes/profile.$userId.jsx\";\nimport * as route8 from \"./routes/event.$eventId.jsx\";\nimport * as route9 from \"./routes/main-dashboard.jsx\";\nimport * as route10 from \"./routes/posts.$postId.jsx\";\nimport * as route11 from \"./routes/event._index.jsx\";\nimport * as route12 from \"./routes/users._index.jsx\";\nimport * as route13 from \"./routes/add-event.jsx\";\nimport * as route14 from \"./routes/add-post.jsx\";\nimport * as route15 from \"./routes/profile1.jsx\";\nimport * as route16 from \"./routes/_index.jsx\";\nimport * as route17 from \"./routes/signin.jsx\";\nimport * as route18 from \"./routes/signup.jsx\";\nimport * as route19 from \"./routes/error.jsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/profile.$userId_.update\": {\n      id: \"routes/profile.$userId_.update\",\n      parentId: \"root\",\n      path: \"profile/:userId/update\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/event.$eventId.destroy\": {\n      id: \"routes/event.$eventId.destroy\",\n      parentId: \"routes/event.$eventId\",\n      path: \"destroy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/event.$eventId_.update\": {\n      id: \"routes/event.$eventId_.update\",\n      parentId: \"root\",\n      path: \"event/:eventId/update\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/posts.$postId.destroy\": {\n      id: \"routes/posts.$postId.destroy\",\n      parentId: \"routes/posts.$postId\",\n      path: \"destroy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/posts.$postId_.update\": {\n      id: \"routes/posts.$postId_.update\",\n      parentId: \"root\",\n      path: \"posts/:postId/update\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/dashboard._index\": {\n      id: \"routes/dashboard._index\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/profile.$userId\": {\n      id: \"routes/profile.$userId\",\n      parentId: \"root\",\n      path: \"profile/:userId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/event.$eventId\": {\n      id: \"routes/event.$eventId\",\n      parentId: \"root\",\n      path: \"event/:eventId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/main-dashboard\": {\n      id: \"routes/main-dashboard\",\n      parentId: \"root\",\n      path: \"main-dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/posts.$postId\": {\n      id: \"routes/posts.$postId\",\n      parentId: \"root\",\n      path: \"posts/:postId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/event._index\": {\n      id: \"routes/event._index\",\n      parentId: \"root\",\n      path: \"event\",\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/users._index\": {\n      id: \"routes/users._index\",\n      parentId: \"root\",\n      path: \"users\",\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/add-event\": {\n      id: \"routes/add-event\",\n      parentId: \"root\",\n      path: \"add-event\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/add-post\": {\n      id: \"routes/add-post\",\n      parentId: \"root\",\n      path: \"add-post\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/profile1\": {\n      id: \"routes/profile1\",\n      parentId: \"root\",\n      path: \"profile1\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/signin\": {\n      id: \"routes/signin\",\n      parentId: \"root\",\n      path: \"signin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/error\": {\n      id: \"routes/error\",\n      parentId: \"root\",\n      path: \"error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    }\n  };"],
  "mappings": "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",
  "names": ["mongoose", "mongoose", "bcrypt", "mongoose", "bcrypt", "User", "Event", "mongoose", "jsxDEV", "NavLink", "jsxDEV", "Nav", "jsxDEV", "NavLink", "jsxDEV", "jsxDEV", "Nav", "loader", "mongoose", "useLoaderData", "jsxDEV", "loader", "mongoose", "useLoaderData", "action", "loader", "mongoose", "loader", "action", "mongoose", "action", "loader", "meta", "json", "redirect", "Form", "useLoaderData", "useNavigate", "mongoose", "useState", "jsxDEV", "meta", "loader", "mongoose", "json", "useLoaderData", "useState", "useNavigate", "Form", "action", "redirect", "action", "loader", "redirect", "mongoose", "loader", "action", "mongoose", "redirect", "action", "loader", "meta", "json", "redirect", "Form", "useLoaderData", "useNavigate", "mongoose", "useState", "jsxDEV", "meta", "loader", "mongoose", "json", "useLoaderData", "useState", "useNavigate", "Form", "action", "redirect", "loader", "meta", "json", "useLoaderData", "mongoose", "useEffect", "useState", "jsxDEV", "city", "error", "jsxDEV", "useEffect", "useState", "jsxDEV", "EventCard", "jsxDEV", "meta", "loader", "json", "mongoose", "useLoaderData", "EventCard", "action", "loader", "Form", "useLoaderData", "mongoose", "Link", "jsxDEV", "loader", "mongoose", "useLoaderData", "Form", "EventCard", "action", "loader", "meta", "Form", "useLoaderData", "json", "mongoose", "useEffect", "useState", "jsxDEV", "meta", "loader", "mongoose", "json", "useLoaderData", "useState", "useEffect", "Form", "meta", "jsxDEV", "meta", "loader", "meta", "json", "Form", "useLoaderData", "mongoose", "jsxDEV", "jsxDEV", "jsxDEV", "meta", "loader", "mongoose", "json", "useLoaderData", "Form", "Index", "loader", "meta", "useLoaderData", "GoogleMap", "Marker", "useJsApiLoader", "useState", "useRef", "json", "mongoose", "jsxDEV", "GOOGLE_MAPS_API_KEY", "MAP_ID", "meta", "loader", "mongoose", "json", "Index", "useLoaderData", "useState", "useRef", "useJsApiLoader", "GoogleMap", "Marker", "EventCard", "action", "loader", "useEffect", "useRef", "useState", "useNavigate", "Form", "GoogleMap", "Marker", "useJsApiLoader", "mongoose", "redirect", "jsxDEV", "GOOGLE_MAPS_API_KEY", "MAP_ID", "loader", "useState", "useRef", "useNavigate", "useJsApiLoader", "useEffect", "Form", "GoogleMap", "Marker", "action", "action", "loader", "meta", "redirect", "Form", "useNavigate", "mongoose", "useState", "jsxDEV", "meta", "loader", "useState", "useNavigate", "Form", "action", "mongoose", "redirect", "action", "Profile", "loader", "Form", "useLoaderData", "jsxDEV", "loader", "Profile", "useLoaderData", "Form", "action", "loader", "meta", "meta", "loader", "action", "loader", "json", "Form", "NavLink", "useLoaderData", "jsxDEV", "loader", "json", "useLoaderData", "Form", "NavLink", "action", "action", "loader", "json", "redirect", "Form", "NavLink", "useLoaderData", "mongoose", "useState", "useRef", "useEffect", "jsxDEV", "loader", "json", "useLoaderData", "Form", "NavLink", "action", "mongoose", "redirect", "Link", "jsxDEV"]
}
