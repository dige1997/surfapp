{
  "version": 3,
  "sources": ["../app/entry.server.jsx", "../app/db/db-connect.server.js", "../app/db/models.js", "../app/services/auth.server.jsx", "../app/services/session.server.jsx", "../app/root.jsx", "../app/components/Nav.jsx", "../app/components/NavAll.jsx", "../app/components/footer.jsx", "../app/routes/profile.$userId_.update.jsx", "../app/routes/event.$eventId.destroy.jsx", "../app/routes/event.$eventId_.update.jsx", "../app/components/GoogleMapLoader.jsx", "../app/routes/userProfile.$userId.jsx", "../app/components/EventCard.jsx", "../app/routes/dashboard._index.jsx", "../app/components/DashboardData.jsx", "../app/components/IframeDisplay.jsx", "../app/components/EventListCards.jsx", "../app/routes/profile.$userId.jsx", "../app/routes/event.$eventId.jsx", "../app/routes/main-dashboard.jsx", "../app/routes/event._index.jsx", "../app/components/EventList.jsx", "../app/routes/add-event.jsx", "../app/routes/locations.jsx", "../app/components/ShowAllLocations.jsx", "../app/routes/add-post.jsx", "../app/routes/_index.jsx", "../app/routes/signin.jsx", "../app/routes/signup.jsx", "../app/routes/error.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport connectDb from \"./db/db-connect.server\";\nimport { initData } from \"./db/models\";\n\nconnectDb();\nawait initData();\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import mongoose from \"mongoose\";\nimport { models } from \"./models.js\";\n\nconst { MONGODB_URL, NODE_ENV } = process.env;\n\nif (!MONGODB_URL) {\n  const errorMessage =\n    NODE_ENV === \"production\"\n      ? \"Please define the MONGODB_URL environment variable \u2014 pointing to your full connection string, including database name.\"\n      : \"Please define the MONGODB_URL environment variable inside an .env file \u2014 pointing to your full connection string, including database name.\";\n  throw new Error(errorMessage);\n}\n\n// Call this function from entry.server.jsx. We reuse an existing Mongoose db\n// connection to avoid creating multiple connections in dev mode when Remix\n// \"purges the require cache\" when reloading on file changes.\nexport default function connectDb() {\n  // Just for logging purposes:\n  let modelCreationType = \"Creating\";\n\n  if (NODE_ENV === \"development\") {\n    // In development mode, we want to overwrite any existing models to ensure\n    // we pick up any changes made in schemas.\n    mongoose.set(\"overwriteModels\", true);\n    // If we have any models already, log out that we're overwriting them:\n    if (Object.keys(mongoose.models).length > 0) {\n      modelCreationType = \"Overwriting\";\n    }\n  }\n\n  console.log(\n    // E.g. \"Mongoose: Creating 2 models (Book, Author)\"\n    \"Mongoose: %s %d %s (%s)\",\n    modelCreationType,\n    models.length,\n    models.length === 1 ? \"model\" : \"models\",\n    models.map((model) => model.name).join(\", \")\n  );\n\n  // Create or overwrite the models exported from ./models.js:\n  for (const model of models) {\n    mongoose.model(model.name, model.schema, model.collection);\n  }\n\n  // Reuse the existing Mongoose connection if we have one...\n  // https://mongoosejs.com/docs/api/connection.html#connection_Connection-readyState\n  const readyState = mongoose.connection.readyState;\n  if (readyState > 0) {\n    console.log(\n      \"Mongoose: Re-using existing connection (readyState: %d)\",\n      readyState\n    );\n    return;\n  }\n\n  // If no connection exists yet, set up event logging...\n  // https://mongoosejs.com/docs/connections.html#connection-events\n  mongoose.connection.on(\"error\", (error) => {\n    console.error(\"Mongoose: error %s\", error);\n  });\n\n  for (const event of [\"connected\", \"reconnected\", \"disconnected\", \"close\"]) {\n    mongoose.connection.on(event, () => console.log(\"Mongoose: %s\", event));\n  }\n\n  // ...and create a new connection:\n  mongoose.connect(MONGODB_URL).catch((error) => {\n    console.error(error);\n  });\n}\n", "import mongoose from \"mongoose\";\nimport bcrypt from \"bcrypt\";\nimport { hashPassword } from \"../services/auth.server\";\n\n// ========== models ========== //\n\n// Create a user schema\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n    },\n    lastname: {\n      type: String,\n      required: true,\n    },\n    mail: {\n      type: String,\n      required: true,\n      unique: true,\n    },\n    password: {\n      type: String,\n      required: true,\n      select: false,\n    },\n    hobbies: {\n      type: [String],\n    },\n    avatarUrl: {\n      type: String,\n    },\n    aboutMe: {\n      type: String,\n    },\n    eventsCreated: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Event\",\n      },\n    ],\n    eventsAttending: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Event\",\n      },\n    ],\n    following: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n    followers: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n  },\n  { timestamps: true }\n);\n// Create a method to follow another user\nuserSchema.methods.follow = async function (userId) {\n  if (!this.following.includes(userId)) {\n    this.following.push(userId);\n    await this.save();\n\n    const userToFollow = await User.findById(userId);\n    if (userToFollow && !userToFollow.followers.includes(this._id)) {\n      userToFollow.followers.push(this._id);\n      await userToFollow.save();\n    }\n  }\n};\n\n// Create a method to unfollow another user\nuserSchema.methods.unfollow = async function (userId) {\n  if (this.following.includes(userId)) {\n    this.following.pull(userId);\n    await this.save();\n\n    const userToUnfollow = await User.findById(userId);\n    if (userToUnfollow && userToUnfollow.followers.includes(this._id)) {\n      userToUnfollow.followers.pull(this._id);\n      await userToUnfollow.save();\n    }\n  }\n};\n\nconst User = mongoose.model(\"User\", userSchema);\n\nmongoose.model(\"User\", userSchema);\n\nconst eventSchema = new mongoose.Schema(\n  {\n    date: {\n      type: Date,\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n\n    location: {\n      type: String,\n      required: true,\n    },\n    creator: {\n      required: true,\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    image: {\n      type: String,\n      required: true,\n    },\n    attendees: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n  },\n  { timestamps: true }\n);\n\neventSchema.index({ title: \"text\", description: \"text\" });\n\nmongoose.model(\"Event\", eventSchema);\n\n// pre save password hook\nuserSchema.pre(\"save\", async function (next) {\n  const user = this; // this refers to the user document\n\n  // only hash the password if it has been modified (or is new)\n  if (!user.isModified(\"password\")) {\n    return next(); // continue\n  }\n\n  const salt = await bcrypt.genSalt(10); // generate a salt\n  user.password = await bcrypt.hash(user.password, salt); // hash the password\n\n  user.name = user.name\n    .split(\" \")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n\n  next(); // continue\n});\n\neventSchema.pre(\"save\", async function (next) {\n  const event = this; // this refers to the user document\n\n  event.title = event.title\n    .split(\" \")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n  const creator = await User.findById(event.creator);\n  //make sure the user which created the event has the event in their eventsCreated array\n  if (!creator.eventsCreated.includes(event._id)) {\n    creator.eventsCreated.push(event._id);\n    await creator.save();\n  }\n  next(); // continue\n});\n\nexport const models = [\n  { name: \"User\", schema: userSchema, collection: \"users\" },\n  { name: \"Event\", schema: eventSchema, collection: \"event\" },\n];\n\n// ========== initData ========== //\n\nexport async function initData() {\n  // check if data exists\n  const userCount = await mongoose.models.User.countDocuments();\n  const eventCount = await mongoose.models.Event.countDocuments();\n\n  if (userCount === 0 || eventCount === 0) {\n    await insertData();\n  }\n}\n\n// ========== insertData ========== //\n\nasync function insertData() {\n  const User = mongoose.models.User;\n  const Event = mongoose.models.Event;\n\n  console.log(\"Dropping collections...\");\n\n  console.log(\"Inserting data...\");\n  // Insert users\n\n  const test = await User.create({\n    mail: \"test@test.dk\",\n    name: \"Tester\",\n    lastname: \"Testesen\",\n    eventsCreated: [],\n    eventsAttending: [],\n    password: await hashPassword(\"1234\"),\n    followers: [test2._id],\n    following: [test2._id],\n  });\n\n  console.log(test);\n\n  const test2 = await User.create({\n    mail: \"test2@test2.dk\",\n    name: \"Tester\",\n    lastname: \"Testesen\",\n    eventsCreated: [],\n    eventsAttending: [],\n    password: await hashPassword(\"1234\"),\n  });\n\n  const event1 = await Event.create({\n    date: new Date(),\n    title: \"Event 1\",\n    description: \"Description 1\",\n    location: \"55.676098, 12.568337\",\n    creator: test._id,\n    image: \"https://source.unsplash.com/random\",\n    attendees: [test2._id],\n  });\n\n  const event2 = await Event.create({\n    date: new Date(),\n    title: \"Event 2\",\n    description: \"Description 2\",\n    location: \"55.676098, 12.568337\",\n    creator: test._id,\n    image: \"https://source.unsplash.com/random\",\n    attendees: [test2._id],\n  });\n}\n", "import { Authenticator, AuthorizationError } from \"remix-auth\";\nimport { sessionStorage } from \"./session.server\";\nimport { FormStrategy } from \"remix-auth-form\";\nimport bcrypt from \"bcrypt\";\nimport mongoose from \"mongoose\";\n\n// Create an instance of the authenticator, pass a generic with what\n// strategies will return and will store in the session\nexport let authenticator = new Authenticator(sessionStorage, {\n  sessionErrorKey: \"sessionErrorKey\", // keep in sync\n});\n\n// Tell the Authenticator to use the form strategy\nauthenticator.use(\n  new FormStrategy(async ({ form }) => {\n    let mail = form.get(\"mail\");\n    let password = form.get(\"password\");\n\n    // do some validation, errors are saved in the sessionErrorKey\n    if (!mail || typeof mail !== \"string\" || !mail.trim()) {\n      throw new AuthorizationError(\"Email is required and must be a string\");\n    }\n\n    if (!password || typeof password !== \"string\" || !password.trim()) {\n      throw new AuthorizationError(\"Password is required and must be a string\");\n    }\n\n    // verify the user\n    const user = await verifyUser({ mail, password });\n    if (!user) {\n      // if problem with user throw error AuthorizationError\n      throw new AuthorizationError(\"User not found\");\n    }\n    console.log(user);\n    return user;\n  }),\n  \"user-pass\"\n);\n\nasync function verifyUser({ mail, password }) {\n  const user = await mongoose.models.User.findOne({ mail }).select(\"+password\");\n  if (!user) {\n    throw new AuthorizationError(\"No user found with this email.\");\n  }\n\n  const passwordMatch = await bcrypt.compare(password, user.password);\n  if (!passwordMatch) {\n    throw new AuthorizationError(\"Invalid password.\");\n  }\n  // Remove the password from the user object before returning it\n  user.password = undefined;\n  return user;\n}\n\nexport async function hashPassword(password) {\n  const salt = await bcrypt.genSalt(10);\n  const hash = await bcrypt.hash(password, salt);\n  return hash;\n}\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\n\n// export the whole sessionStorage object\nexport let sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"_session\", // use any name you want here\n    sameSite: \"lax\", // this helps with CSRF\n    path: \"/\", // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: [\"s3cr3t\"], // replace this with an actual secret\n    secure: process.env.NODE_ENV === \"production\", // enable this in prod only\n  },\n});\n\n// you can also export the methods individually for your own usage\nexport let { getSession, commitSession, destroySession } = sessionStorage;\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\nimport stylesheet from \"./tailwind.css\";\nimport Nav from \"./components/Nav\";\nimport { authenticator } from \"./services/auth.server\";\nimport NavAll from \"./components/NavAll\";\nimport Footer from \"./components/footer\";\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: stylesheet }];\n}\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request);\n}\n\nexport default function App() {\n  const user = useLoaderData();\n  return (\n    <html\n      lang=\"en\"\n      className=\"bg-gradient-to-t from-blue-50 to-cyan-200 bg-cover bg-no-repeat min-h-screen\">\n\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"\">\n        {user ? <Nav user={user} /> : <NavAll />}\n\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n        <Footer />\n      </body>\n    </html>);\n\n}", "import { useState, useEffect, useRef } from \"react\";\nimport { NavLink } from \"@remix-run/react\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport default function Nav({ user }) {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const mobileMenuRef = useRef(null);\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  // Close mobile menu if clicked outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        mobileMenuRef.current &&\n        !mobileMenuRef.current.contains(event.target)\n      ) {\n        setIsMobileMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  // Close menu when a link is clicked\n  const handleLinkClick = () => {\n    setIsMobileMenuOpen(false);\n  };\n\n  // Close menu when the close button (\u2716) is clicked\n  const closeMobileMenu = (event) => {\n    // Prevent the button's onClick from triggering when the close icon is clicked\n    event.stopPropagation();\n    setIsMobileMenuOpen(false);\n  };\n\n  return (\n    <div className=\"min-h-full\">\n      <nav className=\"bg-gray-800\">\n        <div className=\" w-full max-w-7xl px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex w-full h-16 items-center \">\n            <div className=\"flex w-full items-center\">\n              <div className=\"flex w-full justify-between\">\n                <div className=\"shrink-0\">\n                  <NavLink to={user ? \"/dashboard\" : \"/main-dashboard\"}>\n                    <h1 className=\"font-mono text-2xl font-bold m-auto p-2 \">\n                      Elevation\n                    </h1>\n                  </NavLink>\n                </div>\n                <div className=\"hidden items-center md:flex\">\n                  <div className=\" items-center flex  space-x-4\">\n                    <NavLink\n                      to=\"/dashboard\"\n                      className={({ isActive }) =>\n                        `text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium ${\n                          isActive ? \"bg-gray-900 text-white\" : \"\"\n                        }`\n                      }\n                      onClick={handleLinkClick} // Close the menu on link click\n                    >\n                      Dashboard\n                    </NavLink>\n                    <NavLink\n                      to=\"/add-event\"\n                      className={({ isActive }) =>\n                        `text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium ${\n                          isActive ? \"bg-gray-900 text-white\" : \"\"\n                        }`\n                      }\n                      onClick={handleLinkClick} // Close the menu on link click\n                    >\n                      Add Post\n                    </NavLink>\n                    <NavLink\n                      to=\"/locations\"\n                      className={({ isActive }) =>\n                        `text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium ${\n                          isActive ? \"bg-gray-900 text-white\" : \"\"\n                        }`\n                      }\n                      onClick={handleLinkClick} // Close the menu on link click\n                    >\n                      See spots\n                    </NavLink>\n                    <NavLink\n                      to=\"/event\"\n                      className={({ isActive }) =>\n                        `text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium ${\n                          isActive ? \"bg-gray-900 text-white\" : \"\"\n                        }`\n                      }\n                      onClick={handleLinkClick} // Close the menu on link click\n                    >\n                      All posts\n                    </NavLink>\n                  </div>\n                </div>\n                <div className=\" items-center hidden md:flex\">\n                  <NavLink\n                    to={`/profile/${user?._id}`}\n                    className={({ isActive }) =>\n                      `text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium ${\n                        isActive ? \"bg-gray-900 text-white\" : \"\"\n                      }`\n                    }\n                    onClick={handleLinkClick} // Close the menu on link click\n                  >\n                    Profile\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n\n            {/* Mobile Menu Button */}\n            <div className=\"-mr-2 flex md:hidden\">\n              <button\n                onClick={toggleMobileMenu} // Toggle menu visibility\n                className=\"inline-flex items-center justify-center rounded-md bg-gray-800 p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\"\n              >\n                <span className=\"sr-only\">Open main menu</span>\n                {!isMobileMenuOpen ? (\n                  <span className=\"block\">\u2630</span> // Open icon when menu is closed\n                ) : (\n                  <span\n                    className=\"block\"\n                    onClick={closeMobileMenu} // Close the menu when close button (\u2716) is clicked\n                  >\n                    \u2716\n                  </span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Menu Dropdown */}\n      {isMobileMenuOpen && (\n        <div\n          ref={mobileMenuRef} // Reference for detecting clicks outside the menu\n          className=\"md:hidden bg-gray-800 px-2 pt-2 pb-3 space-y-1 sm:px-3\"\n        >\n          <NavLink\n            to=\"/dashboard\"\n            className={({ isActive }) =>\n              `text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium ${\n                isActive ? \"bg-gray-900 text-white\" : \"\"\n              }`\n            }\n            onClick={handleLinkClick} // Close the menu on link click\n          >\n            Dashboard\n          </NavLink>\n          <NavLink\n            to=\"/add-post\"\n            className={({ isActive }) =>\n              `text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium ${\n                isActive ? \"bg-gray-900 text-white\" : \"\"\n              }`\n            }\n            onClick={handleLinkClick} // Close the menu on link click\n          >\n            Add Post\n          </NavLink>\n          <NavLink\n            to=\"/locations\"\n            className={({ isActive }) =>\n              `text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium ${\n                isActive ? \"bg-gray-900 text-white\" : \"\"\n              }`\n            }\n            onClick={handleLinkClick} // Close the menu on link click\n          >\n            See spots\n          </NavLink>\n          <NavLink\n            to={`/profile/${user?._id}`}\n            className={({ isActive }) =>\n              `text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium ${\n                isActive ? \"bg-gray-900 text-white\" : \"\"\n              }`\n            }\n            onClick={handleLinkClick} // Close the menu on link click\n          >\n            Profile\n          </NavLink>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import { NavLink } from \"@remix-run/react\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n}\n\nexport default function Nav() {\n  return (\n    <nav className=\"flex bg-slate-50 shadow-2xl justify-between md:justify-items-end items-center z-50\">\n      <NavLink to={authenticator ? \"/dashboard\" : \"/main-dashboard\"}>\n        <h1 className=\"font-mono text-2xl font-bold m-auto p-2 mx-2\">\n          Elevation\n        </h1>\n      </NavLink>\n      <div className=\"flex ml-auto p-2 font-semibold mr-4\">\n        <NavLink\n          to=\"/signup\"\n          className=\"mx-2 bg-secondary hover:bg-primary rounded-xl p-2 \"\n        >\n          Sign Up\n        </NavLink>\n        <NavLink\n          to=\"/signin\"\n          className=\"mx-2 bg-slate-300 hover:bg-slate-400 rounded-xl p-2\"\n        >\n          Login\n        </NavLink>\n      </div>\n    </nav>\n  );\n}\n", "export default function Footer() {\n  return (\n    <footer className=\"bg-gray-100 text-white p-4 mt-6 flex flex-col justify-center items-center\">\n      <p>\u00A9 2024 Evelation - Nicolai Dige</p>\n      <p>Your Gateway to Outdoor Thrills </p>\n    </footer>\n  );\n}\n", "import mongoose from \"mongoose\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { authenticator } from \"../services/auth.server\";\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { hashPassword } from \"../services/auth.server\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport function meta() {\n  return [\n    {\n      title: \"Trailblaze - Update event\",\n    },\n  ];\n}\n\nexport async function loader({ request, params }) {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const user = await mongoose.models.User.findById(params.userId).select(\n    \"+password\"\n  );\n  return json({ user });\n}\n\nexport default function UpdateProfile() {\n  const { user } = useLoaderData();\n  const navigate = useNavigate();\n  const dropdownRef = useRef(null);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [selectedHobbies, setSelectedHobbies] = useState(user.hobbies || []);\n  const sportsOptions = [\n    \"Surfing\",\n    \"Snowboarding\",\n    \"Kiteboarding\",\n    \"Skateboarding\",\n    \"Skiing\",\n    \"wakeboarding\",\n    \"windsurfing\",\n  ];\n\n  function handleCancel() {\n    navigate(-1);\n  }\n\n  function toggleDropdown() {\n    setDropdownOpen(!dropdownOpen);\n  }\n\n  function handleCheckboxChange(event) {\n    const value = event.target.value;\n    setSelectedHobbies((prev) =>\n      prev.includes(value)\n        ? prev.filter((hobby) => hobby !== value)\n        : [...prev, value]\n    );\n  }\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  async function handleDeleteProfile() {\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete your profile?\"\n    );\n    if (confirmed) {\n      try {\n        const response = await fetch(`/profile/${user._id}`, {\n          method: \"DELETE\",\n        });\n\n        if (response.ok) {\n          navigate(\"/signin\");\n        } else {\n          const errorText = await response.text();\n          throw new Error(`Failed to delete profile: ${errorText}`);\n        }\n      } catch (error) {\n        console.error(\"Error deleting profile:\", error);\n        alert(\"Error deleting profile. Please try again later.\");\n        navigate(\"/error-page\"); // Redirect to an error page or appropriate page\n      }\n    }\n  }\n\n  return (\n    <div className=\"w-full flex-col gap-y-4 justify-center mt-4 mb-4 p-8\">\n      <h1 className=\"m-auto flex justify-center font-semibold text-2xl mb-6\">\n        Update Profile\n      </h1>\n\n      <Form\n        method=\"post\"\n        className=\"rounded-lg font-semibold max-w-lg justify-center m-auto flex flex-col gap-y-4 p-4\"\n      >\n        <label htmlFor=\"name\"> Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Name\"\n          defaultValue={user.name}\n          className=\"rounded-xl p-2  border-gray-400 border\"\n        />\n        <label htmlFor=\"lastName\">Last name</label>\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          name=\"lastName\"\n          defaultValue={user.lastname}\n          aria-label=\"last name\"\n          placeholder=\"Type your last name...\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n        <label htmlFor=\"mail\">Mail</label>\n        <input\n          type=\"text\"\n          id=\"mail\"\n          name=\"mail\"\n          placeholder=\"Mail\"\n          defaultValue={user.mail}\n          className=\"rounded-xl p-2  border-gray-400 border\"\n        />\n        <label htmlFor=\"password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"New Password\"\n          className=\"rounded-xl p-2  border-gray-400 border\"\n        />\n        <label htmlFor=\"aboutMe\">About Me</label>\n        <textarea\n          type=\"description\"\n          id=\"aboutMe\"\n          name=\"aboutMe\"\n          defaultValue={user.aboutMe}\n          placeholder=\"Write something about yourself...\"\n          className=\"rounded-xl p-2  border-gray-400 border\"\n        />\n        <label htmlFor=\"avatarUrl\">Avatar URL</label>\n        <input\n          id=\"avatarUrl\"\n          type=\"url\"\n          name=\"avatarUrl\"\n          defaultValue={user.avatarUrl}\n          aria-label=\"avatar url\"\n          placeholder=\"Paste your avatar URL or leave blank for default...\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <div\n          style={{\n            backgroundImage: `url(${user.avatarUrl})`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n          className=\"w-72 h-72 mx-auto rounded-full bg-gray-300\"\n        ></div>\n        <label>Select your hobbies:</label>\n        {selectedHobbies.length > 0 && (\n          <div className=\"mb-2\">\n            <span>Selected hobbies:</span>\n            <ul className=\"list-inline\">\n              {selectedHobbies.map((hobby) => (\n                <li\n                  key={hobby}\n                  className=\"inline-block bg-gray-200 px-2 py-1 rounded-md mr-1 mb-1 text-xs\"\n                >\n                  {hobby}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        <div className=\"relative\" ref={dropdownRef}>\n          <button\n            type=\"button\"\n            onClick={toggleDropdown}\n            className=\"bg-white p-2 w-full rounded-xl border\"\n          >\n            Choose your hobbies\n          </button>\n          {dropdownOpen && (\n            <div className=\"absolute top-full mt-1 w-full bg-white border rounded-lg shadow-lg z-10\">\n              {sportsOptions.map((sport) => (\n                <label key={sport} className=\"block p-2\">\n                  <input\n                    type=\"checkbox\"\n                    value={sport}\n                    checked={selectedHobbies.includes(sport)}\n                    onChange={handleCheckboxChange}\n                    name=\"hobbies\"\n                  />\n                  {sport}\n                </label>\n              ))}\n            </div>\n          )}\n        </div>\n        <button className=\"bg-accent hover:bg-primary hover:text-background p-2 rounded-lg mt-4\">\n          Update\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn-cancel text-cancel\"\n          onClick={handleCancel}\n        >\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn-delete-profile mt-4 bg-red-600 hover:bg-red-800 text-white p-2 rounded-lg\"\n          onClick={handleDeleteProfile}\n        >\n          Delete Profile\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  if (request.method === \"DELETE\") {\n    try {\n      const response = await fetch(`/api/users/${authUser._id}`, {\n        method: \"DELETE\",\n      });\n\n      if (response.ok) {\n        return redirect(\"/signin\"); // Redirect to signin page after deletion\n      } else {\n        console.error(\"Error deleting user:\", response.statusText);\n        return redirect(\"/error-page\"); // Ensure this route is defined\n      }\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      return redirect(\"/error-page\"); // Ensure this route is defined\n    }\n  } else {\n    // Handling other form submissions\n    const formData = new URLSearchParams(await request.text());\n    const name = formData.get(\"name\");\n    const lastName = formData.get(\"lastName\");\n    const mail = formData.get(\"mail\");\n    const password = formData.get(\"password\");\n    const hobbies = formData.getAll(\"hobbies\");\n    const avatarUrl = formData.get(\"avatarUrl\");\n    const aboutMe = formData.get(\"aboutMe\");\n\n    try {\n      let userToUpdate = await mongoose.models.User.findOne({\n        _id: authUser._id,\n      });\n\n      if (!userToUpdate) {\n        console.error(\"User not found\");\n        return redirect(\"/error-page\"); // Ensure this route is defined\n      }\n\n      // Check if the email is already in use by another user\n      const existingUser = await mongoose.models.User.findOne({ mail });\n      if (\n        existingUser &&\n        existingUser._id.toString() !== userToUpdate._id.toString()\n      ) {\n        console.error(\"Email already in use\");\n        return redirect(\"/error-page\"); // Ensure this route is defined\n      }\n\n      // Update user details\n      userToUpdate.name = name;\n      userToUpdate.lastname = lastName;\n      userToUpdate.mail = mail;\n      if (password) {\n        userToUpdate.password = await hashPassword(password);\n      }\n      userToUpdate.hobbies = hobbies;\n      userToUpdate.avatarUrl = avatarUrl;\n      userToUpdate.aboutMe = aboutMe;\n\n      // Save updated user data\n      const updatedUser = await userToUpdate.save();\n      if (updatedUser) {\n        return redirect(`/profile/${updatedUser._id}`);\n      }\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n      return redirect(\"/error-page\"); // Ensure this route is defined\n    }\n  }\n}\n", "import mongoose from \"mongoose\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n}\n\nexport async function action({ request, params }) {\n  // Protect the route\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n  // Delete the post\n  await mongoose.models.Event.findByIdAndDelete(params.eventId);\n\n  return new Response(null, {\n    status: 302,\n    headers: {\n      location: \"/event\",\n    },\n  });\n}\n", "import { useEffect, useRef, useState } from \"react\";\nimport { useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { Form } from \"@remix-run/react\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\nimport { authenticator } from \"../services/auth.server\";\nimport mongoose from \"mongoose\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { GoogleMapLoader } from \"../components/GoogleMapLoader\";\n\nconst MAP_ID = \"71f267d426ae7773\";\n\nexport async function loader({ request, params }) {\n  const googleMapsApiKey = process.env.GOOGLE_MAPS_API_KEY;\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const event = await mongoose.models.Event.findById(params.eventId).populate(\n    \"creator\"\n  );\n\n  if (!event) {\n    throw new Response(\"Event not found\", { status: 404 });\n  }\n\n  if (event.creator._id.toString() !== user._id.toString()) {\n    return redirect(\"/dashboard\");\n  }\n\n  return json({ event, googleMapsApiKey });\n}\n\nexport default function UpdateEvent() {\n  const { event, googleMapsApiKey } = useLoaderData();\n  const [image, setImage] = useState(event.image);\n  const [location, setLocation] = useState(\n    event.location\n      ? Array.isArray(event.location)\n        ? event.location\n        : event.location.split(\",\").map((coord) => parseFloat(coord.trim()))\n      : null\n  );\n  const [center, setCenter] = useState(\n    location\n      ? { lat: location[0], lng: location[1] }\n      : { lat: 41.0082, lng: 28.9784 }\n  );\n  const mapRef = useRef(null);\n  const markerRef = useRef(null); // Ref for marker instance\n  const navigate = useNavigate();\n\n  const handleMapClick = (e) => {\n    const lat = e.latLng.lat();\n    const lng = e.latLng.lng();\n\n    if (typeof lat === \"number\" && typeof lng === \"number\") {\n      setLocation([lat, lng]);\n      setCenter({ lat, lng });\n    } else {\n      console.error(\"Invalid coordinates:\", lat, lng);\n    }\n  };\n\n  const handleCancel = () => navigate(\"/dashboard\");\n\n  useEffect(() => {\n    if (location && mapRef.current) {\n      const [lat, lng] = location;\n      if (typeof lat === \"number\" && typeof lng === \"number\") {\n        mapRef.current.panTo({ lat, lng });\n      } else {\n        console.error(\"Invalid location:\", location);\n      }\n    }\n  }, [location]);\n\n  // Handle marker creation and update\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    if (!markerRef.current) {\n      // Create the marker if it doesn't exist\n      markerRef.current = new google.maps.Marker({\n        map: mapRef.current,\n        position: center,\n        title: \"Selected Location\",\n      });\n    } else {\n      // Update marker position if it exists\n      markerRef.current.setPosition(center);\n    }\n  }, [center]); // Trigger when center changes\n\n  const parsedLocation = location\n    ? { lat: location[0], lng: location[1] }\n    : { lat: 41.0082, lng: 28.9784 };\n\n  return (\n    <div className=\"page w-full flex-col gap-y-4 justify-center mt-4 mb-4 p-8\">\n      <h1 className=\"m-auto flex justify-center font-semibold text-2xl mb-6\">\n        Update Event\n      </h1>\n      <Form\n        id=\"event-form\"\n        method=\"post\"\n        className=\"rounded-lg font-semibold max-w-lg justify-center m-auto flex flex-col gap-y-4 p-4\"\n      >\n        <label htmlFor=\"title\">Post Title</label>\n        <input\n          required\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          defaultValue={event.title}\n          placeholder=\"Write a title...\"\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          required\n          id=\"description\"\n          name=\"description\"\n          defaultValue={event.description}\n          placeholder=\"Write a description...\"\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"date\">Date</label>\n        <input\n          required\n          id=\"date\"\n          name=\"date\"\n          type=\"date\"\n          defaultValue={event.date.split(\"T\")[0]}\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"location\">Location</label>\n        <input\n          id=\"location\"\n          name=\"location\"\n          type=\"text\"\n          readOnly\n          placeholder=\"Click on the map to select a location\"\n          value={location ? location.join(\", \") : \"\"}\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <GoogleMapLoader apiKey={googleMapsApiKey}>\n          <GoogleMap\n            mapContainerStyle={{ width: \"100%\", height: \"400px\" }}\n            center={parsedLocation}\n            zoom={12}\n            onClick={handleMapClick}\n            onLoad={(map) => {\n              mapRef.current = map;\n              map.setOptions({\n                mapId: MAP_ID,\n              });\n            }}\n          >\n            {/* Map overlay */}\n          </GoogleMap>\n        </GoogleMapLoader>\n\n        <label htmlFor=\"image\">Image URL</label>\n        <input\n          required\n          id=\"image\"\n          name=\"image\"\n          type=\"url\"\n          defaultValue={event.image}\n          placeholder=\"Paste an image URL...\"\n          onChange={(e) => setImage(e.target.value)}\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <img\n          id=\"image-preview\"\n          src={image}\n          alt=\"Preview\"\n          className=\"image-preview m-auto rounded-xl\"\n        />\n\n        <div className=\"flex justify-between\">\n          <button\n            type=\"submit\"\n            className=\"bg-accent hover:bg-primary hover:text-background p-2 rounded-lg\"\n          >\n            Save\n          </button>\n          <button\n            type=\"button\"\n            className=\"text-cancel p-2 rounded-lg\"\n            onClick={handleCancel}\n          >\n            Cancel\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport async function action({ request, params }) {\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const eventToUpdate = await mongoose.models.Event.findById(params.eventId);\n\n  if (\n    !eventToUpdate ||\n    eventToUpdate.creator.toString() !== authUser._id.toString()\n  ) {\n    return redirect(`/dashboard`);\n  }\n\n  const formData = await request.formData();\n  const updatedEvent = Object.fromEntries(formData);\n\n  Object.assign(eventToUpdate, updatedEvent);\n  eventToUpdate.location = updatedEvent.location;\n\n  await eventToUpdate.save();\n\n  return redirect(`/event/${params.eventId}`);\n}\n", "import { useJsApiLoader } from \"@react-google-maps/api\";\n\nconst GOOGLE_MAPS_API_KEY = process.env.GOOGLE_MAPS_API_KEY;\n\nexport function GoogleMapLoader({ children }) {\n  const { isLoaded, loadError } = useJsApiLoader({\n    apiKey: GOOGLE_MAPS_API_KEY,\n  });\n\n  if (loadError) {\n    return <div>Error loading Google Maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <div>Loading Google Maps...</div>;\n  }\n\n  return children;\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useState } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\nimport mongoose from \"mongoose\";\nimport EventCard from \"../components/EventCard\";\nimport { Link } from \"react-router-dom\";\n\nexport async function loader({ request, params }) {\n  const authUser = await authenticator.isAuthenticated(request);\n  if (!authUser) {\n    return redirect(\"/login\");\n  }\n  const googleMapsApiKey = process.env.GOOGLE_MAPS_API_KEY;\n  const userProfile = await mongoose.models.User.findById(params.userId)\n    .populate(\"followers\", \"_id name\") // Populate followers for the profile user\n    .populate(\"following\", \"_id name\"); // Populate following for the profile user\n\n  if (!userProfile) {\n    throw new Response(\"User not found\", { status: 404 });\n  }\n\n  const events = await mongoose.models.Event.find({ creator: userProfile._id }); // Fetch events by the user\n\n  return json({ userProfile, authUser, events, googleMapsApiKey });\n}\n\nexport async function action({ request, params }) {\n  const authUser = await authenticator.isAuthenticated(request);\n  if (!authUser) {\n    return redirect(\"/login\");\n  }\n\n  const userToFollow = await mongoose.models.User.findById(params.userId); // User being followed/unfollowed\n  if (!userToFollow) {\n    throw new Response(\"User not found\", { status: 404 });\n  }\n\n  const formData = new URLSearchParams(await request.text());\n  const actionType = formData.get(\"action\"); // \"follow\" or \"unfollow\"\n\n  const authUserDoc = await mongoose.models.User.findById(authUser._id); // Fetch logged-in user\n\n  if (actionType === \"follow\") {\n    if (!authUserDoc.following.includes(userToFollow._id)) {\n      authUserDoc.following.push(userToFollow._id); // Add to \"following\" list\n      userToFollow.followers.push(authUserDoc._id); // Add to \"followers\" list\n\n      await authUserDoc.save();\n      await userToFollow.save();\n    }\n  } else if (actionType === \"unfollow\") {\n    authUserDoc.following = authUserDoc.following.filter(\n      (id) => id.toString() !== userToFollow._id.toString()\n    );\n    userToFollow.followers = userToFollow.followers.filter(\n      (id) => id.toString() !== authUserDoc._id.toString()\n    );\n\n    await authUserDoc.save();\n    await userToFollow.save();\n  }\n\n  return json({ success: true }, { googleMapsApiKey });\n}\n\nexport default function UserProfile() {\n  const { userProfile, authUser, events, googleMapsApiKey } = useLoaderData();\n  const [eventCities, setEventCities] = useState({});\n\n  const [followersCount, setFollowersCount] = useState(\n    userProfile.followers.length\n  );\n  const [isFollowing, setIsFollowing] = useState(\n    authUser.following.some(\n      (followingUser) => followingUser.toString() === userProfile._id.toString()\n    )\n  );\n\n  const [showFullAboutMe, setShowFullAboutMe] = useState(false);\n\n  const handleFollowAction = async (actionType) => {\n    const response = await fetch(`/userProfile/${userProfile._id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: new URLSearchParams({ action: actionType }),\n    });\n\n    if (response.ok) {\n      if (actionType === \"follow\") {\n        setFollowersCount((prev) => prev + 1);\n        setIsFollowing(true);\n      } else if (actionType === \"unfollow\") {\n        setFollowersCount((prev) => prev - 1);\n        setIsFollowing(false);\n      }\n    }\n  };\n\n  const updateCity = (eventId, city) => {\n    setEventCities((prev) => ({\n      ...prev,\n      [eventId]: city,\n    }));\n  };\n\n  const toggleAboutMePopup = () => {\n    setShowFullAboutMe(!showFullAboutMe);\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <div className=\"bg-white shadow-md rounded-lg p-8\">\n        <div className=\"flex items-center space-x-4 mb-6\">\n          <div\n            className=\"w-20 h-20 rounded-full bg-gray-300\"\n            style={{\n              backgroundImage: `url(${userProfile.avatarUrl})`,\n              backgroundSize: \"cover\",\n            }}\n          ></div>\n          <div>\n            <h1 className=\"text-2xl font-semibold\">{userProfile.name}</h1>\n          </div>\n        </div>\n\n        <div className=\"flex justify-between mb-6\">\n          <p className=\"text-lg\">\n            {followersCount} <span className=\"text-gray-500\">Followers</span>\n          </p>\n          <p className=\"text-lg\">\n            {userProfile.following.length}{\" \"}\n            <span className=\"text-gray-500\">Following</span>\n          </p>\n        </div>\n        <div>\n          <p className=\"text-lg font-semibold\">About Me</p>\n          <p>\n            {userProfile.aboutMe ? (\n              <>\n                {showFullAboutMe\n                  ? userProfile.aboutMe\n                  : `${userProfile.aboutMe.slice(0, 200)} `}\n                <button\n                  onClick={toggleAboutMePopup}\n                  className={`text-blue-500 ${\n                    userProfile.aboutMe.length > 200 ? \"block\" : \"hidden\"\n                  }`}\n                >\n                  {showFullAboutMe ? \"See Less\" : \"See More\"}\n                </button>\n              </>\n            ) : (\n              \"No information provided\"\n            )}\n          </p>\n          <p className=\"mt-auto h-full font-bold\">\n            {authUser?.hobbies?.join(\", \")}\n          </p>\n        </div>\n\n        {authUser && authUser._id !== userProfile._id && (\n          <div className=\"flex items-center space-x-4\">\n            {isFollowing ? (\n              <button\n                onClick={() => handleFollowAction(\"unfollow\")}\n                className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition duration-300\"\n              >\n                Unfollow\n              </button>\n            ) : (\n              <button\n                onClick={() => handleFollowAction(\"follow\")}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition duration-300\"\n              >\n                Follow\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n\n      <div className=\"mt-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">Created Events</h2>\n        <div className=\"\">\n          {events.map((event) => (\n            <Link key={event._id} to={`/event/${event._id}`}>\n              <EventCard\n                event={event}\n                onCityUpdate={updateCity}\n                apiKey={googleMapsApiKey}\n              />\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function EventCard({ event, onCityUpdate, apiKey }) {\n  const [city, setCity] = useState(\"Fetching...\");\n\n  const normalizeCityName = (cityName) => {\n    return cityName\n      .normalize(\"NFD\")\n      .replace(/[\\u0300-\\u036f]/g, \"\")\n      .toLowerCase();\n  };\n\n  const fetchCityFromCoordinates = async (lat, lng) => {\n    if (!apiKey) {\n      console.error(\"API key is not defined.\");\n      setCity(\"API key not available\");\n      return;\n    }\n\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;\n\n    try {\n      const response = await axios.get(url);\n\n      if (response.data && response.data.results.length > 0) {\n        const addressComponents = response.data.results[0].address_components;\n        const nearestCity =\n          addressComponents.find((component) =>\n            component.types.includes(\"locality\")\n          )?.long_name ||\n          addressComponents.find((component) =>\n            component.types.includes(\"administrative_area_level_1\")\n          )?.long_name ||\n          \"Unknown location\";\n\n        const normalizedCity = normalizeCityName(nearestCity);\n        setCity(normalizedCity);\n        onCityUpdate(event._id, normalizedCity);\n      } else {\n        console.error(\"No results found in API response:\", response.data);\n        setCity(\"Unknown location\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching city:\", error.message);\n      setCity(\"Error fetching location\");\n    }\n  };\n\n  useEffect(() => {\n    if (event.location) {\n      const [lat, lng] = event.location\n        .split(\",\")\n        .map((coord) => parseFloat(coord.trim()));\n\n      if (!isNaN(lat) && !isNaN(lng)) {\n        fetchCityFromCoordinates(lat, lng);\n      } else {\n        console.error(\"Invalid coordinates:\", event.location);\n        setCity(\"Invalid location data\");\n      }\n    } else {\n      setCity(\"No location available\");\n    }\n  }, [event.location]);\n\n  return (\n    <article className=\"flex my-2 flex-col md:flex-row w-full bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg\">\n      <div\n        className=\"md:w-1/3 h-48 md:h-auto bg-cover bg-center \"\n        style={{\n          backgroundImage: `url(${event?.image})`,\n        }}\n      ></div>\n      <div className=\"flex flex-col w-full p-4\">\n        <div className=\"flex justify-between items-start\">\n          <h2 className=\"text-2xl font-bold max-w-80 text-gray-800 truncate\">\n            {event.title}\n          </h2>\n          <span className=\"text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n            {city}\n          </span>\n        </div>\n        <p className=\"text-gray-500 mt-1 text-sm\">\n          Created by {event?.creator?.name}\n        </p>\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mt-4\">\n          <div>\n            <p className=\"text-sm text-gray-600\">\n              <span className=\"font-semibold\">Date:</span>{\" \"}\n              {new Date(event.date).toLocaleDateString(\"en-GB\")}\n            </p>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              <span className=\"font-semibold\">Location:</span> {city}\n            </p>\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <h3 className=\"font-semibold text-gray-700 mb-1\">Description:</h3>\n          <p className=\"text-sm text-gray-600 line-clamp-3\">\n            {event.description || \"No description provided.\"}\n          </p>\n        </div>\n        <div className=\"mt-4 flex justify-between items-center\">\n          <p className=\"text-sm font-semibold text-gray-700\">\n            Likes: {event.attendees?.length || 0}\n          </p>\n          <button className=\"text-sm text-blue-500 hover:underline\">\n            View Details\n          </button>\n        </div>\n      </div>\n    </article>\n  );\n}\n", "import { useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { authenticator } from \"../services/auth.server\";\nimport DashboardData from \"../components/DashboardData\";\nimport EventListCards from \"../components/EventListCards\";\nimport EventCard from \"../components/EventCard\";\n\nexport const meta = () => {\n  return [{ title: \"Remix Post App\" }];\n};\n\nexport const loader = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/main-dashboard\",\n  });\n\n  const openWeatherApiKey = process.env.OPEN_WEATHER_API_KEY;\n  const googleMapsApiKey = process.env.GOOGLE_MAPS_API_KEY;\n\n  // Fetch events and API keys\n  const mostLikedEvents = await mongoose.models.Event.find()\n    .sort({ attendees: -1 })\n    .limit(3)\n    .populate(\"creator\")\n    .populate(\"attendees\");\n\n  return json({\n    mostLikedEvents,\n    openWeatherApiKey,\n    googleMapsApiKey, // API keys securely passed here\n  });\n};\n\nexport default function Index() {\n  const { mostLikedEvents, openWeatherApiKey, googleMapsApiKey } =\n    useLoaderData();\n  const [eventCities, setEventCities] = useState({}); // Initialize the state for event cities\n\n  // Handle the case where there are no events\n  if (!mostLikedEvents || mostLikedEvents.length === 0) {\n    return (\n      <div className=\"page\">\n        <DashboardData />\n        <p>Signup to see posts.</p>\n      </div>\n    );\n  }\n\n  // Update city for a specific event\n  const updateCity = (eventId, city) => {\n    setEventCities((prev) => ({\n      ...prev,\n      [eventId]: city,\n    }));\n  };\n\n  return (\n    <div className=\"page\">\n      <DashboardData apiKey={openWeatherApiKey} />{\" \"}\n      <div className=\"md:p-8 p-4\">\n        <h2 className=\"font-bold text-2xl\">Most liked posts</h2>\n        {mostLikedEvents.map((event) => (\n          <Link\n            key={event._id}\n            className=\"event-link\"\n            to={`/event/${event._id}`}\n          >\n            <div className=\"md:hidden w-full flex justify-center\">\n              <EventListCards event={event} />\n            </div>\n            <div className=\"hidden md:flex w-full justify-center\">\n              <EventCard\n                event={event}\n                onCityUpdate={updateCity}\n                apiKey={googleMapsApiKey}\n              />\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n", "import React, { useEffect, useState } from \"react\";\nimport { IframeDisplay } from \"./IframeDisplay\"; // Import the IframeDisplay component\nimport { useLoaderData } from \"@remix-run/react\";\n\nconst DashboardData = ({ apiKey }) => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Loading...\");\n  const [country, setCountry] = useState(\"\");\n  const [inputCity, setInputCity] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState(\"wind\");\n  const [isOffline, setIsOffline] = useState(false);\n\n  useEffect(() => {\n    // Run only on the client side\n    if (typeof window !== \"undefined\" && navigator) {\n      setIsOffline(!navigator.onLine);\n\n      const handleNetworkChange = () => {\n        const isOnline = navigator.onLine;\n        setIsOffline(!isOnline);\n        if (!isOnline) {\n          setError(\n            \"You are offline. Data displayed is from the last fetched information.\"\n          );\n          const cachedData = localStorage.getItem(city);\n          if (cachedData) {\n            setWeatherData(JSON.parse(cachedData));\n            setLoading(false);\n          }\n        } else {\n          setError(\"\");\n        }\n      };\n\n      // Add event listeners for online and offline states\n      window.addEventListener(\"online\", handleNetworkChange);\n      window.addEventListener(\"offline\", handleNetworkChange);\n\n      return () => {\n        // Cleanup listeners on component unmount\n        window.removeEventListener(\"online\", handleNetworkChange);\n        window.removeEventListener(\"offline\", handleNetworkChange);\n      };\n    }\n  }, [city]);\n\n  const fetchWeatherData = async (city, apiKey) => {\n    const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n    setLoading(true);\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Error: ${errorText}`);\n      }\n      const data = await response.json();\n      setWeatherData(data);\n      setError(\"\");\n      setCountry(data.city.country);\n      localStorage.setItem(city, JSON.stringify(data));\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      setError(\"Could not fetch weather data. Please try another city.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCityByCoordinates = async (lat, lon) => {\n    const reverseGeoUrl = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=1&appid=${apiKey}`;\n    try {\n      const response = await fetch(reverseGeoUrl);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setCity(data[0].name);\n        setCountry(data[0].country);\n      }\n    } catch (error) {\n      console.error(\"Error fetching city by coordinates:\", error);\n      setCity(\"Copenhagen\");\n      setCountry(\"DK\");\n    }\n  };\n\n  const getUserLocation = () => {\n    if (typeof navigator !== \"undefined\" && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          fetchCityByCoordinates(latitude, longitude);\n        },\n        () => {\n          setCity(\"Copenhagen\");\n          setCountry(\"DK\");\n        }\n      );\n    } else {\n      setCity(\"Copenhagen\");\n      setCountry(\"DK\");\n    }\n  };\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      getUserLocation();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      const cachedData = localStorage.getItem(city);\n      if (cachedData && isOffline) {\n        setWeatherData(JSON.parse(cachedData));\n        setError(\"\");\n        setLoading(false);\n      } else if (city !== \"Loading...\") {\n        fetchWeatherData(city, apiKey); // Only fetch if data is not in local storage or user is online\n      }\n    }\n  }, [city, isOffline, apiKey]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (inputCity) {\n      setCity(inputCity);\n      setInputCity(\"\"); // Clear input after search\n    }\n  };\n\n  const getWindDirection = (degrees) => {\n    if (degrees >= 337.5 || degrees < 22.5) return \"N\";\n    if (degrees >= 22.5 && degrees < 67.5) return \"NE\";\n    if (degrees >= 67.5 && degrees < 112.5) return \"E\";\n    if (degrees >= 112.5 && degrees < 157.5) return \"SE\";\n    if (degrees >= 157.5 && degrees < 202.5) return \"S\";\n    if (degrees >= 202.5 && degrees < 247.5) return \"SW\";\n    if (degrees >= 247.5 && degrees < 292.5) return \"W\";\n    if (degrees >= 292.5 && degrees < 337.5) return \"NW\";\n  };\n\n  const getWeatherEmoji = (description) => {\n    const lowerCaseDescription = description.toLowerCase();\n    if (lowerCaseDescription.includes(\"clear\")) return \"\u2600\uFE0F\";\n    if (lowerCaseDescription.includes(\"clouds\")) return \"\u2601\uFE0F\";\n    if (lowerCaseDescription.includes(\"rain\")) return \"\uD83C\uDF27\uFE0F\";\n    if (lowerCaseDescription.includes(\"thunderstorm\")) return \"\u26C8\uFE0F\";\n    if (lowerCaseDescription.includes(\"snow\")) return \"\u2744\uFE0F\";\n    if (\n      lowerCaseDescription.includes(\"mist\") ||\n      lowerCaseDescription.includes(\"fog\")\n    )\n      return \"\uD83C\uDF2B\uFE0F\";\n    return \"\uD83C\uDF24\uFE0F\";\n  };\n\n  return (\n    <div className=\"flex flex-col p-4\">\n      {isOffline && (\n        <div className=\"bg-yellow-200 text-yellow-800 p-4 mb-4 rounded-lg\">\n          \u26A0\uFE0F You are offline. Displayed data may be outdated.\n        </div>\n      )}\n\n      {loading ? (\n        <div className=\"loader-container\">\n          <div className=\"spinner\"></div>\n        </div>\n      ) : (\n        <div className=\"flex flex-col md:p-4\" id=\"outer-container\">\n          <form className=\"flex justify-center mt-10\" onSubmit={handleSearch}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter city name\"\n              value={inputCity}\n              onChange={(e) => setInputCity(e.target.value)}\n              className=\"bg-slate-50 p-2 w-72 rounded-l-2xl focus:outline-none\"\n            />\n            <button className=\"bg-slate-50 rounded-r-2xl p-2\" type=\"submit\">\n              <svg\n                className=\"h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n              </svg>\n            </button>\n          </form>\n          <div className=\"mt-10 p-4 flex flex-col justify-between items-center rounded-xl shadow-md h-full\">\n            <div className=\"flex gap-10 pb-8 px-8 md:w-3/5 md:justify-between md:flex-row flex-col\">\n              <div>\n                <h1 className=\"text-5xl font-semibold mb-6 text-gray-800\">\n                  {city}, {country}\n                </h1>\n                <div className=\"flex flex-row items-center \">\n                  <p className=\"text-6xl\">\n                    {weatherData &&\n                      getWeatherEmoji(\n                        weatherData.list[0].weather[0].description\n                      )}\n                  </p>\n                  <h2 className=\"text-5xl ml-4 font-bold\">\n                    {weatherData && Math.round(weatherData.list[0].main.temp)}\u00B0C\n                  </h2>\n                  <div className=\"pl-2 leading-5 items-center\">\n                    <div className=\"flex-row flex gap-1\">\n                      <p>Min: </p>\n                      <p>\n                        {weatherData &&\n                          Math.round(weatherData.list[0].main.temp_min)}\n                        \u00B0C\n                      </p>\n                    </div>\n                    <div className=\"flex-row flex gap-1\">\n                      <p>Max: </p>\n                      <p>\n                        {weatherData &&\n                          Math.round(weatherData.list[0].main.temp_max)}\n                        \u00B0C\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <p className=\"text-xl text-gray-600\">\n                  {weatherData &&\n                    weatherData.list[0].weather[0].description.toUpperCase()}\n                </p>\n              </div>\n              <div className=\"flex flex-row gap-20 justify-center md:flex-row md:gap-4 text-center \">\n                <div className=\"flex flex-col items-center\">\n                  <p className=\"text-sm text-gray-600\">Wind</p>\n                  <p className=\"font-bold\">\n                    {weatherData && Math.round(weatherData.list[0].wind.speed)}{\" \"}\n                    m/s\n                  </p>\n                  <p className=\"text-sm text-gray-600\">Gust</p>\n                  <p className=\"font-bold\">\n                    {weatherData && Math.round(weatherData.list[0].wind.gust)}{\" \"}\n                    m/s\n                  </p>\n                  <p text-sm text-gray-600>\n                    Wind <br />\n                    direction\n                  </p>\n                  <p className=\"font-bold\">\n                    {weatherData &&\n                      getWindDirection(weatherData.list[0].wind.deg)}\n                  </p>\n                </div>\n                <div className=\"flex flex-col items-center\">\n                  <p className=\"text-sm text-gray-600\">Humidity</p>\n                  <p className=\"font-bold\">\n                    {weatherData && weatherData.list[0].main.humidity}%\n                  </p>\n                  <p className=\"text-sm text-gray-600\">Sea level</p>\n                  <p className=\"font-bold\">\n                    {weatherData && weatherData.list[0].main.sea_level}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-10\">\n              <button\n                className={`${\n                  activeTab === \"wind\" ? \"bg-blue-700\" : \"bg-blue-500\"\n                } text-white p-2 rounded-t-lg`}\n                onClick={() => setActiveTab(\"wind\")}\n              >\n                Wind\n              </button>\n              <button\n                className={`${\n                  activeTab === \"swell\" ? \"bg-blue-700\" : \"bg-blue-500\"\n                } text-white p-2 rounded-t-lg`}\n                onClick={() => setActiveTab(\"swell\")}\n              >\n                Swell\n              </button>\n              <button\n                className={`${\n                  activeTab === \"temp\" ? \"bg-blue-700\" : \"bg-blue-500\"\n                } text-white p-2 rounded-t-lg`}\n                onClick={() => setActiveTab(\"temp\")}\n              >\n                Temperature\n              </button>\n            </div>\n            <IframeDisplay activeTab={activeTab} weatherData={weatherData} />\n          </div>\n        </div>\n      )}\n      {error && <p className=\"text-red-600 mt-4\">{error}</p>}\n    </div>\n  );\n};\n\nexport default DashboardData;\n", "// IframeDisplay.jsx\nimport React from \"react\";\n\nexport function IframeDisplay({ activeTab, weatherData }) {\n  return (\n    <>\n      {activeTab === \"wind\" && weatherData && (\n        <iframe\n          title=\"Windy Map\"\n          src={`https://embed.windy.com/embed.html?lat=${weatherData.city.coord.lat}&lon=${weatherData.city.coord.lon}&zoom=5&overlay=wind&metricTemp=\u00B0C&metricWind=m/s`}\n          className=\"w-full rounded-md  h-96\"\n          frameBorder=\"0\"\n        ></iframe>\n      )}\n      {activeTab === \"swell\" && weatherData && (\n        <iframe\n          title=\"Swell Map\"\n          src={`https://embed.windy.com/embed.html?lat=${weatherData.city.coord.lat}&lon=${weatherData.city.coord.lon}&zoom=5&overlay=swell1&product=ecmwfWaves&level=surface`}\n          className=\"w-full  rounded-md r h-96\"\n          frameBorder=\"0\"\n        ></iframe>\n      )}\n      {activeTab === \"temp\" && weatherData && (\n        <iframe\n          title=\"Sea Temperature\"\n          src={`https://embed.windy.com/embed.html?lat=${weatherData.city.coord.lat}&lon=${weatherData.city.coord.lon}&zoom=5&overlay=sst&product=ecmwfAnalysis&level=surface`}\n          className=\"w-full  rounded-md  h-96\"\n          frameBorder=\"0\"\n        ></iframe>\n      )}\n    </>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nexport default function EventCard({ event }) {\n  const [city, setCity] = useState(\"Fetching...\");\n  const { googleMapsApiKey } = useLoaderData();\n  const normalizeCityName = (cityName) => {\n    return cityName\n      .normalize(\"NFD\")\n      .replace(/[\\u0300-\\u036f]/g, \"\")\n      .toLowerCase();\n  };\n\n  const fetchCityFromCoordinates = async (lat, lng) => {\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${googleMapsApiKey}`;\n\n    try {\n      const response = await axios.get(url);\n\n      if (response.data && response.data.results.length > 0) {\n        const addressComponents = response.data.results[0].address_components;\n        const nearestCity =\n          addressComponents.find((component) =>\n            component.types.includes(\"locality\")\n          )?.long_name ||\n          addressComponents.find((component) =>\n            component.types.includes(\"administrative_area_level_1\")\n          )?.long_name ||\n          \"Unknown location\";\n\n        const normalizedCity = normalizeCityName(nearestCity);\n        setCity(normalizedCity);\n      } else {\n        console.error(\"No results found in API response:\", response.data);\n        setCity(\"Unknown location\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching city:\", error.message);\n      setCity(\"Error fetching location\");\n    }\n  };\n\n  useEffect(() => {\n    if (event.location) {\n      const [lat, lng] = event.location\n        .split(\",\")\n        .map((coord) => parseFloat(coord.trim()));\n\n      if (!isNaN(lat) && !isNaN(lng)) {\n        fetchCityFromCoordinates(lat, lng);\n      } else {\n        console.error(\"Invalid coordinates:\", event.location);\n        setCity(\"Invalid location data\");\n      }\n    } else {\n      setCity(\"No location available\");\n    }\n  }, [event.location]);\n\n  if (!event) {\n    return <p>No event found.</p>;\n  }\n\n  return (\n    <article className=\"flex flex-col my-2 p-4 rounded-lg shadow-md w-full bg-white overflow-hidden\">\n      {/* Event Image */}\n      <img\n        className=\"rounded-lg w-full h-48 object-cover\"\n        src={event?.image}\n        alt={event?.title || \"Event image\"}\n      />\n\n      {/* Event Details */}\n      <div className=\"mt-4 space-y-2\">\n        {/* Creator */}\n        <p className=\"text-sm text-gray-600\">\n          Organized by:{\" \"}\n          <span className=\"font-semibold text-gray-800\">\n            {event?.creator?.name || \"Unknown\"}\n          </span>\n        </p>\n\n        {/* Title */}\n        <h2 className=\"text-xl font-bold text-gray-900\">{event.title}</h2>\n\n        {/* Date */}\n        <p className=\"text-sm text-gray-600\">\n          \uD83D\uDCC5 Date:{\" \"}\n          <span className=\"font-medium\">\n            {new Date(event.date).toLocaleDateString(\"en-GB\")}\n          </span>\n        </p>\n\n        {/* Location */}\n        <p className=\"text-sm text-gray-600\">\n          \uD83D\uDCCD Location: <span className=\"font-medium\">{city}</span>\n        </p>\n\n        {/* Description */}\n        <p className=\"text-sm text-gray-700 line-clamp-3\">\n          {event.description || \"No description available.\"}\n        </p>\n\n        {/* Likes */}\n        <p className=\"mt-4 text-sm text-gray-800 font-medium flex items-center\">\n          \u2764\uFE0F Likes: {event.attendees?.length || 0}\n        </p>\n      </div>\n\n      {/* Call to Action */}\n      <button className=\"mt-4 w-full bg-blue-500 hover:bg-blue-600 text-white text-sm font-medium py-2 rounded-lg\">\n        View Details\n      </button>\n    </article>\n  );\n}\n", "import { Form, useLoaderData } from \"@remix-run/react\";\nimport { authenticator } from \"../services/auth.server\";\nimport EventCard from \"../components/EventCard\";\nimport mongoose from \"mongoose\";\nimport EventListCards from \"../components/EventListCards\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nexport async function loader({ request }) {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n  const googleMapsApiKey = process.env.GOOGLE_MAPS_API_KEY;\n  const userUpdated = await mongoose.models.User.findOne({ _id: user._id })\n    .populate(\"followers\", \"_id name\")\n    .populate(\"following\", \"_id name\")\n    .select(\"name lastname mail avatarUrl aboutMe hobbies\")\n    .populate(\"aboutMe\");\n  console.log(userUpdated.hobbies);\n  const events = await mongoose.models.Event.find({ creator: user._id })\n    .populate(\"creator\")\n    .populate(\"attendees\");\n\n  const eventsAttending = await mongoose.models.Event.find({\n    attendees: user._id,\n  })\n    .populate(\"creator\")\n    .populate(\"attendees\");\n\n  return { user: userUpdated, events, eventsAttending, googleMapsApiKey };\n}\n\nexport async function action({ request }) {\n  await authenticator.logout(request, { redirectTo: \"/signin\" });\n}\n\nexport default function Profile() {\n  const { user, events, eventsAttending } = useLoaderData();\n  const [cityUpdates, setCityUpdates] = useState({});\n  const [displayedEventsCount, setDisplayedEventsCount] = useState(3);\n  const [popupList, setPopupList] = useState({\n    visible: false,\n    users: [],\n    type: \"\",\n  });\n  const { googleMapsApiKey } = useLoaderData();\n  const [aboutMePopup, setAboutMePopup] = useState(false);\n  const handleCityUpdate = (eventId, cityName) => {\n    setCityUpdates((prev) => ({\n      ...prev,\n      [eventId]: cityName,\n    }));\n    console.log(`City updated for event ${eventId}: ${cityName}`);\n  };\n\n  const loadMoreEvents = () => {\n    setDisplayedEventsCount((prev) => prev + 3);\n  };\n\n  const togglePopup = (type) => {\n    setPopupList((prev) => ({\n      visible: !prev.visible,\n      users: type === \"followers\" ? user.followers : user.following,\n      type,\n    }));\n  };\n\n  return (\n    <div className=\"page flex flex-col justify-center m-auto p-4 md:w-4/6\">\n      <div className=\"w-full flex flex-col justify-center m-auto my-8\">\n        <div className=\"flex justify-between\">\n          <h1 className=\"font-semibold text-xl\">Profile</h1>\n          <Form>\n            <Link to={`/profile/${user._id}/update`}>\n              <button>\n                <svg\n                  width=\"30px\"\n                  height=\"30px\"\n                  className=\"hover:stroke-gray-400 stroke-black\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g id=\"Complete\">\n                    <g id=\"edit\">\n                      <g>\n                        <path\n                          d=\"M20,16v4a2,2,0,0,1-2,2H4a2,2,0,0,1-2-2V6A2,2,0,0,1,4,4H8\"\n                          fill=\"none\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                        />\n                        <polygon\n                          fill=\"none\"\n                          points=\"12.5 15.8 22 6.2 17.8 2 8.3 11.5 8 16 12.5 15.8\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                        />\n                      </g>\n                    </g>\n                  </g>\n                </svg>\n              </button>\n            </Link>\n          </Form>\n        </div>\n        <div className=\"flex flex-row gap-4 md:justify-between justify-center\">\n          <div className=\"flex flex-col\">\n            <div\n              style={{\n                backgroundImage: `url(${user.avatarUrl})`,\n                backgroundSize: \"cover\",\n              }}\n              className=\"w-20 h-20 rounded-full bg-gray-300\"\n            ></div>\n            <div className=\"py-2\">\n              <p className=\"font-semibold\"> </p>\n              <p>{user?.name}</p>\n            </div>\n            <div>\n              <p className=\"font-semibold\"> </p>\n              <p>{user?.lastname}</p>\n            </div>\n            <div className=\"py-2\">\n              <p className=\"font-semibold\"> </p>\n              <p>{user?.mail}</p>\n            </div>\n          </div>\n          <div className=\"md:flex hidden flex-col w-full \">\n            <div className=\" md:flex hidden flex-col p-2\">\n              <p className=\"font-semibold\">About Me: </p>\n              <p className=\"\">\n                {user?.aboutMe\n                  ? user?.aboutMe.length > 100\n                    ? `${user.aboutMe.slice(0, 100)}...`\n                    : user.aboutMe\n                  : \"No about me information\"}\n                {user?.aboutMe && user?.aboutMe.length > 100 && (\n                  <button\n                    className=\"text-blue-500 underline ml-2\"\n                    onClick={() => setAboutMePopup(true)}\n                  >\n                    See More\n                  </button>\n                )}\n              </p>\n              <p className=\"mt-auto h-full font-bold\">\n                {user?.hobbies.join(\", \")}\n              </p>\n            </div>\n          </div>\n          <div className=\"flex flex-col\">\n            <div className=\"flex flex-row\">\n              <div\n                className=\"py-2 cursor-pointer\"\n                onClick={() => togglePopup(\"followers\")}\n              >\n                <p className=\"font-semibold\">Followers </p>\n                <p className=\"flex justify-center\">\n                  {user.followers ? user.followers.length : 0}\n                </p>\n              </div>\n              <div\n                className=\"p-2 cursor-pointer\"\n                onClick={() => togglePopup(\"following\")}\n              >\n                <p className=\"font-semibold\">Following </p>\n                <p className=\"flex justify-center\">\n                  {user.following ? user.following.length : 0}\n                </p>\n              </div>\n            </div>\n            <div className=\" md:hidden flex flex-col \">\n              <p className=\"font-semibold\">About Me: </p>\n              <p>\n                {user?.aboutMe\n                  ? user?.aboutMe.length > 100\n                    ? `${user.aboutMe.slice(0, 100)}...`\n                    : user.aboutMe\n                  : \"No about me information\"}\n                {user?.aboutMe && user?.aboutMe.length > 100 && (\n                  <button\n                    className=\"text-blue-500 underline ml-2\"\n                    onClick={() => setAboutMePopup(true)}\n                  >\n                    See More\n                  </button>\n                )}\n              </p>\n              <p>{user?.hobbies.join(\", \")}</p>\n            </div>\n          </div>\n        </div>\n        {aboutMePopup && (\n          <div className=\"fixed inset-0 flex items-center justify-center backdrop-blur-sm z-50\">\n            <div className=\"bg-white shadow-lg p-4 rounded-lg w-96 relative\">\n              <h3 className=\"text-lg font-semibold\">About Me</h3>\n              <p className=\"mt-2\">{user.aboutMe}</p>\n              <button\n                className=\"absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded\"\n                onClick={() => setAboutMePopup(false)}\n              >\n                X\n              </button>\n            </div>\n          </div>\n        )}\n        <Form\n          method=\"post\"\n          className=\"items-center w-1/2 md:mt-0 mt-4 bg-rose-400 hover:bg-rose-300 rounded-xl p-2 m-auto\"\n          onSubmit={(e) => {\n            const confirmed = window.confirm(\n              \"Are you sure you want to log out?\"\n            );\n            if (!confirmed) {\n              e.preventDefault();\n            }\n          }}\n        >\n          <button className=\"text-cancel flex flex-row font-semibold w-full justify-center\">\n            Logout\n          </button>\n        </Form>\n      </div>\n      <div className=\"py-6\">\n        <h2 className=\"text-2xl font-semibold\">Liked posts</h2>\n      </div>\n      <div className=\"flex flex-col justify-center w-full\">\n        {eventsAttending && eventsAttending.length > 0 ? (\n          <>\n            {eventsAttending.slice(0, displayedEventsCount).map((event) => (\n              <div key={event._id}>\n                <Link className=\"event-link\" to={`/event/${event._id}`}>\n                  <div className=\"md:hidden\">\n                    <EventListCards\n                      event={event}\n                      onCityUpdate={handleCityUpdate}\n                      apiKey={googleMapsApiKey}\n                    />\n                  </div>\n                  <div className=\"hidden md:block\">\n                    <EventCard\n                      event={event}\n                      onCityUpdate={handleCityUpdate}\n                      apiKey={googleMapsApiKey}\n                    />\n                  </div>\n                </Link>\n              </div>\n            ))}\n            {eventsAttending.length > displayedEventsCount && (\n              <div className=\"flex w-full\">\n                <button\n                  className=\"bg-slate-500 justify-center mt-4 hover:bg-slate-700 text-white font-semibold py-2 px-4 rounded-lg shadow-md cursor-pointer m-auto\"\n                  onClick={loadMoreEvents}\n                >\n                  Load More\n                </button>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"text-center text-2xl font-medium mt-4 text-gray-500\">\n            No liked posts\n          </div>\n        )}\n      </div>\n\n      <div className=\"mb-16\">\n        <h2 className=\"text-lg font-medium pt-6\">Posts by me</h2>\n        {events && events.length > 0 ? (\n          <>\n            {events.slice(0, displayedEventsCount).map((event) => (\n              <div key={event._id}>\n                <Link className=\"event-link\" to={`/event/${event._id}`}>\n                  <div className=\"md:hidden\">\n                    <EventListCards event={event} apiKey={googleMapsApiKey} />\n                  </div>\n                  <div className=\"hidden md:block\">\n                    <EventCard\n                      event={event}\n                      onCityUpdate={handleCityUpdate}\n                      apiKey={googleMapsApiKey}\n                    />\n                  </div>\n                </Link>\n              </div>\n            ))}\n            <div className=\"flex w-full\">\n              {events.length > displayedEventsCount && (\n                <button\n                  className=\"bg-slate-500 justify-center mt-4 hover:bg-slate-700 text-white font-semibold py-2 px-4 rounded-lg shadow-md cursor-pointer m-auto\"\n                  onClick={loadMoreEvents}\n                >\n                  Load More\n                </button>\n              )}\n            </div>\n          </>\n        ) : (\n          <div className=\"text-center mt-4 text-2xl font-medium text-gray-500\">\n            No posts by me\n          </div>\n        )}\n      </div>\n\n      {popupList.visible && (\n        <div className=\"fixed inset-0 flex items-center justify-center backdrop-blur-sm shadow-lg p-4 z-50\">\n          <div className=\"w-96 bg-white shadow-lg p-4 rounded-lg relative max-h-96 overflow-hidden\">\n            <div className=\"flex flex-row justify-between\">\n              <h3 className=\"text-xl font-semibold \">\n                {popupList.type === \"followers\" ? \"Followers\" : \"Following\"}\n              </h3>\n              <button\n                onClick={() =>\n                  setPopupList((prev) => ({ ...prev, visible: false }))\n                }\n                className=\" bg-red-500 text-white px-2 py-1 rounded \"\n              >\n                X\n              </button>\n            </div>\n            <ul className=\"list-disc ml-6\">\n              {popupList.users.map((user) => (\n                <li key={user._id}>{user.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import { Form, useLoaderData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport mongoose from \"mongoose\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MAP_ID = \"71f267d426ae7773\";\n\nexport function meta({ data }) {\n  return [\n    {\n      title: `Evelation - ${data.event.title || \"Event\"}`,\n    },\n  ];\n}\n\nexport async function loader({ request, params }) {\n  const authUser = await authenticator.isAuthenticated(request);\n  const googleMapsApiKey = process.env.GOOGLE_MAPS_API_KEY;\n\n  const event = await mongoose.models.Event.findById(params.eventId)\n    .populate(\"attendees\")\n    .populate(\"creator\");\n  return json({ event, authUser, googleMapsApiKey });\n}\n\nexport async function action({ request, params }) {\n  const formData = new URLSearchParams(await request.text());\n  const action = formData.get(\"_action\");\n  const authUser = await authenticator.isAuthenticated(request);\n\n  if (!authUser) {\n    throw new Error(\"User not authenticated\");\n  }\n\n  const eventId = params.eventId;\n  const Event = mongoose.models.Event;\n\n  if (action === \"attend\") {\n    await Event.findByIdAndUpdate(eventId, {\n      $addToSet: { attendees: authUser._id },\n    });\n  } else if (action === \"unattend\") {\n    await Event.findByIdAndUpdate(eventId, {\n      $pull: { attendees: authUser._id },\n    });\n  }\n\n  return redirect(`/event/${eventId}`);\n}\n\nexport default function Event() {\n  const { event, authUser, googleMapsApiKey } = useLoaderData();\n  const [city, setCity] = useState(null);\n  const mapRef = useRef(null);\n\n  const location = event?.location\n    ? {\n        lat: parseFloat(event.location.split(\",\")[0]),\n        lng: parseFloat(event.location.split(\",\")[1]),\n      }\n    : null;\n\n  // Dynamically load Google Maps script\n  useEffect(() => {\n    if (!googleMapsApiKey || !location) return;\n\n    const loadGoogleMapsScript = () => {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}`;\n      script.async = true;\n      script.onload = initializeMap;\n      document.body.appendChild(script);\n    };\n\n    const initializeMap = () => {\n      if (window.google && mapRef.current) {\n        const map = new window.google.maps.Map(mapRef.current, {\n          center: location,\n          zoom: 12,\n          mapId: MAP_ID,\n        });\n\n        new window.google.maps.Marker({\n          position: location,\n          map,\n          title: \"Event Location\",\n        });\n      }\n    };\n\n    if (!window.google) {\n      loadGoogleMapsScript();\n    } else {\n      initializeMap();\n    }\n  }, [googleMapsApiKey, location]);\n\n  // Fetch city name\n  useEffect(() => {\n    if (location) {\n      const fetchCityName = async () => {\n        const geocodeUrl = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${location.lat},${location.lng}&key=${googleMapsApiKey}`;\n        try {\n          const response = await fetch(geocodeUrl);\n          const data = await response.json();\n\n          if (data.results.length > 0) {\n            const filteredResults = data.results.filter(\n              (result) => !result.types.includes(\"plus_code\")\n            );\n            const cityResult = filteredResults.find((result) =>\n              result.types.includes(\"locality\")\n            );\n\n            if (cityResult) {\n              const cityComponent = cityResult.address_components.find(\n                (component) => component.types.includes(\"locality\")\n              );\n              if (cityComponent) {\n                setCity(cityComponent.long_name);\n                return;\n              }\n            }\n\n            const fallbackResult = filteredResults[0];\n            setCity(fallbackResult?.formatted_address || \"Unknown Location\");\n          } else {\n            setCity(\"Unknown Location\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching city name:\", error);\n          setCity(\"Error fetching location\");\n        }\n      };\n      fetchCityName();\n    }\n  }, [location]);\n\n  const attending = event?.attendees?.some(\n    (attendee) => attendee._id === authUser?._id\n  );\n\n  return (\n    <div\n      id=\"event-page\"\n      className=\"page max-w-5xl flex flex-col justify-center m-auto p-6\"\n    >\n      <div\n        className=\"h-96 w-full flex rounded-xl\"\n        style={{\n          backgroundImage: `url(${event?.image})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      ></div>\n      <div className=\"my-4\">\n        <h1 className=\"text-3xl\">{event.title}</h1>\n        <p className=\"text-gray-500\">\n          Post by:{\" \"}\n          <NavLink\n            to={`/userProfile/${event?.creator?._id}`}\n            className=\"text-blue-500 hover:underline\"\n          >\n            {event?.creator?.name}\n          </NavLink>\n        </p>\n      </div>\n      <h3 className=\"text-gray-500 font-bold\">Description</h3>\n      <p>{event.description}</p>\n      <div className=\"flex flex-col my-2\">\n        <p>Date</p>\n        <p className=\"\">{new Date(event.date).toLocaleDateString(\"en-GB\")}</p>\n      </div>\n      <div className=\"flex my-2\">\n        <p className=\"\">{city || \"Fetching location...\"}</p>\n      </div>\n\n      {location && (\n        <div ref={mapRef} style={{ width: \"100%\", height: \"400px\" }}></div>\n      )}\n\n      <div className=\"flex items-center gap-4 mt-4 justify-between\">\n        <div className=\"flex gap-2 items-center\">\n          <p>\uD83D\uDC99 {event.attendees.length}</p>\n          {!attending && authUser ? (\n            <Form method=\"post\">\n              <button\n                type=\"submit\"\n                name=\"_action\"\n                value=\"attend\"\n                className=\"px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600\"\n              >\n                Like\n              </button>\n            </Form>\n          ) : authUser ? (\n            <Form method=\"post\">\n              <button\n                type=\"submit\"\n                name=\"_action\"\n                value=\"unattend\"\n                className=\"px-4 py-2 bg-red-500 text-white rounded-full hover:bg-red-600\"\n              >\n                Unlike\n              </button>\n            </Form>\n          ) : null}\n        </div>\n        <div>\n          {authUser?._id === event?.creator?._id && (\n            <div className=\"flex py-4\">\n              <Form action=\"update\">\n                <button className=\"px-4 py-2 bg-yellow-500 text-white rounded-full hover:bg-yellow-600\">\n                  Update\n                </button>\n              </Form>\n              <Form action=\"destroy\" method=\"post\">\n                <button\n                  className=\"ml-4 px-4 py-2 bg-red-500 text-white rounded-full hover:bg-red-600\"\n                  onClick={(e) => {\n                    if (\n                      !window.confirm(\n                        \"Are you sure you want to delete this post?\"\n                      )\n                    ) {\n                      e.preventDefault();\n                    }\n                  }}\n                >\n                  Delete this post\n                </button>\n              </Form>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import React from \"react\";\nimport DashboardData from \"../components/DashboardData\";\nimport { NavLink, redirect } from \"react-router-dom\";\nimport { authenticator } from \"../services/auth.server\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\n\nexport const meta = () => {\n  return [{ title: \"Elevation\" }];\n};\n\nexport const loader = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    Redirect: \"/main-dashboard\",\n  });\n\n  const openWeatherApiKey = process.env.OPEN_WEATHER_API_KEY;\n\n  return json({\n    openWeatherApiKey, // API keys securely passed here\n    isAuthenticated: !!user, // determine authentication status\n  });\n};\n\nexport default function MainDashboard() {\n  const { openWeatherApiKey, isAuthenticated } = useLoaderData();\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"page\">\n        <div className=\"w-full top-0 bg-slate-200 h-14 flex justify-center items-center font-bold shadow-sm animate-slideDown z-10\">\n          <p>\n            Sign in to see more or\n            <NavLink to=\"/signup\" className=\"text-blue-600\">\n              {\" \"}\n              sign up here\n            </NavLink>\n          </p>\n        </div>\n        <div className=\"page\">\n          <DashboardData apiKey={openWeatherApiKey} />{\" \"}\n        </div>\n      </div>\n    );\n  }\n\n  // If the user is authenticated, redirect to the dashboard\n  return redirect(\"/dashboard\");\n}\n", "import { json } from \"@remix-run/node\";\nimport { Form, Link, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport EventListCards from \"../components/EventListCards\";\nimport { authenticator } from \"../services/auth.server\";\nimport EventCard from \"../components/EventCard\";\nimport { useState } from \"react\";\nimport EventList from \"../components/EventList\";\n\nexport const meta = () => {\n  return [{ title: \"Evelation - Post\" }];\n};\n\nexport async function loader({ request }) {\n  await authenticator.isAuthenticated(request);\n  const googleMapsApiKey = process.env.GOOGLE_MAPS_API_KEY;\n  try {\n    const events = await mongoose.models.Event.find()\n      .populate(\"creator\")\n      .populate(\"attendees\")\n      .sort({ createdAt: -1 });\n\n    return json({ events: events || [], googleMapsApiKey }); // Return an empty array if events is undefined\n  } catch (error) {\n    console.error(\"Error fetching events:\", error);\n    return json({ googleMapsApiKey, events: [] }); // Return empty array in case of an error\n  }\n}\n\nexport default function Index() {\n  const { events, googleMapsApiKey } = useLoaderData();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [eventCities, setEventCities] = useState({});\n  const [displayedEventsCount, setDisplayedEventsCount] = useState(6);\n  const [sortOption, setSortOption] = useState(\"newest\"); // Sorting options\n\n  const updateCity = (eventId, city) => {\n    setEventCities((prev) => ({\n      ...prev,\n      [eventId]: city,\n    }));\n  };\n\n  const loadMoreEvents = () => {\n    setDisplayedEventsCount((prevCount) => prevCount + 6);\n  };\n\n  // Sort and filter events\n  const sortedAndFilteredEvents = events\n    .filter((event) => {\n      const city = (eventCities[event._id] || \"\").toLowerCase();\n      const searchTermLower = searchTerm.toLowerCase();\n\n      return (\n        Object.values(event).some(\n          (value) =>\n            value != null && // Ensure value is not null or undefined\n            value.toString().toLowerCase().includes(searchTermLower)\n        ) || city.includes(searchTermLower)\n      );\n    })\n\n    .sort((a, b) => {\n      if (sortOption === \"newest\")\n        return new Date(b.createdAt) - new Date(a.createdAt);\n      if (sortOption === \"oldest\")\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      if (sortOption === \"mostLikes\")\n        return (b.attendees?.length || 0) - (a.attendees?.length || 0);\n      return 0; // Default to no additional sorting\n    })\n    .slice(0, displayedEventsCount);\n\n  return (\n    <div className=\"page\">\n      <div className=\"w-full flex justify-center flex-col\">\n        <div className=\" flex  flex-col mx-auto p-6\">\n          <h2 className=\"font-bold text-4xl text-gray-950\">\n            Discover new surfspots\n          </h2>\n          <p className=\"text-gray-700 pb-4\">Find spots</p>\n          <h1 className=\"text-2xl font-semibold w-2/3 py-4\">All spots</h1>\n        </div>\n        <Form\n          className=\"h-12 bg-background flex items-center gap-x-4 rounded-2xl my-2\"\n          id=\"search-form\"\n          role=\"search\"\n        >\n          <div className=\"w-full flex justify-center\">\n            <div className=\"flex w-64 bg-slate-50 rounded-2xl items-center p-2 justify-between\">\n              <input\n                className=\"bg-slate-50 flex\"\n                type=\"text\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Search posts\"\n              />\n              <svg\n                className=\"h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M 9 2 C 5.1458514 2 2 5.1458514 2 9 C 2 12.854149 5.1458514 16 9 16 C 10.747998 16 12.345009 15.348024 13.574219 14.28125 L 14 14.707031 L 14 16 L 20 22 L 22 20 L 16 14 L 14.707031 14 L 14.28125 13.574219 C 15.348024 12.345009 16 10.747998 16 9 C 16 5.1458514 12.854149 2 9 2 z M 9 4 C 11.773268 4 14 6.2267316 14 9 C 14 11.773268 11.773268 14 9 14 C 6.2267316 14 4 11.773268 4 9 C 4 6.2267316 6.2267316 4 9 4 z\"></path>\n              </svg>\n            </div>\n          </div>\n        </Form>\n\n        {/* Sorting Options */}\n        <div className=\"w-11/12 flex flex-col justify-center mx-auto\">\n          <div className=\"flex justify-end items-center gap-x-4 mt-4\">\n            <label htmlFor=\"sort\" className=\"text-gray-700\">\n              Sort by:\n            </label>\n            <select\n              id=\"sort\"\n              className=\"bg-slate-50 rounded-md px-2 py-1\"\n              value={sortOption}\n              onChange={(e) => setSortOption(e.target.value)}\n            >\n              <option value=\"newest\">Newest</option>\n              <option value=\"oldest\">Oldest</option>\n              <option value=\"mostLikes\">Most Likes</option>\n            </select>\n          </div>\n\n          <div className=\"flex justify-center w-full flex-col\">\n            <section className=\"grid-cols-1 \">\n              {sortedAndFilteredEvents.map((event) => (\n                <Link\n                  key={event._id}\n                  className=\"event-link\"\n                  to={`/event/${event._id}`}\n                >\n                  <div className=\"flex m-auto\">\n                    <EventList\n                      event={event}\n                      onCityUpdate={updateCity}\n                      apiKey={googleMapsApiKey}\n                    />\n                  </div>\n                </Link>\n              ))}\n            </section>\n            {events.length > displayedEventsCount && (\n              <button\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg shadow-md cursor-pointer m-auto mt-4\"\n                onClick={loadMoreEvents}\n              >\n                Load More\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nexport default function EventList({ event, onCityUpdate }) {\n  const [city, setCity] = useState(null);\n  const { googleMapsApiKey } = useLoaderData();\n\n  const normalizeCityName = (cityName) => {\n    return cityName\n      .normalize(\"NFD\")\n      .replace(/[\\u0300-\\u036f]/g, \"\")\n      .toLowerCase();\n  };\n\n  const fetchCityFromCoordinates = async (lat, lng) => {\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${googleMapsApiKey}`;\n\n    try {\n      const response = await axios.get(url);\n      const results = response.data.results;\n      if (results.length > 0) {\n        const addressComponents = results[0].address_components;\n        const nearestCity =\n          addressComponents.find(\n            (component) =>\n              component.types.includes(\"locality\") ||\n              component.types.includes(\"administrative_area_level_1\")\n          )?.long_name ||\n          addressComponents.find((component) =>\n            component.types.includes(\"administrative_area_level_2\")\n          )?.long_name ||\n          \"Unknown location\";\n\n        const normalizedCity = normalizeCityName(nearestCity);\n        setCity(normalizedCity);\n        onCityUpdate(event._id, normalizedCity);\n      } else {\n        setCity(\"Unknown location\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching city:\", error);\n      setCity(\"Error fetching location\");\n    }\n  };\n\n  useEffect(() => {\n    if (event.location) {\n      const [lat, lng] = event.location\n        .split(\",\")\n        .map((coord) => parseFloat(coord.trim()));\n      if (!isNaN(lat) && !isNaN(lng)) {\n        fetchCityFromCoordinates(lat, lng);\n      } else {\n        setCity(\"No location available\");\n      }\n    }\n  }, [event.location]);\n\n  return (\n    <article className=\"flex w-full items-center my-2 px-4 py-2 bg-white rounded-md shadow-sm hover:shadow-md transition-shadow\">\n      <div\n        className=\"w-16 h-16 rounded-md bg-cover bg-center flex-shrink-0\"\n        style={{\n          backgroundImage: `url(${event?.image})`,\n        }}\n      ></div>\n      <div className=\"ml-4 flex-1\">\n        <h2 className=\"text-sm font-semibold text-gray-800 truncate\">\n          {event.title}\n        </h2>\n        <p className=\"text-xs text-gray-500\">\n          By {event?.creator?.name} \u2022 {city || \"Fetching city...\"}\n        </p>\n        <p className=\"text-xs text-gray-600 mt-1\">\n          <span className=\"font-medium\">Date:</span>{\" \"}\n          {new Date(event.date).toLocaleDateString(\"en-GB\")}\n        </p>\n      </div>\n      <div className=\"ml-4 text-right flex-shrink-0\">\n        <p className=\"mt-1 text-xs text-gray-500\">\n          Likes: {event.attendees?.length || 0}\n        </p>\n      </div>\n    </article>\n  );\n}\n", "import { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { Form } from \"@remix-run/react\";\nimport { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\nimport { authenticator } from \"../services/auth.server\";\nimport mongoose from \"mongoose\";\nimport { redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nconst MAP_ID = \"71f267d426ae7773\";\n\nexport async function loader({ request }) {\n  const googleMapsApiKey = process.env.GOOGLE_MAPS_API_KEY;\n\n  // Check if the API key is present to avoid issues\n  if (!googleMapsApiKey) {\n    throw new Error(\"Google Maps API Key is missing.\");\n  }\n\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  return { googleMapsApiKey, user };\n}\n\nexport default function AddEvent() {\n  const [image, setImage] = useState(\n    \"https://placehold.co/600x400?text=Add+your+amazing+image\"\n  );\n  const [location, setLocation] = useState(null);\n  const [center] = useState({ lat: 41.0082, lng: 28.9784 }); // Istanbul coordinates\n  const mapRef = useRef();\n  const navigate = useNavigate();\n  const { googleMapsApiKey } = useLoaderData(); // API key passed from loader\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey, // Use the key here\n  });\n  const handleMapClick = (event) => {\n    setLocation({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n    });\n  };\n\n  const handleCancel = () => navigate(\"/dashboard\");\n\n  useEffect(() => {\n    if (location && mapRef.current) {\n      mapRef.current.panTo(location);\n    }\n  }, [location]);\n\n  return (\n    <div className=\"page w-full flex-col gap-y-4 justify-center mt-4 mb-4 p-8\">\n      <h1 className=\"m-auto flex justify-center font-semibold text-2xl mb-6\">\n        Create New Post\n      </h1>\n      <Form\n        id=\"event-form\"\n        method=\"post\"\n        className=\"rounded-lg font-semibold max-w-lg justify-center m-auto flex flex-col gap-y-4 p-4\"\n      >\n        <label htmlFor=\"title\">Post Title</label>\n        <input\n          required\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Write a title...\"\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          required\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Write a description...\"\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"date\">Date</label>\n        <input\n          required\n          id=\"date\"\n          name=\"date\"\n          type=\"date\"\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"location\">Location</label>\n        <input\n          id=\"location\"\n          name=\"location\"\n          type=\"text\"\n          readOnly\n          placeholder=\"Click on the map to select a location\"\n          value={location ? `${location.lat}, ${location.lng}` : \"\"}\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <div>\n          <p>Click on the map to select a location.</p>\n        </div>\n\n        {isLoaded ? (\n          <GoogleMap\n            apiKey={googleMapsApiKey}\n            mapContainerStyle={{ width: \"100%\", height: \"400px\" }}\n            center={center}\n            zoom={12}\n            onClick={handleMapClick}\n            onLoad={(map) => {\n              mapRef.current = map;\n              map.setOptions({\n                mapId: MAP_ID,\n              });\n            }}\n          >\n            {location && (\n              <Marker position={location} title=\"Selected Location\" />\n            )}\n          </GoogleMap>\n        ) : (\n          <p>Loading map...</p>\n        )}\n\n        <label htmlFor=\"image\">Image URL</label>\n        <input\n          required\n          id=\"image\"\n          name=\"image\"\n          type=\"url\"\n          placeholder=\"Paste an image URL...\"\n          onChange={(e) => setImage(e.target.value)}\n          className=\"rounded-xl p-2 border-gray-400 border\"\n        />\n\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <img\n          id=\"image-preview\"\n          src={image}\n          alt=\"Preview\"\n          className=\"image-preview m-auto rounded-xl\"\n        />\n\n        <div className=\"flex justify-between\">\n          <button\n            type=\"submit\"\n            className=\"bg-accent hover:bg-primary hover:text-background p-2 rounded-lg\"\n          >\n            Save\n          </button>\n          <button\n            type=\"button\"\n            className=\"text-cancel p-2 rounded-lg\"\n            onClick={handleCancel}\n          >\n            Cancel\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n\n  const formData = await request.formData();\n  const event = Object.fromEntries(formData);\n\n  event.creator = user._id;\n\n  await mongoose.models.Event.create(event);\n\n  return redirect(\"/dashboard\");\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport ShowAllLocations from \"../components/ShowAllLocations\"; // Adjust the import path\nimport mongoose from \"mongoose\";\nimport { json } from \"@remix-run/node\";\n\n// Loader for fetching events\nexport async function loader() {\n  const events = await mongoose.models.Event.find({});\n  const googleMapsApiKey = process.env.GOOGLE_MAPS_API_KEY;\n  return json({ events, googleMapsApiKey });\n}\n\nexport default function LocationsPage() {\n  const { events, googleMapsApiKey } = useLoaderData();\n\n  return (\n    <div style={{ width: \"100%\", height: \"100vh\" }}>\n      <ShowAllLocations events={events} apiKey={googleMapsApiKey} />\n    </div>\n  );\n}\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { useJsApiLoader } from \"@react-google-maps/api\";\n\nexport default function ShowAllLocations({ events, apiKey }) {\n  const [locations, setLocations] = useState([]);\n  const mapRef = useRef(null);\n  const infoWindowRef = useRef(null); // Reference for the InfoWindow\n  const geocoderRef = useRef(null); // Reference for Geocoding\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: apiKey,\n  });\n\n  useEffect(() => {\n    if (events) {\n      const eventLocations = events.map((event) => {\n        const [lat, lng] = event.location.split(\",\").map(Number);\n        return { lat, lng, title: event.title || \"Event Location\" };\n      });\n      setLocations(eventLocations);\n    }\n  }, [events]);\n\n  useEffect(() => {\n    if (isLoaded && locations.length > 0 && mapRef.current) {\n      const map = new window.google.maps.Map(mapRef.current, {\n        center: locations[0], // Center map at the first location\n        zoom: 2,\n        mapId: \"71f267d426ae7773\", // Your Map ID\n      });\n\n      // Initialize InfoWindow and Geocoder\n      infoWindowRef.current = new window.google.maps.InfoWindow();\n      geocoderRef.current = new window.google.maps.Geocoder();\n\n      // Add markers with click event listeners\n      locations.forEach((location) => {\n        const marker = new window.google.maps.Marker({\n          position: { lat: location.lat, lng: location.lng },\n          map,\n          title: location.title,\n        });\n\n        // Add a click listener to show the InfoWindow with city name\n        marker.addListener(\"click\", () => {\n          geocoderRef.current.geocode(\n            { location: { lat: location.lat, lng: location.lng } },\n            (results, status) => {\n              if (status === \"OK\" && results[0]) {\n                const city = results.find((result) =>\n                  result.types.includes(\"locality\")\n                )?.formatted_address;\n\n                const infoContent = `\n                  <div>\n                    <h3>${location.title}</h3>\n                    <p>City: ${city || \"Unknown\"}</p>\n                    <p>Latitude: ${location.lat}</p>\n                    <p>Longitude: ${location.lng}</p>\n                  </div>\n                `;\n                infoWindowRef.current.setContent(infoContent);\n                infoWindowRef.current.open(map, marker);\n              } else {\n                console.error(\"Geocoder failed:\", status);\n                infoWindowRef.current.setContent(`\n                  <div>\n                    <h3>${location.title}</h3>\n                    <p>Latitude: ${location.lat}</p>\n                    <p>Longitude: ${location.lng}</p>\n                    <p>City: Unable to fetch</p>\n                  </div>\n                `);\n                infoWindowRef.current.open(map, marker);\n              }\n            }\n          );\n        });\n      });\n    }\n  }, [isLoaded, locations]);\n\n  if (loadError) return <div>Error loading Google Maps</div>;\n  if (!isLoaded) return <div>Loading Google Maps...</div>;\n\n  return <div ref={mapRef} style={{ width: \"100%\", height: \"100vh\" }} />;\n}\n", "import { redirect } from \"@remix-run/node\";\nimport { Form, useNavigate } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { useState } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\n\nexport const meta = () => {\n  return [{ title: \"Remix Post App - Add New Post\" }];\n};\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n}\n\nexport default function AddPost() {\n  const [image, setImage] = useState(\"https://placehold.co/600x400?text=Add+your+amazing+image\");\n  const navigate = useNavigate();\n\n  function handleCancel() {\n    navigate(-1);\n  }\n\n  return (\n    <div className=\"page\">\n      <h1>Add a Post</h1>\n      <Form id=\"post-form\" method=\"post\">\n        <label htmlFor=\"caption\">Caption</label>\n        <input id=\"caption\" name=\"caption\" type=\"text\" aria-label=\"caption\" placeholder=\"Write a caption...\" />\n\n        <label htmlFor=\"image\">Image URL</label>\n        <input name=\"image\" type=\"url\" onChange={(e) => setImage(e.target.value)} placeholder=\"Paste an image URL...\" />\n\n        <label htmlFor=\"image-preview\">Image Preview</label>\n        <img\n          id=\"image-preview\"\n          className=\"image-preview\"\n          src={image ? image : \"https://placehold.co/600x400?text=Paste+an+image+URL\"}\n          alt=\"Choose\"\n          onError={(e) => (e.target.src = \"https://placehold.co/600x400?text=Error+loading+image\")}\n        />\n\n        <div className=\"btns\">\n          <button>Save</button>\n          <button type=\"button\" className=\"btn-cancel\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  // Get the authenticated user\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/signin\",\n  });\n  console.log(user);\n  const formData = await request.formData();\n  const post = Object.fromEntries(formData);\n\n  // Add the authenticated user's id to the post.user field\n  post.user = user._id;\n  // Save the post to the database\n  await mongoose.models.Post.create(post);\n\n  return redirect(\"/posts\");\n}\n", "import { authenticator } from \"../services/auth.server\";\n\nexport const meta = () => {\n  return [{ title: \"Elevation\" }];\n};\n\nexport async function loader({ request }) {\n  return await authenticator.isAuthenticated(request, {\n    successRedirect: \"/dashboard\",\n    failureRedirect: \"/main-dashboard\",\n  });\n}\n", "import { json } from \"@remix-run/node\";\nimport { Form, NavLink, useLoaderData } from \"@remix-run/react\";\nimport { authenticator } from \"../services/auth.server\";\nimport { sessionStorage } from \"../services/session.server\";\n\nexport async function loader({ request }) {\n  // If the user is already authenticated redirect to /posts directly\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/dashboard\",\n  });\n  // Retrieve error message from session if present\n  const session = await sessionStorage.getSession(\n    request.headers.get(\"Cookie\")\n  );\n  // Get the error message from the session\n  const error = session.get(\"sessionErrorKey\");\n  // Remove the error message from the session after it's been retrieved\n  session.unset(\"sessionErrorKey\");\n  // Commit the updated session that no longer contains the error message\n  const headers = new Headers({\n    \"Set-Cookie\": await sessionStorage.commitSession(session),\n  });\n\n  return json({ error }, { headers }); // return the error message\n}\n\nexport default function SignIn() {\n  // if i got an error it will come back with the loader dxata\n  const loaderData = useLoaderData();\n  return (\n    <div\n      id=\"sign-in-page\"\n      className=\" flex flex-col justify-center items-center rounded-lg h-auto w-80 ml-auto mr-auto mt-24 p-4 gap-3\"\n    >\n      <h1 className=\"text-2xl w-auto\">Sign In</h1>\n      <Form\n        id=\"sign-in-form\"\n        method=\"post\"\n        className=\"flex items-center flex-col gap-1 w-full\"\n      >\n        <label htmlFor=\"mail\">Email</label>\n        <input\n          id=\"mail\"\n          type=\"email\"\n          name=\"mail\"\n          aria-label=\"mail\"\n          placeholder=\"Type your email...\"\n          required\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"password\" className=\"\">\n          Password\n        </label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          aria-label=\"password\"\n          placeholder=\"Type your password...\"\n          autoComplete=\"current-password\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n        <div className=\"bg-sky-500 text-white hover:bg-sky-600 transition-colors p-2 rounded-xl mt-2 w-32 flex justify-center\">\n          <button>Sign In</button>\n        </div>\n\n        {loaderData?.error ? (\n          <div className=\"error-message\">\n            <p>{loaderData?.error?.message}</p>\n          </div>\n        ) : null}\n      </Form>\n      <p className=\"flex\">\n        No account?{\" \"}\n        <NavLink to=\"/signup\" className=\"text-sky-500\">\n          Sign up here.\n        </NavLink>\n      </p>\n    </div>\n  );\n}\n\nexport async function action({ request }) {\n  // we call the method with the name of the strategy we want to use and the\n  // request object, optionally we pass an object with the URLs we want the user\n  // to be redirected to after a success or a failure\n  return await authenticator.authenticate(\"user-pass\", request, {\n    successRedirect: \"/dashboard\",\n    failureRedirect: \"/signin\",\n  });\n}\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, NavLink, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { authenticator } from \"../services/auth.server\";\nimport { sessionStorage } from \"../services/session.server\";\nimport { useState, useRef, useEffect } from \"react\";\n\n// Loader function to check if user is authenticated\nexport async function loader({ request }) {\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/dashboard\",\n  });\n\n  const session = await sessionStorage.getSession(\n    request.headers.get(\"Cookie\")\n  );\n  const error = session.get(\"sessionErrorKey\");\n  session.unset(\"sessionErrorKey\");\n  const headers = new Headers({\n    \"Set-Cookie\": await sessionStorage.commitSession(session),\n  });\n\n  return json({ error }, { headers });\n}\n\n// SignUp Component\nexport default function SignUp() {\n  const loaderData = useLoaderData();\n  const [selectedHobbies, setSelectedHobbies] = useState([]);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [avatarPreview, setAvatarPreview] = useState(\"\");\n  const dropdownRef = useRef(null); // Declare ref here\n  const sportsOptions = [\n    \"Surfing\",\n    \"Snowboarding\",\n    \"Kiteboarding\",\n    \"Skateboarding\",\n    \"Skiing\",\n    \"wakeboarding\",\n    \"windsurfing\",\n  ];\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    setSelectedHobbies((prev) =>\n      checked ? [...prev, value] : prev.filter((hobby) => hobby !== value)\n    );\n  };\n\n  const handleAvatarChange = (event) => {\n    setAvatarPreview(event.target.value);\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [dropdownRef]);\n\n  return (\n    <div\n      id=\"sign-up-page\"\n      className=\"flex flex-col justify-center items-center rounded-lg h-auto w-80 ml-auto mr-auto mt-24 mb-32 p-4 gap-3\"\n    >\n      <h1 className=\"text-2xl w-auto\">Sign Up</h1>\n      <Form\n        id=\"sign-up-form\"\n        method=\"post\"\n        className=\"flex items-center flex-col gap-1 w-full\"\n      >\n        <label htmlFor=\"mail\">Email</label>\n        <input\n          id=\"mail\"\n          type=\"email\"\n          name=\"mail\"\n          aria-label=\"mail\"\n          placeholder=\"Type your email...\"\n          required\n          autoComplete=\"off\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          aria-label=\"password\"\n          placeholder=\"Type your password...\"\n          autoComplete=\"current-password\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"firstName\">First name</label>\n        <input\n          id=\"firstName\"\n          type=\"text\"\n          name=\"name\"\n          aria-label=\"first name\"\n          placeholder=\"Type your first name..\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"lastName\">Last name</label>\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          name=\"lastName\"\n          aria-label=\"last name\"\n          placeholder=\"Type your last name...\"\n          className=\"p-2 rounded-xl w-full\"\n        />\n\n        <label htmlFor=\"avatarUrl\">Avatar URL</label>\n        <input\n          id=\"avatarUrl\"\n          type=\"url\"\n          name=\"avatarUrl\"\n          aria-label=\"avatar url\"\n          placeholder=\"Paste your avatar URL or leave blank for default...\"\n          className=\"p-2 rounded-xl w-full\"\n          onChange={handleAvatarChange}\n        />\n\n        {/* Display avatar preview */}\n        {avatarPreview && (\n          <div className=\"mt-2\">\n            <img\n              src={avatarPreview}\n              alt=\"Avatar Preview\"\n              className=\"w-20 h-20 rounded-full object-cover border\"\n            />\n          </div>\n        )}\n\n        <label>Select your hobbies:</label>\n        <div className=\"relative\" ref={dropdownRef}>\n          <button\n            type=\"button\"\n            onClick={toggleDropdown}\n            className=\"bg-white p-2 w-full rounded-xl border\"\n          >\n            Choose your hobbies\n          </button>\n          {dropdownOpen && (\n            <div className=\"absolute top-full mt-1 w-full bg-white border rounded-lg shadow-lg z-10\">\n              {sportsOptions.map((sport) => (\n                <label key={sport} className=\"block p-2\">\n                  <input\n                    type=\"checkbox\"\n                    value={sport}\n                    checked={selectedHobbies.includes(sport)}\n                    onChange={handleCheckboxChange}\n                  />\n                  {sport}\n                </label>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Display selected hobbies in a separate div */}\n        <div className=\"mt-2\">\n          {selectedHobbies.length > 0 && (\n            <div className=\"p-2 bg-gray-100 border rounded-lg\">\n              <strong>Selected Hobbies:</strong>\n              <p>{selectedHobbies.join(\", \")}</p>\n            </div>\n          )}\n        </div>\n\n        <input\n          type=\"hidden\"\n          name=\"selectedHobbies\"\n          value={JSON.stringify(selectedHobbies)}\n        />\n\n        <div className=\"bg-sky-500 text-white hover:bg-sky-600 transition-colors p-2 rounded-xl mt-2 w-32 flex justify-center\">\n          <button>Sign Up</button>\n        </div>\n\n        {loaderData?.error ? (\n          <div className=\"error-message\">\n            <p>{loaderData?.error?.message}</p>\n          </div>\n        ) : null}\n      </Form>\n      <p>\n        Already have an account?{\" \"}\n        <NavLink to=\"/signin\" className={\"text-sky-500\"}>\n          Sign in here.\n        </NavLink>\n      </p>\n    </div>\n  );\n}\n\n// Action function to handle form submission\nexport async function action({ request }) {\n  try {\n    const formData = await request.formData();\n    const newUser = Object.fromEntries(formData);\n\n    // Parse selectedHobbies from JSON string to array\n    newUser.selectedHobbies = JSON.parse(newUser.selectedHobbies || \"[]\");\n\n    // Create the user in MongoDB with all fields\n    await mongoose.models.User.create({\n      mail: newUser.mail,\n      password: newUser.password,\n      name: newUser.name,\n      lastname: newUser.lastName,\n      avatarUrl: newUser.avatarUrl,\n      hobbies: newUser.selectedHobbies,\n    });\n\n    return redirect(\"/signin\");\n  } catch (error) {\n    console.log(error);\n    return redirect(\"/signup\");\n  }\n}\n", "import { Link } from \"react-router-dom\";\nexport default function Example() {\n  return (\n    <>\n      <main className=\"relative isolate min-h-full\">\n        <img\n          src=\"https://cdn.pixabay.com/photo/2017/08/10/01/11/field-2616740_1280.jpg\"\n          alt=\"\"\n          className=\"absolute inset-0 -z-10 h-full w-full object-cover \"\n          style={{\n            filter: \"grayscale(100%) contrast(1.5) brightness(0.7)\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <div className=\"mx-auto max-w-7xl px-6 py-32 text-center sm:py-40 lg:px-8 text-gray-50\">\n          <p className=\"text-base font-semibold leading-8 text-white\">404</p>\n          <h1 className=\"mt-4 text-3xl font-bold tracking-tight  sm:text-5xl\">\n            Page not found\n          </h1>\n          <p className=\"mt-4 text-base  sm:mt-6\">\n            Sorry, we couldn\u2019t find the page you\u2019re looking for.\n          </p>\n          <div className=\"mt-10 flex justify-center\">\n            <Link to=\"/event\" className=\"text-sm font-semibold leading-7 \">\n              <span aria-hidden=\"true\">&larr;</span> Back to home\n            </Link>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-4IXEBM3M.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-X5P7ZZ2U.js','/build/_shared/chunk-LMGUNZ3X.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-YSFSRWXX.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GAKETAI6.js','imports':['/build/_shared/chunk-SARLQUTN.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-WF7DN4SY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/add-event':{'id':'routes/add-event','parentId':'root','path':'add-event','index':undefined,'caseSensitive':undefined,'module':'/build/routes/add-event-4DDUC4YR.js','imports':['/build/_shared/chunk-SDEB5LWC.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/add-post':{'id':'routes/add-post','parentId':'root','path':'add-post','index':undefined,'caseSensitive':undefined,'module':'/build/routes/add-post-NIBVFLTW.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/dashboard._index':{'id':'routes/dashboard._index','parentId':'root','path':'dashboard','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard._index-ZZFGIHCR.js','imports':['/build/_shared/chunk-7Y7WWHAI.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-XNCNTYHY.js','/build/_shared/chunk-7LAK5SQQ.js','/build/_shared/chunk-4HUAJPKT.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/error':{'id':'routes/error','parentId':'root','path':'error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/error-NIUXO7HT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/event.$eventId':{'id':'routes/event.$eventId','parentId':'root','path':'event/:eventId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/event.$eventId-KDFU2WRY.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/event.$eventId.destroy':{'id':'routes/event.$eventId.destroy','parentId':'routes/event.$eventId','path':'destroy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/event.$eventId.destroy-IHPZH4G4.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/event.$eventId_.update':{'id':'routes/event.$eventId_.update','parentId':'root','path':'event/:eventId/update','index':undefined,'caseSensitive':undefined,'module':'/build/routes/event.$eventId_.update-GTZP3OIT.js','imports':['/build/_shared/chunk-SDEB5LWC.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/event._index':{'id':'routes/event._index','parentId':'root','path':'event','index':true,'caseSensitive':undefined,'module':'/build/routes/event._index-V62S7QVX.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-4HUAJPKT.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/locations':{'id':'routes/locations','parentId':'root','path':'locations','index':undefined,'caseSensitive':undefined,'module':'/build/routes/locations-ESQVA4YO.js','imports':['/build/_shared/chunk-SDEB5LWC.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/main-dashboard':{'id':'routes/main-dashboard','parentId':'root','path':'main-dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/main-dashboard-PRIIJ26Z.js','imports':['/build/_shared/chunk-7Y7WWHAI.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/profile.$userId':{'id':'routes/profile.$userId','parentId':'root','path':'profile/:userId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.$userId-HM2VX32K.js','imports':['/build/_shared/chunk-XNCNTYHY.js','/build/_shared/chunk-7LAK5SQQ.js','/build/_shared/chunk-4HUAJPKT.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/profile.$userId_.update':{'id':'routes/profile.$userId_.update','parentId':'root','path':'profile/:userId/update','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.$userId_.update-C3XTC2KP.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/signin':{'id':'routes/signin','parentId':'root','path':'signin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signin-LT6QYJEK.js','imports':['/build/_shared/chunk-QUYRSHBJ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-YWOEDCRV.js','imports':['/build/_shared/chunk-QUYRSHBJ.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/userProfile.$userId':{'id':'routes/userProfile.$userId','parentId':'root','path':'userProfile/:userId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/userProfile.$userId-6ZOAERG6.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-7LAK5SQQ.js','/build/_shared/chunk-4HUAJPKT.js','/build/_shared/chunk-4NQDUYEK.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'b75cdf93','hmr':{'runtime':'/build/_shared/chunk-YSFSRWXX.js','timestamp':1736281619852},'url':'/build/manifest-B75CDF93.js'};", "\nimport * as entryServer from \"/Users/nicolaidigenielsen/Library/Mobile Documents/com~apple~CloudDocs/Documents/GitHub/surfapp/app/entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/profile.$userId_.update.jsx\";\nimport * as route2 from \"./routes/event.$eventId.destroy.jsx\";\nimport * as route3 from \"./routes/event.$eventId_.update.jsx\";\nimport * as route4 from \"./routes/userProfile.$userId.jsx\";\nimport * as route5 from \"./routes/dashboard._index.jsx\";\nimport * as route6 from \"./routes/profile.$userId.jsx\";\nimport * as route7 from \"./routes/event.$eventId.jsx\";\nimport * as route8 from \"./routes/main-dashboard.jsx\";\nimport * as route9 from \"./routes/event._index.jsx\";\nimport * as route10 from \"./routes/add-event.jsx\";\nimport * as route11 from \"./routes/locations.jsx\";\nimport * as route12 from \"./routes/add-post.jsx\";\nimport * as route13 from \"./routes/_index.jsx\";\nimport * as route14 from \"./routes/signin.jsx\";\nimport * as route15 from \"./routes/signup.jsx\";\nimport * as route16 from \"./routes/error.jsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/profile.$userId_.update\": {\n      id: \"routes/profile.$userId_.update\",\n      parentId: \"root\",\n      path: \"profile/:userId/update\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/event.$eventId.destroy\": {\n      id: \"routes/event.$eventId.destroy\",\n      parentId: \"routes/event.$eventId\",\n      path: \"destroy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/event.$eventId_.update\": {\n      id: \"routes/event.$eventId_.update\",\n      parentId: \"root\",\n      path: \"event/:eventId/update\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/userProfile.$userId\": {\n      id: \"routes/userProfile.$userId\",\n      parentId: \"root\",\n      path: \"userProfile/:userId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/dashboard._index\": {\n      id: \"routes/dashboard._index\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/profile.$userId\": {\n      id: \"routes/profile.$userId\",\n      parentId: \"root\",\n      path: \"profile/:userId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/event.$eventId\": {\n      id: \"routes/event.$eventId\",\n      parentId: \"root\",\n      path: \"event/:eventId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/main-dashboard\": {\n      id: \"routes/main-dashboard\",\n      parentId: \"root\",\n      path: \"main-dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/event._index\": {\n      id: \"routes/event._index\",\n      parentId: \"root\",\n      path: \"event\",\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/add-event\": {\n      id: \"routes/add-event\",\n      parentId: \"root\",\n      path: \"add-event\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/locations\": {\n      id: \"routes/locations\",\n      parentId: \"root\",\n      path: \"locations\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/add-post\": {\n      id: \"routes/add-post\",\n      parentId: \"root\",\n      path: \"add-post\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/signin\": {\n      id: \"routes/signin\",\n      parentId: \"root\",\n      path: \"signin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/error\": {\n      id: \"routes/error\",\n      parentId: \"root\",\n      path: \"error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    }\n  };"],
  "mappings": "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",
  "names": ["mongoose", "mongoose", "bcrypt", "mongoose", "bcrypt", "User", "Event", "mongoose", "jsxDEV", "NavLink", "jsxDEV", "Nav", "jsxDEV", "NavLink", "jsxDEV", "jsxDEV", "Nav", "loader", "mongoose", "useLoaderData", "useEffect", "useRef", "useState", "jsxDEV", "loader", "mongoose", "useLoaderData", "action", "loader", "mongoose", "loader", "action", "mongoose", "action", "loader", "useEffect", "useRef", "useState", "useLoaderData", "useNavigate", "Form", "mongoose", "json", "redirect", "jsxDEV", "jsxDEV", "loader", "googleMapsApiKey", "mongoose", "redirect", "json", "useLoaderData", "useState", "useRef", "useNavigate", "useEffect", "Form", "action", "action", "loader", "useLoaderData", "json", "redirect", "useState", "mongoose", "useEffect", "useState", "jsxDEV", "jsxDEV", "loader", "redirect", "googleMapsApiKey", "mongoose", "json", "action", "useLoaderData", "useState", "loader", "meta", "useState", "json", "Link", "useLoaderData", "mongoose", "useEffect", "useState", "Fragment", "jsxDEV", "jsxDEV", "useState", "useEffect", "city", "apiKey", "error", "useEffect", "useState", "axios", "useLoaderData", "jsxDEV", "EventCard", "googleMapsApiKey", "jsxDEV", "meta", "loader", "googleMapsApiKey", "mongoose", "json", "useLoaderData", "useState", "Link", "EventCard", "action", "loader", "Form", "useLoaderData", "mongoose", "Link", "useState", "Fragment", "jsxDEV", "loader", "googleMapsApiKey", "mongoose", "action", "useLoaderData", "Form", "EventCard", "user", "action", "loader", "meta", "Form", "useLoaderData", "json", "redirect", "mongoose", "useEffect", "useState", "useRef", "NavLink", "jsxDEV", "MAP_ID", "meta", "loader", "googleMapsApiKey", "mongoose", "json", "action", "Event", "redirect", "useLoaderData", "useState", "useRef", "useEffect", "Form", "loader", "meta", "NavLink", "redirect", "useLoaderData", "json", "jsxDEV", "meta", "loader", "redirect", "NavLink", "Index", "loader", "meta", "json", "Form", "Link", "useLoaderData", "mongoose", "useState", "useEffect", "useState", "axios", "useLoaderData", "jsxDEV", "googleMapsApiKey", "jsxDEV", "meta", "loader", "googleMapsApiKey", "mongoose", "json", "Index", "useLoaderData", "useState", "Form", "Link", "action", "loader", "useEffect", "useRef", "useState", "useNavigate", "Form", "GoogleMap", "useJsApiLoader", "mongoose", "redirect", "useLoaderData", "jsxDEV", "MAP_ID", "loader", "googleMapsApiKey", "useState", "useRef", "useNavigate", "useJsApiLoader", "useEffect", "Form", "GoogleMap", "action", "loader", "useLoaderData", "useEffect", "useRef", "useState", "useJsApiLoader", "jsxDEV", "mongoose", "json", "jsxDEV", "loader", "googleMapsApiKey", "useLoaderData", "action", "loader", "meta", "redirect", "Form", "useNavigate", "mongoose", "useState", "jsxDEV", "meta", "loader", "useState", "useNavigate", "Form", "action", "mongoose", "redirect", "loader", "meta", "meta", "loader", "action", "loader", "json", "Form", "NavLink", "useLoaderData", "jsxDEV", "loader", "json", "useLoaderData", "Form", "NavLink", "action", "action", "loader", "json", "redirect", "Form", "NavLink", "useLoaderData", "mongoose", "useState", "useRef", "useEffect", "jsxDEV", "loader", "json", "useLoaderData", "Form", "NavLink", "action", "mongoose", "redirect", "Link", "Fragment", "jsxDEV"]
}
